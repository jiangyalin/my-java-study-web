/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/asn/newinit': {
    get: operations['ASN_NewInit'];
  };
  '/asn/save': {
    post: operations['ASN_SaveOrder'];
  };
  '/asn/del': {
    post: operations['ASN_DeleteOrder'];
  };
  '/asn/auditaction': {
    post: operations['ASN_AuditOrder'];
  };
  '/asn/codes': {
    get: operations['ASN_QueryCodeSelect'];
  };
  '/asn/info': {
    post: operations['ASN_QueryInfo'];
  };
  '/asn/page': {
    post: operations['ASN_QueryPage'];
  };
  '/asn/confirm': {
    post: operations['ASN_Confirm'];
  };
  '/asn/dynamicsave': {
    post: operations['ASN_DynamicSave'];
  };
  '/asn/dynamicList': {
    get: operations['ASN_QueryASNDynamicDtos'];
  };
  '/asn/delivery': {
    post: operations['ASN_ASNDelivery'];
  };
  '/asn/print': {
    post: operations['ASN_ASNPrint'];
  };
  '/asn/boxprint': {
    post: operations['ASN_AsnBoxRawCode'];
  };
  '/barcode/rawcode': {
    post: operations['BarCode_Save'];
  };
  '/barcode/updqty': {
    post: operations['BarCode_UpdCodeQty'];
  };
  '/barcode/copy': {
    post: operations['BarCode_BarCodeCopy'];
  };
  '/barcode/print': {
    post: operations['BarCode_PrintCode'];
  };
  '/barcode/delete': {
    post: operations['BarCode_DataDel'];
  };
  '/barcode/page': {
    post: operations['BarCode_QueryPage'];
  };
  '/barcode/codeinfo': {
    get: operations['BarCode_QueryBarCodeInfo'];
  };
  '/barcode/stockrawcode': {
    post: operations['BarCode_StockRawCode'];
  };
  '/barcode/sourcepage': {
    post: operations['BarCode_QueryDataSourcePage'];
  };
  '/barcode/sourcesave': {
    post: operations['BarCode_DataSourceSave'];
  };
  '/barcode/sourcedel': {
    post: operations['BarCode_SourceDel'];
  };
  '/capacity/save': {
    post: operations['CapacityCompare_Save'];
  };
  '/capacity/delete': {
    post: operations['CapacityCompare_BlukDelete'];
  };
  '/capacity/info': {
    post: operations['CapacityCompare_QueryInfo'];
  };
  '/capacity/detail': {
    post: operations['CapacityCompare_QueryDetail'];
  };
  '/capacity/codes': {
    get: operations['CapacityCompare_QueryCodes'];
  };
  '/capacity/page': {
    post: operations['CapacityCompare_QueryPage'];
  };
  '/capacity/export': {
    post: operations['CapacityCompare_ExportData'];
  };
  '/checkdetail/canchecktasknums': {
    get: operations['CheckDetail_QueryCanCheckTaskNums'];
  };
  '/checkdetail/tasknumcheck': {
    get: operations['CheckDetail_TaskNumCheck'];
  };
  '/checkdetail/labelnumcheck': {
    get: operations['CheckDetail_LabelNumCheck'];
  };
  '/checkdetail/add': {
    post: operations['CheckDetail_AddRecord'];
  };
  '/checkdetail/upd': {
    post: operations['CheckDetail_UpdRecord'];
  };
  '/checkdetail/delete': {
    post: operations['CheckDetail_Delete'];
  };
  '/checkdetail/pdapage': {
    post: operations['CheckDetail_QueryPdaPage'];
  };
  '/checkdetail/page': {
    post: operations['CheckDetail_QueryPage'];
  };
  '/checkdetail/exltmpl': {
    get: operations['CheckDetail_QueryImportTmp'];
  };
  '/checkdetail/import': {
    post: operations['CheckDetail_ImportData'];
  };
  '/checkdetail/export': {
    post: operations['CheckDetail_ExportData'];
  };
  '/checksummary/getcode': {
    get: operations['CheckSummary_GetCode'];
  };
  '/checksummary/delete': {
    post: operations['CheckSummary_DeleteData'];
  };
  '/checksummary/tasknumselect': {
    get: operations['CheckSummary_QueryTaskNumSelect'];
  };
  '/checksummary/whselect': {
    get: operations['CheckSummary_QueryWhSelect'];
  };
  '/checksummary/querypendingrecords': {
    post: operations['CheckSummary_QueryPendingRecords'];
  };
  '/checksummary/calcsummary': {
    post: operations['CheckSummary_CalcSummaryList'];
  };
  '/checksummary/add': {
    post: operations['CheckSummary_SaveData'];
  };
  '/checksummary/update': {
    post: operations['CheckSummary_UpdateData'];
  };
  '/checksummary/info': {
    post: operations['CheckSummary_QueryInfo'];
  };
  '/checksummary/page': {
    post: operations['CheckSummary_QueryPage'];
  };
  '/checksummary/export': {
    post: operations['CheckSummary_ExportData'];
  };
  '/checksummary/whcheck': {
    get: operations['CheckSummary_WhCheck'];
  };
  '/checksummary/doaudit': {
    post: operations['CheckSummary_DoAudit'];
  };
  '/checksummary/codes': {
    get: operations['CheckSummary_QueryCodes'];
  };
  '/checktask/save': {
    post: operations['CheckTask_Save'];
  };
  '/checktask/updtaskstate': {
    post: operations['CheckTask_UpdTaskState'];
  };
  '/checktask/delete': {
    post: operations['CheckTask_Delete'];
  };
  '/checktask/gettasknum': {
    get: operations['CheckTask_GetTaskNum'];
  };
  '/checktask/page': {
    post: operations['CheckTask_QueryPage'];
  };
  '/checktask/tasknums': {
    get: operations['CheckTask_QueryTaskNumsSelect'];
  };
  '/checkd/stagdata': {
    post: operations['CheckVouch_QueryStagList'];
  };
  '/checkd/clearstag': {
    post: operations['CheckVouch_ClearStag'];
  };
  '/checkd/save': {
    post: operations['CheckVouch_VouchSave'];
  };
  '/dashboard/constidx/savejson': {
    post: operations['Dashboard_ConstIdxSaveJson'];
  };
  '/dashboard/baolu': {
    get: operations['Dashboard_QueryBaoLuDashboardData'];
  };
  '/device/save': {
    post: operations['Device_Save'];
  };
  '/device/delete': {
    post: operations['Device_DicDataDel'];
  };
  '/device/info': {
    get: operations['Device_QueryInfo'];
  };
  '/device/page': {
    post: operations['Device_QueryPage'];
  };
  '/device/export': {
    post: operations['Device_ExportData'];
  };
  '/device/typetree': {
    get: operations['Device_QueryTree'];
  };
  '/device/queryWorkShopOpDevice': {
    post: operations['Device_QueryWorkShopOpDevice'];
  };
  '/faultclass/save': {
    post: operations['FaultClass_Save'];
  };
  '/faultclass/delete': {
    post: operations['FaultClass_DicDataDel'];
  };
  '/faultclass/info': {
    get: operations['FaultClass_QueryInfo'];
  };
  '/faultclass/page': {
    post: operations['FaultClass_QueryPage'];
  };
  '/faultclass/treeSelect': {
    get: operations['FaultClass_QueryTypeTreeSelect'];
  };
  '/faultclass/export': {
    post: operations['FaultClass_ExportData'];
  };
  '/hymo/issueList': {
    post: operations['HyMoOrder_QueryHyMoIssueList'];
  };
  '/hymo/reviceList': {
    post: operations['HyMoOrder_QueryHyReviceList'];
  };
  '/hymo/scanQuery': {
    post: operations['HyMoOrder_QueryHyMoOrderInfo'];
  };
  '/hymo/reviceScanQuery': {
    post: operations['HyMoOrder_QueryHyReviceScanInfo'];
  };
  '/hymo/save': {
    post: operations['HyMoOrder_HyMoOrderSave'];
  };
  '/hymo/reviceSave': {
    post: operations['HyMoOrder_HyMoReviceSave'];
  };
  '/hymo/queryReviceScrapPage': {
    post: operations['HyMoOrder_QueryReviceScrapPage'];
  };
  '/leavedoc/page': {
    post: operations['LeaveDoc_QueryPage'];
  };
  '/leavedoc/save': {
    post: operations['LeaveDoc_LeaveDocSave'];
  };
  '/leavedoc/del': {
    post: operations['LeaveDoc_LeaveDocDel'];
  };
  '/leavedoc/init': {
    get: operations['LeaveDoc_Init'];
  };
  '/leavedoc/export': {
    post: operations['LeaveDoc_ExportData'];
  };
  '/login/acclist': {
    post: operations['Login_GetAccList'];
  };
  '/login/dologin': {
    post: operations['Login_DoLogin'];
  };
  '/login/licencebind': {
    post: operations['Login_DeviceAuth'];
  };
  '/login/querypdaauthlist': {
    get: operations['Login_QueryPdaAuthList'];
  };
  '/login/licenceunbind': {
    post: operations['Login_LicenceUnBind'];
  };
  '/login/updatepdaremark': {
    get: operations['Login_UpdatePdaRemark'];
  };
  '/login/logout': {
    post: operations['Login_LogOut'];
  };
  '/login/keepalive': {
    post: operations['Login_KeepAlive'];
  };
  '/mold/save': {
    post: operations['Mold_Save'];
  };
  '/mold/delete': {
    post: operations['Mold_DicDataDel'];
  };
  '/mold/info': {
    get: operations['Mold_QueryInfo'];
  };
  '/mold/page': {
    post: operations['Mold_QueryPage'];
  };
  '/mold/export': {
    post: operations['Mold_ExportData'];
  };
  '/mold/codeview': {
    post: operations['Mold_RawCode'];
  };
  '/mold/typetree': {
    get: operations['Mold_QueryTree'];
  };
  '/momaps/nocompareplanlist': {
    post: operations['MomAPS_QueryNoComparePlanList'];
  };
  '/momaps/planlist': {
    post: operations['MomAPS_QueryAPSPlanList'];
  };
  '/momaps/workshoplist': {
    post: operations['MomAPS_QueryAPSWorkShopList'];
  };
  '/momaps/reslist': {
    post: operations['MomAPS_QueryResList'];
  };
  '/momaps/autoaps': {
    post: operations['MomAPS_MomAutoAPS'];
  };
  '/momaps/resinfo': {
    post: operations['MomAPS_QueryResInfo'];
  };
  '/momaps/mainlist': {
    post: operations['MomAPS_QueryMainList'];
  };
  '/momaps/apslistbyapsid': {
    get: operations['MomAPS_QueryAPSInfoList'];
  };
  '/momaps/delete': {
    post: operations['MomAPS_APSDelete'];
  };
  '/momaps/docinfo': {
    post: operations['MomAPS_QueryDocInfo'];
  };
  '/momaps/canshiftapslist': {
    post: operations['MomAPS_QueryCanShiftApsList'];
  };
  '/momaps/save': {
    post: operations['MomAPS_ApsSave'];
  };
  '/momaps/effectlist': {
    post: operations['MomAPS_QueryInsertEffectList'];
  };
  '/momplanissue/momissuedetails': {
    post: operations['MomPlanIssue_QueryMomIssueDetailList'];
  };
  '/momplanissue/add': {
    post: operations['MomPlanIssue_Save'];
  };
  '/momplanissue/jhxdmrpdetails': {
    post: operations['MomPlanIssue_QueryJHXDMrpList'];
  };
  '/momplanissue/save': {
    post: operations['MomPlanIssue_DYPlanSave'];
  };
  '/momplanissue/edit': {
    post: operations['MomPlanIssue_PlanEdit'];
  };
  '/momplanissue/delete': {
    post: operations['MomPlanIssue_DicDataDel'];
  };
  '/momplanissue/info': {
    post: operations['MomPlanIssue_QueryInfo'];
  };
  '/momplanissue/page': {
    post: operations['MomPlanIssue_QueryPage'];
  };
  '/momplanissue/rawcode': {
    post: operations['MomPlanIssue_RawCode'];
  };
  '/momplanissue/close': {
    post: operations['MomPlanIssue_PlanClose'];
  };
  '/momplanissue/open': {
    post: operations['MomPlanIssue_PlanOpen'];
  };
  '/momplanissue/prospect': {
    post: operations['MomPlanIssue_ProSpect'];
  };
  '/momplanissue/prospectexport': {
    post: operations['MomPlanIssue_ProSpectExport'];
  };
  '/momplanissue/export': {
    post: operations['MomPlanIssue_PlanExport'];
  };
  '/momplanissue/allocateissuelist': {
    post: operations['MomPlanIssue_QueryMoAllocateIssueList'];
  };
  '/momplanissue/printmaterialapp': {
    post: operations['MomPlanIssue_PrintMaterialApp'];
  };
  '/momrd/rdinfo': {
    post: operations['MomRd_QueryMomRdInfo'];
  };
  '/momrd/waitauditlist': {
    get: operations['MomRd_QueryMomRdWaitAuditList'];
  };
  '/momrd/audit': {
    post: operations['MomRd_MomRdAudit'];
  };
  '/momshift/momplandetails': {
    post: operations['MomShift_QueryMomIssueDetailList'];
  };
  '/momshift/save': {
    post: operations['MomShift_Save'];
  };
  '/momshift/delete': {
    post: operations['MomShift_ShiftDel'];
  };
  '/momshift/info': {
    post: operations['MomShift_QueryInfo'];
  };
  '/momshift/page': {
    post: operations['MomShift_QueryPage'];
  };
  '/momshift/audit': {
    post: operations['MomShift_DoAudit'];
  };
  '/momshift/getcode': {
    get: operations['MomShift_GetNewCode'];
  };
  '/momshift/close': {
    post: operations['MomShift_MomShiftClose'];
  };
  '/momshift/codes': {
    get: operations['MomShift_QueryCodes'];
  };
  '/momshift/taskpage': {
    post: operations['MomShift_QueryShiftTaskList'];
  };
  '/momshift/querytransdata': {
    post: operations['MomShift_QueryShiftTransData'];
  };
  '/momshift/print': {
    post: operations['MomShift_MomShiftPrint'];
  };
  '/momshift/rawcode': {
    post: operations['MomShift_MomShiftFlowCardRawCode'];
  };
  '/mobill/page': {
    post: operations['MoRoutingBill_QueryPage'];
  };
  '/mobill/delete': {
    post: operations['MoRoutingBill_MoRoutingBillDel'];
  };
  '/mobill/info': {
    post: operations['MoRoutingBill_QueryInfo'];
  };
  '/mobill/codes': {
    get: operations['MoRoutingBill_QueryCodes'];
  };
  '/mobill/export': {
    post: operations['MoRoutingBill_ExportData'];
  };
  '/omorder/newinit': {
    get: operations['OMOrder_NewInit'];
  };
  '/omorder/save': {
    post: operations['OMOrder_SaveOrder'];
  };
  '/omorder/del': {
    post: operations['OMOrder_DeleteOrder'];
  };
  '/omorder/auditaction': {
    post: operations['OMOrder_AuditOrder'];
  };
  '/omorder/codes': {
    get: operations['OMOrder_QueryCodeSelect'];
  };
  '/omorder/info': {
    post: operations['OMOrder_QueryInfo'];
  };
  '/omorder/page': {
    post: operations['OMOrder_QueryPage'];
  };
  '/operation/save': {
    post: operations['Operation_Save'];
  };
  '/operation/delete': {
    post: operations['Operation_DicDataDel'];
  };
  '/operation/info': {
    get: operations['Operation_QueryInfo'];
  };
  '/operation/page': {
    post: operations['Operation_QueryPage'];
  };
  '/opgroup/save': {
    post: operations['OpGroup_Save'];
  };
  '/opgroup/delete': {
    post: operations['OpGroup_DicDataDel'];
  };
  '/opgroup/info': {
    post: operations['OpGroup_QueryInfo'];
  };
  '/opgroup/page': {
    post: operations['OpGroup_QueryPage'];
  };
  '/opgroup/oplist': {
    get: operations['OpGroup_QueryDetailList'];
  };
  '/opinspect/qcaction': {
    post: operations['OpInspect_OpInspectQcAction'];
  };
  '/opinspect/task/page': {
    post: operations['OpInspect_QueryTaskPage'];
  };
  '/opinspect/task/export': {
    post: operations['OpInspect_ExportTaskData'];
  };
  '/otherout/save': {
    post: operations['OtherOut_Save'];
  };
  '/otherout/nochecklist': {
    get: operations['OtherOut_QueryNoCheckList'];
  };
  '/otherout/info': {
    get: operations['OtherOut_QueryInfo'];
  };
  '/otherout/check': {
    post: operations['OtherOut_Check'];
  };
  '/otherrd/save': {
    post: operations['OtherRd_Save'];
  };
  '/otherrd/nochecklist': {
    get: operations['OtherRd_QueryNoCheckList'];
  };
  '/otherrd/info': {
    get: operations['OtherRd_QueryInfo'];
  };
  '/otherrd/check': {
    post: operations['OtherRd_Check'];
  };
  '/piecequote/exltmpl': {
    get: operations['PieceQuote_QueryPieceQuoteImportTmp'];
  };
  '/piecequote/save': {
    post: operations['PieceQuote_SaveData'];
  };
  '/piecequote/del': {
    post: operations['PieceQuote_Delete'];
  };
  '/piecequote/info': {
    get: operations['PieceQuote_QueryInfo'];
  };
  '/piecequote/page': {
    post: operations['PieceQuote_QueryPage'];
  };
  '/piecequote/import': {
    post: operations['PieceQuote_ImportData'];
  };
  '/piecequote/export': {
    post: operations['PieceQuote_ExportData'];
  };
  '/piecewage/calc': {
    post: operations['PieceWage_PieceWageCalc'];
  };
  '/piecewage/recalc': {
    post: operations['PieceWage_PieceWageReCalc'];
  };
  '/piecewage/del': {
    post: operations['PieceWage_PieceWageDel'];
  };
  '/piecewage/doaudit': {
    post: operations['PieceWage_DoAudit'];
  };
  '/piecewage/mainlist': {
    post: operations['PieceWage_QueryMainList'];
  };
  '/piecewage/detaildel': {
    post: operations['PieceWage_DetailDel'];
  };
  '/piecewage/detaillist': {
    post: operations['PieceWage_QueryDetailList'];
  };
  '/piecewage/detailedit': {
    post: operations['PieceWage_PieceWageDetailUpdate'];
  };
  '/piecewage/report': {
    post: operations['PieceWage_QueryPieceWageReport'];
  };
  '/platconfig/save': {
    post: operations['PlatConfig_Save'];
  };
  '/platconfig/info': {
    post: operations['PlatConfig_QueryInfo'];
  };
  '/platconfig/list': {
    post: operations['PlatConfig_QueryList'];
  };
  '/poorder/newinit': {
    get: operations['PoOrder_NewInit'];
  };
  '/poorder/save': {
    post: operations['PoOrder_SaveOrder'];
  };
  '/poorder/del': {
    post: operations['PoOrder_DeleteOrder'];
  };
  '/poorder/auditaction': {
    post: operations['PoOrder_AuditOrder'];
  };
  '/poorder/codes': {
    get: operations['PoOrder_QueryCodeSelect'];
  };
  '/poorder/info': {
    post: operations['PoOrder_QueryInfo'];
  };
  '/poorder/page': {
    post: operations['PoOrder_QueryPage'];
  };
  '/pord/venCodeInfo': {
    post: operations['PoRd_QueryVenBarCodeInfo'];
  };
  '/pord/orderArrRdSave': {
    post: operations['PoRd_OrderArrRdSave'];
  };
  '/pord/arrinfo': {
    post: operations['PoRd_QueryArrInfo'];
  };
  '/pord/save': {
    post: operations['PoRd_PoRd'];
  };
  '/prouting/save': {
    post: operations['PRouting_Save'];
  };
  '/prouting/delete': {
    post: operations['PRouting_DicDataDel'];
  };
  '/prouting/info': {
    post: operations['PRouting_QueryInfo'];
  };
  '/prouting/page': {
    post: operations['PRouting_QueryPage'];
  };
  '/prouting/audit': {
    post: operations['PRouting_DoAudit'];
  };
  '/prouting/select': {
    get: operations['PRouting_QueryPRoutingSelectDtos'];
  };
  '/public/appupgrade': {
    post: operations['Public_AppUpgrade'];
  };
  '/public/tasklicence': {
    get: operations['Public_TaskLicence'];
  };
  '/public/test': {
    get: operations['Public_Test'];
  };
  '/public/testu8login': {
    post: operations['Public_TestU8Login'];
  };
  '/public/testdomainacclogin': {
    post: operations['Public_TestDomainAccLogin'];
  };
  '/public/scentity': {
    post: operations['Public_SCEntity'];
  };
  '/public/uploadFile': {
    post: operations['Public_UploadFile'];
  };
  '/public/health': {
    get: operations['Public_Health'];
  };
  '/qcindex/save': {
    post: operations['QcIndex_Save'];
  };
  '/qcindex/delete': {
    post: operations['QcIndex_DicDataDel'];
  };
  '/qcindex/page': {
    post: operations['QcIndex_QueryPage'];
  };
  '/qcindex/export': {
    post: operations['QcIndex_ExportData'];
  };
  '/qcinspect/deploy/page': {
    post: operations['QcInspect_QueryDeployPage'];
  };
  '/qcinspect/deploy/save': {
    post: operations['QcInspect_SaveQcInspectDeploy'];
  };
  '/qcinspect/deploy/del': {
    post: operations['QcInspect_DeployDel'];
  };
  '/qcinspect/task/page': {
    post: operations['QcInspect_QueryTaskPage'];
  };
  '/qcinspect/task/save': {
    post: operations['QcInspect_SaveQcInspectTask'];
  };
  '/qcinspect/task/del': {
    post: operations['QcInspect_TaskDel'];
  };
  '/qcinspect/task/close': {
    post: operations['QcInspect_TaskClose'];
  };
  '/qcinspect/task/inspect': {
    post: operations['QcInspect_TaskInspectFinlish'];
  };
  '/qcinspect/task/queryPlanFlowCardInfo': {
    get: operations['QcInspect_QueryPlanFlowCardInfo'];
  };
  '/qcinspect/task/codepage': {
    post: operations['QcInspect_QueryQcInspectTaskBarCodes'];
  };
  '/qcitem/save': {
    post: operations['QcItem_Save'];
  };
  '/qcitem/delete': {
    post: operations['QcItem_DicDataDel'];
  };
  '/qcitem/page': {
    post: operations['QcItem_QueryPage'];
  };
  '/qcitem/export': {
    post: operations['QcItem_ExportData'];
  };
  '/report/molds': {
    post: operations['Report_QueryMoldReport'];
  };
  '/report/devices': {
    post: operations['Report_QueryDeviceReport'];
  };
  '/report/moopreport': {
    post: operations['Report_QueryMoOpReport'];
  };
  '/report/moallcates': {
    post: operations['Report_QueryMoAllcateLit'];
  };
  '/report/planreport': {
    post: operations['Report_QueryPlanReport'];
  };
  '/saleout/saleDisInfo': {
    get: operations['SaleOut_QuerySaleOrderDisInfo'];
  };
  '/saleout/saleDisOut': {
    post: operations['SaleOut_SaleOrderDisOut'];
  };
  '/saleout/disinfo': {
    post: operations['SaleOut_QueryDisInfo'];
  };
  '/saleout/codeinfo': {
    get: operations['SaleOut_QueryBarCodeInfo'];
  };
  '/saleout/save': {
    post: operations['SaleOut_SaleOut'];
  };
  '/saleout/nochecklist': {
    get: operations['SaleOut_QueryNoChecOutkList'];
  };
  '/saleout/info': {
    get: operations['SaleOut_QuerySaleOutInfo'];
  };
  '/shiftcalendar/save': {
    post: operations['ShiftCalendar_Save'];
  };
  '/shiftcalendar/delete': {
    post: operations['ShiftCalendar_BlukDelete'];
  };
  '/shiftcalendar/info': {
    post: operations['ShiftCalendar_QueryInfo'];
  };
  '/shiftcalendar/list': {
    post: operations['ShiftCalendar_QueryPage'];
  };
  '/shiftcalendar/export': {
    post: operations['ShiftCalendar_ExportData'];
  };
  '/station/save': {
    post: operations['Station_Save'];
  };
  '/station/delete': {
    post: operations['Station_DicDataDel'];
  };
  '/station/page': {
    post: operations['Station_QueryPage'];
  };
  '/sysapp/save': {
    post: operations['SysApp_SaveData'];
  };
  '/sysapp/del': {
    post: operations['SysApp_DeleteData'];
  };
  '/sysapp/list': {
    get: operations['SysApp_QueryList'];
  };
  '/sysauth/roles': {
    post: operations['SysAuth_QueryRoleList'];
  };
  '/sysauth/roleassusers': {
    post: operations['SysAuth_QueryUserAuthTree'];
  };
  '/sysauth/roleauthtree': {
    post: operations['SysAuth_QueryRoleAuthTree'];
  };
  '/sysauth/del': {
    post: operations['SysAuth_AuthDel'];
  };
  '/sysdic/typeadd': {
    post: operations['SysDic_DicTypeAdd'];
  };
  '/sysdic/typeupdate': {
    post: operations['SysDic_DicTypeUpdate'];
  };
  '/sysdic/typepage': {
    post: operations['SysDic_DicTypePage'];
  };
  '/sysdic/typedel': {
    post: operations['SysDic_DicTypeDel'];
  };
  '/sysdic/typetree': {
    get: operations['SysDic_QueryTypeTreeSelect'];
  };
  '/sysdic/save': {
    post: operations['SysDic_Save'];
  };
  '/sysdic/del': {
    post: operations['SysDic_DicDataDel'];
  };
  '/sysdic/page': {
    post: operations['SysDic_QueryPage'];
  };
  '/sysdic/select': {
    get: operations['SysDic_QuerySelect'];
  };
  '/ipwhite/save': {
    post: operations['SysIpWhite_SaveData'];
  };
  '/ipwhite/del': {
    post: operations['SysIpWhite_DeleteData'];
  };
  '/ipwhite/list': {
    get: operations['SysIpWhite_QueryList'];
  };
  '/sysmenu/save': {
    post: operations['SysMenu_Save'];
  };
  '/sysmenu/del': {
    post: operations['SysMenu_DicDataDel'];
  };
  '/sysmenu/page': {
    post: operations['SysMenu_QueryPage'];
  };
  '/sysmenu/treegrid': {
    post: operations['SysMenu_QueryMenuTreeList'];
  };
  '/sysmenu/tree': {
    get: operations['SysMenu_QueryTypeTreeSelect'];
  };
  '/sysrole/save': {
    post: operations['SysRole_Save'];
  };
  '/sysrole/del': {
    post: operations['SysRole_DicDataDel'];
  };
  '/sysrole/page': {
    post: operations['SysRole_QueryPage'];
  };
  '/sysrole/select': {
    get: operations['SysRole_QuerySelectDtos'];
  };
  '/sysrole/rolepersonass': {
    post: operations['SysRole_RolePersonAss'];
  };
  '/sysrole/asspersons': {
    get: operations['SysRole_QueryPersons'];
  };
  '/sysrole/authority': {
    post: operations['SysRole_RoleAuthority'];
  };
  '/sysrole/authtree': {
    get: operations['SysRole_QueryAuthTree'];
  };
  '/sysrole/authitems': {
    get: operations['SysRole_QueryAuthMenuIds'];
  };
  '/sysuser/page': {
    post: operations['SysUser_QueryPage'];
  };
  '/sysuser/userauthtree': {
    get: operations['SysUser_QueryUserAuthTree'];
  };
  '/sysuser/userauthdata': {
    get: operations['SysUser_QueryAuthDto'];
  };
  '/sysuser/userauthbtns': {
    get: operations['SysUser_QueryUserAuthBtns'];
  };
  '/task/list': {
    post: operations['Task_QueryTaskList'];
  };
  '/task/opgroupselect': {
    post: operations['Task_QueryOpGroupSelect'];
  };
  '/task/action': {
    post: operations['Task_TaskAction'];
  };
  '/team/save': {
    post: operations['TeamGroup_Save'];
  };
  '/team/delete': {
    post: operations['TeamGroup_DicDataDel'];
  };
  '/team/page': {
    post: operations['TeamGroup_QueryPage'];
  };
  '/team/export': {
    post: operations['TeamGroup_ExportData'];
  };
  '/team/exportPers': {
    post: operations['TeamGroup_ExportPersonData'];
  };
  '/team/select': {
    get: operations['TeamGroup_QueryTeamSelect'];
  };
  '/team/perallotment': {
    post: operations['TeamGroup_PersonAllotment'];
  };
  '/team/asspersons': {
    post: operations['TeamGroup_QueryTeamPersons'];
  };
  '/team/delteampersons': {
    post: operations['TeamGroup_DeleteTeamPerson'];
  };
  '/teamshift/save': {
    post: operations['TeamShift_Save'];
  };
  '/teamshift/delete': {
    post: operations['TeamShift_BlukDelete'];
  };
  '/teamshift/page': {
    post: operations['TeamShift_QueryPage'];
  };
  '/teamshift/export': {
    post: operations['TeamShift_ExportData'];
  };
  '/teamshift/select': {
    get: operations['TeamShift_QuerySelect'];
  };
  '/TemTransferDoc/page': {
    post: operations['TemTransferDoc_QueryPage'];
  };
  '/TemTransferDoc/save': {
    post: operations['TemTransferDoc_TemTransferDocSave'];
  };
  '/TemTransferDoc/del': {
    post: operations['TemTransferDoc_TemTransferDocDel'];
  };
  '/TemTransferDoc/init': {
    get: operations['TemTransferDoc_Init'];
  };
  '/TemTransferDoc/export': {
    post: operations['TemTransferDoc_ExportData'];
  };
  '/trans/whlist': {
    get: operations['TransVouch_WHList'];
  };
  '/trans/whinvposstock': {
    post: operations['TransVouch_QueryWhInvPosStock'];
  };
  '/trans/poslist': {
    get: operations['TransVouch_QueryPosList'];
  };
  '/trans/save': {
    post: operations['TransVouch_TransVouchSave'];
  };
  '/trans/audit': {
    post: operations['TransVouch_TransVouchAudit'];
  };
  '/trans/waitauditlist': {
    get: operations['TransVouch_QueryWaitAuditList'];
  };
  '/trans/info': {
    get: operations['TransVouch_QueryTVInfo'];
  };
  '/ufmanage/workcenters': {
    get: operations['UFManage_QueryWorkCenters'];
  };
  '/ufmanage/deplist': {
    get: operations['UFManage_QueryDepList'];
  };
  '/ufmanage/persons': {
    post: operations['UFManage_QueryPersonList'];
  };
  '/ufmanage/opusers': {
    post: operations['UFManage_QueryOpUserList'];
  };
  '/ufmanage/exchlist': {
    get: operations['UFManage_QueryExchList'];
  };
  '/ufmanage/invclstree': {
    get: operations['UFManage_QueryInvTreeList'];
  };
  '/ufmanage/invlist': {
    post: operations['UFManage_QueryInvList'];
  };
  '/ufmanage/bfreelist': {
    get: operations['UFManage_InvbFreeList'];
  };
  '/ufmanage/cuslist': {
    post: operations['UFManage_QueryCusList'];
  };
  '/ufmanage/whlist': {
    post: operations['UFManage_QueryWHList'];
  };
  '/ufmanage/poslist': {
    post: operations['UFManage_QueryPosList'];
  };
  '/ufmanage/vendors': {
    post: operations['UFManage_QueryPosList'];
  };
  '/ufmanage/momrdpage': {
    post: operations['UFManage_QueryMomRdPage'];
  };
  '/ufmanage/puarrpage': {
    post: operations['UFManage_QueryPuArrPage'];
  };
  '/ufmanage/whposbatchstock': {
    post: operations['UFManage_QueryInvWhPosBatchStocks'];
  };
  '/ufmanage/whstocksum': {
    post: operations['UFManage_QueryWhStockSum'];
  };
  '/ufmanage/rdstyles': {
    get: operations['UFManage_QueryRdStyle'];
  };
  '/ufmanage/oplist': {
    post: operations['UFManage_QueryOpList'];
  };
  '/ufmanage/prlist': {
    post: operations['UFManage_QueryPRoutingList'];
  };
  '/ufmanage/prlistbyinv': {
    get: operations['UFManage_QueryPRoutingListByInv'];
  };
  '/ufmanage/prdetails': {
    get: operations['UFManage_QueryPRoutingDetails'];
  };
  '/ufmanage/updateprdetailqcway': {
    get: operations['UFManage_UpdSfcPRoutingQcWay'];
  };
  '/ufmanage/bomverions': {
    post: operations['UFManage_QueryInvBomVersionDtos'];
  };
  '/ufmanage/bomleftlist': {
    post: operations['UFManage_QueryBomLeftList'];
  };
  '/ufmanage/bominfo': {
    post: operations['UFManage_QueryBomInfo'];
  };
  '/ufmanage/pubustypes': {
    get: operations['UFManage_QueryPUBusTypes'];
  };
  '/ufmanage/purtypes': {
    get: operations['UFManage_QueryPurTypes'];
  };
  '/ufmanage/items': {
    get: operations['UFManage_QueryItemList'];
  };
  '/vendor/updatepass': {
    post: operations['Vendor_UpdatePass'];
  };
  '/vendor/resetpass': {
    post: operations['Vendor_ResetVenPass'];
  };
  '/venorder/popage': {
    post: operations['VenOrder_QueryPoPage'];
  };
  '/venorder/porevice': {
    post: operations['VenOrder_VenPoOrderRevice'];
  };
  '/venorder/deliveryPoList': {
    post: operations['VenOrder_VenDeliveryPoOrderList'];
  };
  '/venorder/ompage': {
    post: operations['VenOrder_QueryOMPage'];
  };
  '/venorder/omrevice': {
    post: operations['VenOrder_VenOMOrderRevice'];
  };
  '/venorder/deliveryOmList': {
    post: operations['VenOrder_VenDeliveryOMOrderList'];
  };
  '/websocket/connect': {
    get: operations['WebSocket_Connect'];
  };
  '/workbench/list': {
    post: operations['WorkBench_QueryIconList'];
  };
  '/workbench/mopreportinfo': {
    post: operations['WorkBench_QueryMomOpReport'];
  };
  '/workbench/opreport': {
    post: operations['WorkBench_OpReport'];
  };
  '/workbench/teampersons': {
    get: operations['WorkBench_QueryTeamPersons'];
  };
  '/workhour/page': {
    post: operations['WorkHour_QueryWorkHours'];
  };
  '/workhour/update': {
    post: operations['WorkHour_WorkHourUpdate'];
  };
  '/workhour/del': {
    post: operations['WorkHour_WorkHourDel'];
  };
  '/workhour/audit': {
    post: operations['WorkHour_WorkHourAudit'];
  };
  '/workjob/save': {
    post: operations['WorkJob_Save'];
  };
  '/workjob/delete': {
    post: operations['WorkJob_ShiftDel'];
  };
  '/workjob/info': {
    get: operations['WorkJob_QueryInfo'];
  };
  '/workjob/page': {
    post: operations['WorkJob_QueryPage'];
  };
  '/workjob/getcode': {
    get: operations['WorkJob_GetNewCode'];
  };
  '/workjob/action': {
    post: operations['WorkJob_TaskAction'];
  };
  '/workjob/export': {
    post: operations['WorkJob_ExportData'];
  };
  '/workorder/getcode': {
    get: operations['WorkOrder_GetNewCode'];
  };
  '/workorder/codes': {
    get: operations['WorkOrder_QueryCodes'];
  };
  '/workorder/save': {
    post: operations['WorkOrder_Save'];
  };
  '/workorder/waitcount': {
    get: operations['WorkOrder_QueryWaitHandleCount'];
  };
  '/workorder/handle': {
    post: operations['WorkOrder_HandleOrder'];
  };
  '/workorder/done': {
    post: operations['WorkOrder_WorkOrderDone'];
  };
  '/workorder/delete': {
    post: operations['WorkOrder_ShiftDel'];
  };
  '/workorder/info': {
    post: operations['WorkOrder_QueryInfo'];
  };
  '/workorder/page': {
    post: operations['WorkOrder_QueryPage'];
  };
  '/workorder/export': {
    post: operations['WorkOrder_ExportData'];
  };
  '/workshop/save': {
    post: operations['WorkShop_Save'];
  };
  '/workshop/delete': {
    post: operations['WorkShop_BlukDelete'];
  };
  '/workshop/page': {
    post: operations['WorkShop_QueryPage'];
  };
  '/workshop/export': {
    post: operations['WorkShop_ExportData'];
  };
  '/workshop/select': {
    get: operations['WorkShop_QuerySelect'];
  };
  '/applydoc/save': {
    post: operations['WxByApplyDoc_Save'];
  };
  '/applydoc/delete': {
    post: operations['WxByApplyDoc_ShiftDel'];
  };
  '/applydoc/info': {
    post: operations['WxByApplyDoc_QueryInfo'];
  };
  '/applydoc/page': {
    post: operations['WxByApplyDoc_QueryPage'];
  };
  '/applydoc/getcode': {
    get: operations['WxByApplyDoc_GetNewCode'];
  };
  '/applydoc/codes': {
    get: operations['WxByApplyDoc_QueryCodes'];
  };
  '/applydoc/export': {
    post: operations['WxByApplyDoc_ExportData'];
  };
  '/applydoc/applyshift': {
    post: operations['WxByApplyDoc_ApplyShift'];
  };
  '/applydoc/noticelist': {
    post: operations['WxByApplyDoc_QueryNoticeDocPage'];
  };
  '/applydoc/exportNotice': {
    post: operations['WxByApplyDoc_ExportNoticeData'];
  };
  '/wxbyplan/getcode': {
    get: operations['WxByPlan_GetNewCode'];
  };
  '/wxbyplan/codes': {
    get: operations['WxByPlan_QueryCodes'];
  };
  '/wxbyplan/save': {
    post: operations['WxByPlan_Save'];
  };
  '/wxbyplan/delete': {
    post: operations['WxByPlan_ShiftDel'];
  };
  '/wxbyplan/audit': {
    post: operations['WxByPlan_DoAudit'];
  };
  '/wxbyplan/info': {
    post: operations['WxByPlan_QueryInfo'];
  };
  '/wxbyplan/page': {
    post: operations['WxByPlan_QueryPage'];
  };
  '/wxbyplan/export': {
    post: operations['WxByPlan_ExportData'];
  };
}

export interface definitions {
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[ASNHeadDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['ASNHeadDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description ASN表头实体 */
  ASNHeadDto: {
    /** @description ID 修改时需要传 */
    Id?: string;
    /** @description ASN单号 */
    ASNCode?: string;
    /** @description 订单日期 */
    dDate?: string;
    /** @description 预计到货日期 */
    dArriveDate?: string;
    /** @description 备注 */
    Remark?: string;
  };
  /** @description ASN单保存参数 */
  ASNSaveReqDto: {
    /** @description 表头 */
    HeadDto?: definitions['ASNHeadDto'];
    /** @description 表体集合 */
    BodyDtos?: definitions['ASNBodyBaseDto'][];
    /**
     * Format: int32
     * @description 来源订单类型<br/>
     * 0 = POORDER，采购订单<br/>
     * 1 = OMORDER，委外订单<br/>
     * 1 = OMORDER，委外订单<br/>
     * 2 = OtherRd，其他入库单<br/>
     * 3 = RdRecord，采购入库单<br/>
     * 4 = PuArr，采购到货单<br/>
     * 5 = QM05，产品不良品处理单<br/>
     * 6 = QMCheckVoucher，来料检验单<br/>
     * 12 = TransVouch，调拨单<br/>
     * 16 = QM16，工序不良品处理单<br/>
     * 17 = SoMain，销售订单<br/>
     * 18 = QM18，发退货不良品处理单<br/>
     * 19 = QM19，其他不良品处理单<br/>
     * 21 = MomOrder，生产订单<br/>
     * 26 = SaleBillZVouch，销售专用发票<br/>
     * 27 = SaleBillVouch，销售发票<br/>
     * 31 = FC31，生产订单工序转移单<br/>
     * 48 = RR，收款单<br/>
     * 49 = RP，付款单<br/>
     * 64 = MaterialAppVouch，领料申请<br/>
     * 71 = Dispatch，销售发货单<br/>
     * 90 = MomReport，订单报工<br/>
     * 111 = PurBillVouch，采购发票<br/>
     * 112 = PurBillZVouch，采购专用发票<br/>
     * 121 = HYMomOrder，委外加工单<br/>
     * 303 = SaleOut，销售出库单<br/>
     * 313 = Adjust，货位调整单<br/>
     * 314 = ScrapVoucher，不合格品记录单<br/>
     * 411 = MomInWare，产成品入库单<br/>
     * 411 = MomInWare，产成品入库单<br/>
     * 412 = MaterialOutStock，材料出库单
     * @enum {number}
     */
    OrderType?: number | null;
  };
  /** @description ASN表体实体 */
  ASNBodyBaseDto: {
    /** @description 主表ID */
    MainId?: string;
    /** @description 采购/委外订单子表ID */
    IPosId: string;
    /** @description 存货编码 */
    cInvCode: string;
    /**
     * Format: double
     * @description 发货数量
     */
    DQty?: number | null;
    /** @description 发货批次 */
    cBatch?: string;
    /** @description 表体备注 */
    dRemark?: string;
  };
  /** @description 不带分页的JSON返回实体 */
  LJsonResult: {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: { [key: string]: unknown };
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 基础删除的参数实体 */
  BaseDelReqDto: {
    /** @description 删除的ID集合 */
    Ids: string[];
  };
  /** @description 审核公共参数实体 */
  BaseAuditReqDto: {
    /** @description ID */
    Id: string;
    /**
     * Format: int32
     * @description 审核状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = PENDING，待审核<br/>
     * 2 = AUDITED，已审核<br/>
     * 3 = REJECT，驳回
     * @enum {number}
     */
    AuditState: number | null;
    /** @description 审核意见 */
    AuditRmind?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[String]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: string[];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 查询单据明细参数实体 */
  QueryVouchInfoBaseReqDto: {
    /** @description 单据ID */
    Id?: string;
    /**
     * Format: int32
     * @description 查询方式<br/>
     * 0 = ALL，默认<br/>
     * 1 = FIRST，第一张<br/>
     * 2 = PREVIOUS，上一页<br/>
     * 3 = NEXT，下一页<br/>
     * 4 = FINAL，最后一页
     * @enum {number}
     */
    Way?: number | null;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[ASNInfoDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['ASNInfoDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description ASN明细实体 */
  ASNInfoDto: {
    /** @description 供应商编码 */
    cVenCode?: string;
    /** @description 供应商名称 */
    cVenName?: string;
    /** @description U8到货单号 */
    U8ArrCode?: string;
    /** @description 审核意见 */
    AuditRmind?: string;
    /**
     * Format: int32
     * @description 审核状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = PENDING，待审核<br/>
     * 2 = AUDITED，已审核<br/>
     * 3 = REJECT，驳回
     * @enum {number}
     */
    AuditState?: number | null;
    /** @description 审核人名称 */
    AuditorName?: string;
    /**
     * Format: date-time
     * @description 审核时间
     */
    AuditTime?: string;
    /**
     * Format: int32
     * @description 发货状态<br/>
     * 0 = WatCheck，待确认<br/>
     * 1 = WaitShip，待发货<br/>
     * 2 = Shiped，已发货<br/>
     * 3 = Arrived，已到货<br/>
     * 4 = NoPass，不通过<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    ShipState?: number | null;
    /**
     * Format: date-time
     * @description 制单时间
     */
    CreatedTime?: string;
    /** @description 制单人 */
    CreatedUserName?: string;
    /** @description ASN是否打印 */
    BPrint?: boolean;
    /**
     * Format: int32
     * @description ASN单打印次数
     */
    PrinCount?: number | null;
    /**
     * Format: int32
     * @description 来源订单类型<br/>
     * 0 = POORDER，采购订单<br/>
     * 1 = OMORDER，委外订单<br/>
     * 1 = OMORDER，委外订单<br/>
     * 2 = OtherRd，其他入库单<br/>
     * 3 = RdRecord，采购入库单<br/>
     * 4 = PuArr，采购到货单<br/>
     * 5 = QM05，产品不良品处理单<br/>
     * 6 = QMCheckVoucher，来料检验单<br/>
     * 12 = TransVouch，调拨单<br/>
     * 16 = QM16，工序不良品处理单<br/>
     * 17 = SoMain，销售订单<br/>
     * 18 = QM18，发退货不良品处理单<br/>
     * 19 = QM19，其他不良品处理单<br/>
     * 21 = MomOrder，生产订单<br/>
     * 26 = SaleBillZVouch，销售专用发票<br/>
     * 27 = SaleBillVouch，销售发票<br/>
     * 31 = FC31，生产订单工序转移单<br/>
     * 48 = RR，收款单<br/>
     * 49 = RP，付款单<br/>
     * 64 = MaterialAppVouch，领料申请<br/>
     * 71 = Dispatch，销售发货单<br/>
     * 90 = MomReport，订单报工<br/>
     * 111 = PurBillVouch，采购发票<br/>
     * 112 = PurBillZVouch，采购专用发票<br/>
     * 121 = HYMomOrder，委外加工单<br/>
     * 303 = SaleOut，销售出库单<br/>
     * 313 = Adjust，货位调整单<br/>
     * 314 = ScrapVoucher，不合格品记录单<br/>
     * 411 = MomInWare，产成品入库单<br/>
     * 411 = MomInWare，产成品入库单<br/>
     * 412 = MaterialOutStock，材料出库单
     * @enum {number}
     */
    OrderType?: number | null;
    /** @description 表体集合 */
    BodyDtos?: definitions['ASNBodyInfoDto'][];
    /** @description 动态列表 */
    DynamicDtos?: definitions['ASNDynamicDto'][];
    /** @description ID 修改时需要传 */
    Id?: string;
    /** @description ASN单号 */
    ASNCode?: string;
    /** @description 订单日期 */
    dDate?: string;
    /** @description 预计到货日期 */
    dArriveDate?: string;
    /** @description 备注 */
    Remark?: string;
  };
  /** @description ASN表体明细返回实体 */
  ASNBodyInfoDto: {
    /** @description 表体ID */
    Id?: string;
    /** @description 采购订单号 */
    cPOID?: string;
    /** @description 采购订单日期 */
    dPoDate?: string;
    /** @description 采购订单主表ID */
    POID?: string;
    /** @description 存货代码 */
    cInvAddCode?: string;
    /** @description 存货名称 */
    cInvName?: string;
    /** @description 规格型号 */
    cInvStd?: string;
    /** @description 主计量 */
    cComUnitName?: string;
    /**
     * Format: double
     * @description 订单数量
     */
    PoQty?: number | null;
    /** @description 主表ID */
    MainId?: string;
    /** @description 采购/委外订单子表ID */
    IPosId: string;
    /** @description 存货编码 */
    cInvCode: string;
    /**
     * Format: double
     * @description 发货数量
     */
    DQty?: number | null;
    /** @description 发货批次 */
    cBatch?: string;
    /** @description 表体备注 */
    dRemark?: string;
  };
  /** @description ASN动态实体 */
  ASNDynamicDto: {
    /** @description 主表ID */
    MainId?: string;
    /** @description 动态内容 */
    DyConent?: string;
    /**
     * Format: int32
     * @description 发起方<br/>
     * 0 = PDA，PDA<br/>
     * 1 = PC，PC端<br/>
     * 2 = VEN，供应商
     * @enum {number}
     */
    Sponsor?: number | null;
    /**
     * Format: date-time
     * @description 制单时间
     */
    CreatedTime?: string;
    /** @description 制单人 */
    CreatedUserName?: string;
    /** @description ID */
    Id?: string;
  };
  /** @description 查询ASN列表参数实体 */
  QueryASNListReqDto: {
    /**
     * Format: int32
     * @description 发货状态<br/>
     * 0 = WatCheck，待确认<br/>
     * 1 = WaitShip，待发货<br/>
     * 2 = Shiped，已发货<br/>
     * 3 = Arrived，已到货<br/>
     * 4 = NoPass，不通过<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    ShipState?: number | null;
    /**
     * Format: int32
     * @description 审核状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = PENDING，待审核<br/>
     * 2 = AUDITED，已审核<br/>
     * 3 = REJECT，驳回
     * @enum {number}
     */
    AuditState?: number | null;
    /** @description 订单日期开始 */
    dDateBegin?: string;
    /** @description 订单日期结束 */
    dDateEnd?: string;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[ASNListDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['ASNListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description ASN列表实体 */
  ASNListDto: {
    /** @description 供应商编码 */
    cVenCode?: string;
    /** @description 供应商名称 */
    cVenName?: string;
    /** @description U8到货单号 */
    U8ArrCode?: string;
    /** @description 审核意见 */
    AuditRmind?: string;
    /**
     * Format: int32
     * @description 审核状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = PENDING，待审核<br/>
     * 2 = AUDITED，已审核<br/>
     * 3 = REJECT，驳回
     * @enum {number}
     */
    AuditState?: number | null;
    /** @description 审核人名称 */
    AuditorName?: string;
    /**
     * Format: date-time
     * @description 审核时间
     */
    AuditTime?: string;
    /**
     * Format: int32
     * @description 发货状态<br/>
     * 0 = WatCheck，待确认<br/>
     * 1 = WaitShip，待发货<br/>
     * 2 = Shiped，已发货<br/>
     * 3 = Arrived，已到货<br/>
     * 4 = NoPass，不通过<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    ShipState?: number | null;
    /**
     * Format: date-time
     * @description 制单时间
     */
    CreatedTime?: string;
    /** @description 制单人 */
    CreatedUserName?: string;
    /**
     * Format: int32
     * @description 来源订单类型<br/>
     * 0 = POORDER，采购订单<br/>
     * 1 = OMORDER，委外订单<br/>
     * 1 = OMORDER，委外订单<br/>
     * 2 = OtherRd，其他入库单<br/>
     * 3 = RdRecord，采购入库单<br/>
     * 4 = PuArr，采购到货单<br/>
     * 5 = QM05，产品不良品处理单<br/>
     * 6 = QMCheckVoucher，来料检验单<br/>
     * 12 = TransVouch，调拨单<br/>
     * 16 = QM16，工序不良品处理单<br/>
     * 17 = SoMain，销售订单<br/>
     * 18 = QM18，发退货不良品处理单<br/>
     * 19 = QM19，其他不良品处理单<br/>
     * 21 = MomOrder，生产订单<br/>
     * 26 = SaleBillZVouch，销售专用发票<br/>
     * 27 = SaleBillVouch，销售发票<br/>
     * 31 = FC31，生产订单工序转移单<br/>
     * 48 = RR，收款单<br/>
     * 49 = RP，付款单<br/>
     * 64 = MaterialAppVouch，领料申请<br/>
     * 71 = Dispatch，销售发货单<br/>
     * 90 = MomReport，订单报工<br/>
     * 111 = PurBillVouch，采购发票<br/>
     * 112 = PurBillZVouch，采购专用发票<br/>
     * 121 = HYMomOrder，委外加工单<br/>
     * 303 = SaleOut，销售出库单<br/>
     * 313 = Adjust，货位调整单<br/>
     * 314 = ScrapVoucher，不合格品记录单<br/>
     * 411 = MomInWare，产成品入库单<br/>
     * 411 = MomInWare，产成品入库单<br/>
     * 412 = MaterialOutStock，材料出库单
     * @enum {number}
     */
    OrderType?: number | null;
    /** @description 表体ID */
    DId?: string;
    /** @description 采购订单号 */
    cPOID?: string;
    /** @description 采购订单日期 */
    dPoDate?: string;
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 存货代码 */
    cInvAddCode?: string;
    /** @description 存货名称 */
    cInvName?: string;
    /** @description 规格型号 */
    cInvStd?: string;
    /** @description 主计量 */
    cComUnitName?: string;
    /**
     * Format: double
     * @description 订单数量
     */
    PoQty?: number | null;
    /**
     * Format: double
     * @description 接收数量
     */
    RQty?: number | null;
    /** @description 采购订单子表ID */
    IPosId?: string;
    /**
     * Format: double
     * @description 发货数量
     */
    DQty?: number | null;
    /** @description 发货批次 */
    cBatch?: string;
    /** @description 表体备注 */
    dRemark?: string;
    /** @description ID 修改时需要传 */
    Id?: string;
    /** @description ASN单号 */
    ASNCode?: string;
    /** @description 订单日期 */
    dDate?: string;
    /** @description 预计到货日期 */
    dArriveDate?: string;
    /** @description 备注 */
    Remark?: string;
  };
  /** @description ASN确认参数 */
  ASNConfirmReqDto: {
    /** @description ASN单ID */
    Id: string;
    /** @description 说明-不通过需要传 */
    Remark?: string;
    /** @description 是否通过 */
    BPass?: boolean;
    /** @description 到货仓库编码（后台会判断如果采购订单类型是代管采购或者资产类，会做校验） */
    ArrWhCode?: string;
  };
  /** @description ASN动态发布 */
  ASNDynamicSaveReqDto: {
    /** @description ASN单ID */
    MainId: string;
    /** @description 动态内容 */
    DyContent: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[ASNDynamicDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['ASNDynamicDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description ASN发货 */
  ASNDeliveryReqDto: {
    /** @description ASN单ID */
    Id: string;
  };
  /** @description ASN单打印参数 */
  ASNPrintReqDto: {
    /** @description ASN单ID */
    Id: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[BaseFileResDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['BaseFileResDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 文件返回实体 */
  BaseFileResDto: {
    /** @description 文件名称 */
    FileName?: string;
    /** @description 文件路径 */
    FilePath?: string;
    /** @description 文件下载地址 */
    FileSrc?: string;
    /** @description 返回数据 */
    Data?: { [key: string]: unknown };
    /** @description 返回消息 */
    Msg?: string;
    /** @description 处理状态 */
    State?: boolean;
  };
  /** @description ASN单外箱生码请求参数 */
  ASNBoxRawCodeReqDto: {
    /** @description ASN单主表ID */
    ASNId: string;
    /**
     * Format: double
     * @description 包装数
     */
    PackQty?: number | null;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[BarCodeFileResDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['BarCodeFileResDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 条码文件返回实体 */
  BarCodeFileResDto: {
    /** @description 条码列表 */
    FileDtos?: definitions['BarCodeFileDto'][];
    /** @description 导出的PDF地址 */
    ExportPdfSrc?: string;
  };
  /** @description 条码文件返回实体 */
  BarCodeFileDto: {
    /** @description 条码 */
    BarCode?: string;
    /** @description 条码地址 */
    Src?: string;
    /** @description CPCL打印指令 */
    CPCL?: string;
  };
  /** @description 条码档案生码参数 */
  BarCodeSaveReqDto: {
    /**
     * Format: int32
     * @description 标签类型<br/>
     * 1 = FLOWCARD，流转卡<br/>
     * 2 = INWARE，入库<br/>
     * 3 = INVENTORY，存货<br/>
     * 4 = POSITION，货位<br/>
     * 5 = ASN，ASN箱码<br/>
     * 6 = PUARR，采购到货<br/>
     * 7 = OPFLOWCARD，工序流转卡<br/>
     * 8 = STOCK，库存条码<br/>
     * 9 = DEVICE，设备<br/>
     * 10 = MOLD，模具
     * @enum {number}
     */
    LabelType: number | null;
    /**
     * Format: double
     * @description 包装数
     */
    PackQty?: number | null;
    /** @description 存货/货位/模具编码 */
    CodeList?: string[];
    /** @description 生产计划ID集合 */
    PlanIds?: string[];
    /** @description 入库单子表ID集合 */
    RdDIds?: string[];
    /** @description ASN单子表ID集合 */
    ASNDIds?: string[];
    /** @description 子表ID集合 */
    AutoIds?: string[];
    /** @description 入库单号集合(预留参数给报工后入库的打码用) */
    RdCodes?: string[];
  };
  /** @description 条码修改数量参数实体 */
  BarCodeUpdQtyReqDto: {
    /** @description 条码 */
    BarCode: string;
    /**
     * Format: double
     * @description 修改后数量
     */
    Qty?: number | null;
  };
  /** @description 条码复制参数实体 */
  BarCodeCopyReqDto: {
    BarCode: string;
    /** @description 每个条码的数量 */
    Qtys?: (number | null)[];
  };
  /** @description 条码打印参数 */
  BarCodePrintReqDto: {
    /** @description 条码集合 */
    BarCodes: string[];
    /**
     * Format: int32
     * @description 标签类型<br/>
     * 1 = FLOWCARD，流转卡<br/>
     * 2 = INWARE，入库<br/>
     * 3 = INVENTORY，存货<br/>
     * 4 = POSITION，货位<br/>
     * 5 = ASN，ASN箱码<br/>
     * 6 = PUARR，采购到货<br/>
     * 7 = OPFLOWCARD，工序流转卡<br/>
     * 8 = STOCK，库存条码<br/>
     * 9 = DEVICE，设备<br/>
     * 10 = MOLD，模具
     * @enum {number}
     */
    LabelType: number | null;
    /** @description 是否使用蓝牙打印 */
    IsBluetoothPrint?: boolean;
  };
  /** @description 条码查询参数实体 */
  QueryBarCodePageReqDto: {
    /**
     * Format: int32
     * @description 标签类型<br/>
     * 1 = FLOWCARD，流转卡<br/>
     * 2 = INWARE，入库<br/>
     * 3 = INVENTORY，存货<br/>
     * 4 = POSITION，货位<br/>
     * 5 = ASN，ASN箱码<br/>
     * 6 = PUARR，采购到货<br/>
     * 7 = OPFLOWCARD，工序流转卡<br/>
     * 8 = STOCK，库存条码<br/>
     * 9 = DEVICE，设备<br/>
     * 10 = MOLD，模具
     * @enum {number}
     */
    LabelType: number | null;
    /** @description 存货编码（下拉表格选择） */
    cInvCode?: string;
    /** @description 条码生成的开始日期 */
    StartDate?: string;
    /** @description 条码生成的结束日期 */
    EndDate?: string;
    /** @description 单据号 */
    cCode?: string;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[BarCodeBaseDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['BarCodeBaseDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 条码档案基础实体 */
  BarCodeBaseDto: {
    /** @description ID */
    Id?: string;
    /**
     * Format: int32
     * @description 标签类型<br/>
     * 1 = FLOWCARD，流转卡<br/>
     * 2 = INWARE，入库<br/>
     * 3 = INVENTORY，存货<br/>
     * 4 = POSITION，货位<br/>
     * 5 = ASN，ASN箱码<br/>
     * 6 = PUARR，采购到货<br/>
     * 7 = OPFLOWCARD，工序流转卡<br/>
     * 8 = STOCK，库存条码<br/>
     * 9 = DEVICE，设备<br/>
     * 10 = MOLD，模具
     * @enum {number}
     */
    LabelType?: number | null;
    /** @description 条码 */
    BarCode?: string;
    /**
     * Format: int32
     * @description 流水号
     */
    CNumber?: number | null;
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 存货代码 */
    cInvAddCode?: string;
    /** @description 规格型号 */
    cInvStd?: string;
    /** @description 存货名称 */
    cInvName?: string;
    /** @description 计量单位编码 */
    cComUnitCode?: string;
    /** @description 计量单位名称 */
    cComUnitName?: string;
    /**
     * Format: double
     * @description 数量
     */
    Qty?: number | null;
    /**
     * Format: double
     * @description 每箱数量
     */
    BoxQty?: number | null;
    /**
     * Format: double
     * @description 总箱数
     */
    BoxNum?: number | null;
    /** @description 计划ID */
    PlanId?: string;
    /** @description 来源订单ID */
    SourceId?: string;
    /** @description 来源订单号 */
    SourceCode?: string;
    /**
     * Format: date-time
     * @description 创建时间
     */
    CreatedTime?: string;
    /** @description 创建者名称 */
    CreatedUserName?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[BarCodeInfoDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['BarCodeInfoDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 条码扫描返回信息实体 */
  BarCodeInfoDto: {
    /** @description 条码 */
    BarCode?: string;
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 存货代码 */
    cInvAddCode?: string;
    /** @description 存货名称 */
    cInvName?: string;
    /**
     * Format: double
     * @description 数量
     */
    Qty?: number | null;
    /** @description 批号 */
    cBatch?: string;
    /**
     * Format: double
     * @description 现存量
     */
    StockQty?: number | null;
    /** @description 是否启用批次 */
    bInvBatch?: boolean;
    /** @description 档案类的ID */
    Id?: string;
    /** @description 来源订单ID */
    SourceId?: string;
    /** @description 来源订单子表ID */
    SourceDId?: string;
    /** @description 来源订单号 */
    SourceCode?: string;
  };
  /** @description 库存条码保存参数 */
  StockBarCodeSaveReqDto: {
    /** @description 存货编码 */
    cInvCode: string;
    /** @description 仓库编码 */
    cWhCode: string;
    /** @description 货位编码 */
    cPosCode?: string;
    /**
     * Format: double
     * @description 数量
     */
    Qty?: number | null;
    /** @description 批号 */
    cBatch?: string;
    /** @description 生产日期 */
    dMadeDate?: string;
    /**
     * Format: double
     * @description 条码数量
     */
    CodeNum?: number | null;
  };
  /** @description 基础分页参数实体 */
  BasePageReqDto: {
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[BarCodeDataSourceInfoDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['BarCodeDataSourceInfoDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 条码数据源返回实体 */
  BarCodeDataSourceInfoDto: {
    /** @description 主键 */
    Id?: string;
    /** @description 标签类型 */
    LabelTypeStr?: string;
    /**
     * Format: date-time
     * @description 创建时间
     */
    CreatedTime?: string;
    /** @description 创建者名称 */
    CreatedUserName?: string;
    /**
     * Format: int32
     * @description 条码类型<br/>
     * 1 = FLOWCARD，流转卡<br/>
     * 2 = INWARE，入库<br/>
     * 3 = INVENTORY，存货<br/>
     * 4 = POSITION，货位<br/>
     * 5 = ASN，ASN箱码<br/>
     * 6 = PUARR，采购到货<br/>
     * 7 = OPFLOWCARD，工序流转卡<br/>
     * 8 = STOCK，库存条码<br/>
     * 9 = DEVICE，设备<br/>
     * 10 = MOLD，模具
     * @enum {number}
     */
    LabelType: number | null;
    /** @description 数据源SQL(SQL最外层必须嵌套一个（SELECT * FROM (真正的自定义的SQL) TA ）,必须包含条码列) */
    SourceSql: string;
    /** @description 备注 */
    Remark?: string;
  };
  /** @description 条码数据源配置参数 */
  BarCodeDataSourceSaveReqDto: {
    /**
     * Format: int32
     * @description 条码类型<br/>
     * 1 = FLOWCARD，流转卡<br/>
     * 2 = INWARE，入库<br/>
     * 3 = INVENTORY，存货<br/>
     * 4 = POSITION，货位<br/>
     * 5 = ASN，ASN箱码<br/>
     * 6 = PUARR，采购到货<br/>
     * 7 = OPFLOWCARD，工序流转卡<br/>
     * 8 = STOCK，库存条码<br/>
     * 9 = DEVICE，设备<br/>
     * 10 = MOLD，模具
     * @enum {number}
     */
    LabelType: number | null;
    /** @description 数据源SQL(SQL最外层必须嵌套一个（SELECT * FROM (真正的自定义的SQL) TA ）,必须包含条码列) */
    SourceSql: string;
    /** @description 备注 */
    Remark?: string;
  };
  /** @description 产品工序设备产能对照表保存参数 */
  CapacityCompareSaveReqDto: {
    /** @description 车间ID */
    WorkShopId: string;
    /** @description 产品编码 */
    cInvCode: string;
    /** @description 工艺路线ID */
    ProutingId: string;
    /** @description 工序列表 */
    OpDtos?: definitions['CapacityOpDto'][];
  };
  /** @description 产能对照的工序明细 */
  CapacityOpDto: {
    /** @description 工序ID */
    OpId: string;
    /** @description 产能列表 */
    AgeingDetailDtos?: definitions['CapacityAgeingDetailDto'][];
  };
  /** @description 产能明细实体 */
  CapacityAgeingDetailDto: {
    /** @description ID */
    Id?: string;
    /**
     * Format: int32
     * @description 产能对象类型<br/>
     * 1 = DEVICE，设备<br/>
     * 2 = ARTIFICIAL，人工<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    CapacityType: number | null;
    /**
     * Format: int32
     * @description 排产优先级
     */
    ShiftLevel?: number | null;
    /** @description 产能对象类型描述 */
    CapacityTypeDesc?: string;
    /** @description 设备ID */
    DeviceId?: string;
    /**
     * Format: double
     * @description 设备产能
     */
    DeviceAgeing?: number | null;
    /**
     * Format: double
     * @description 人工产能
     */
    ArtificialAgeing?: number | null;
    /**
     * Format: int32
     * @description 人数
     */
    PersonNum?: number | null;
    /** @description 是否默认 */
    BDefault?: boolean;
  };
  /** @description 查询产能对照表明细参数 */
  QueryCapacityCompareInfoReqDo: {
    /** @description 产品编码 */
    cInvCode?: string;
    /**
     * Format: int32
     * @description 查询方式<br/>
     * 0 = ALL，默认<br/>
     * 1 = FIRST，第一张<br/>
     * 2 = PREVIOUS，上一页<br/>
     * 3 = NEXT，下一页<br/>
     * 4 = FINAL，最后一页
     * @enum {number}
     */
    Way?: number | null;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[CapacityCompareInfoDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['CapacityCompareInfoDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 产能对照明细实体 */
  CapacityCompareInfoDto: {
    /** @description 产品编码 */
    cInvCode?: string;
    /** @description 存货名称 */
    cInvName?: string;
    /** @description 零件号 */
    cInvAddCode?: string;
    /** @description 规格型号 */
    cInvStd?: string;
    /** @description 计量单位 */
    cComunitName?: string;
    /** @description 工艺路线ID */
    ProutingId?: string;
    /** @description 工艺路线版本 */
    ProutingVer?: string;
    /** @description 工艺路线版本说明 */
    ProutingVerDesc?: string;
    /** @description 生产车间 */
    WorkShop?: string;
    /** @description 车间ID */
    WorkShopId?: string;
    /** @description 工序信息 */
    OpDtos?: definitions['CapacityOpInfoDto'][];
  };
  /** @description 产能对照的工序明细 */
  CapacityOpInfoDto: {
    /** @description 工序ID */
    OpId?: string;
    /** @description 工序行号 */
    OpSeq?: string;
    /** @description 工序名称 */
    OpName?: string;
    /** @description 工作中心 */
    WcName?: string;
    /** @description 生效日期 */
    EffBegDate?: string;
    /** @description 失效日期 */
    EffEndDate?: string;
    /** @description 产能列表 */
    AgeingDetailDtos?: definitions['CapacityAgeingBodyDto'][];
  };
  /** @description 产能明细实体 */
  CapacityAgeingBodyDto: {
    /** @description 设备编码 */
    DeviceCode?: string;
    /** @description 设备名称 */
    DeviceName?: string;
    /** @description 设备型号 */
    DeviceModel?: string;
    /** @description ID */
    Id?: string;
    /**
     * Format: int32
     * @description 产能对象类型<br/>
     * 1 = DEVICE，设备<br/>
     * 2 = ARTIFICIAL，人工<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    CapacityType: number | null;
    /**
     * Format: int32
     * @description 排产优先级
     */
    ShiftLevel?: number | null;
    /** @description 产能对象类型描述 */
    CapacityTypeDesc?: string;
    /** @description 设备ID */
    DeviceId?: string;
    /**
     * Format: double
     * @description 设备产能
     */
    DeviceAgeing?: number | null;
    /**
     * Format: double
     * @description 人工产能
     */
    ArtificialAgeing?: number | null;
    /**
     * Format: int32
     * @description 人数
     */
    PersonNum?: number | null;
    /** @description 是否默认 */
    BDefault?: boolean;
  };
  /** @description 查询产能对照表明细参数 */
  QueryCapacityDetailReqDto: {
    /** @description 产品编码 */
    cInvCode: string;
    /** @description 工艺路线ID */
    ProutingId: string;
    /** @description 车间ID */
    WorkShopId: string;
  };
  /** @description 查询产能对比分页请求Dto */
  QueryCapacityComparePageReqDto: {
    /** @description 车间ID */
    WorkShopId?: string;
    /** @description 产品编码 */
    cInvCode?: string;
    /** @description 工艺路线ID */
    ProutingId?: string;
    /** @description 工序ID */
    OpId?: string;
    /** @description 设备ID */
    DeviceId?: string;
    /**
     * Format: int32
     * @description 产能对象类型<br/>
     * 1 = DEVICE，设备<br/>
     * 2 = ARTIFICIAL，人工<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    CapacityType?: number | null;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[CapacityCompareListDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['CapacityCompareListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 产能工序设备产嗯那个对照明细实体 */
  CapacityCompareListDto: {
    /** @description 产品编码 */
    cInvCode?: string;
    /** @description 存货名称 */
    cInvName?: string;
    /** @description 零件号 */
    cInvAddCode?: string;
    /** @description 规格型号 */
    cInvStd?: string;
    /** @description 计量单位 */
    cComunitName?: string;
    /** @description 工艺路线版本 */
    ProutingVer?: string;
    /** @description 工艺路线版本说明 */
    ProutingVerDesc?: string;
    /** @description 生产车间 */
    WorkShop?: string;
    /** @description 工序行号 */
    OpSeq?: string;
    /** @description 工序名称 */
    OpName?: string;
    /** @description 工作中心 */
    WcName?: string;
    /** @description 生效日期 */
    EffBegDate?: string;
    /** @description 失效日期 */
    EffEndDate?: string;
    /**
     * Format: int64
     * @description 车间ID
     */
    WorkShopId?: string;
    /**
     * Format: int64
     * @description 工艺路线ID
     */
    ProutingId?: string;
    /**
     * Format: int64
     * @description 工序Id
     */
    OpId?: string;
    /**
     * Format: int64
     * @description 设备ID
     */
    DeviceId?: string;
    /**
     * Format: int32
     * @description 产能对象类型<br/>
     * 1 = DEVICE，设备<br/>
     * 2 = ARTIFICIAL，人工<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    CapacityType?: number | null;
    /**
     * Format: int32
     * @description 排产优先级
     */
    ShiftLevel?: number | null;
    /** @description 设备编码 */
    DeviceCode?: string;
    /** @description 设备名称 */
    DeviceName?: string;
    /** @description 设备型号 */
    DeviceModel?: string;
    /**
     * Format: double
     * @description 设备产能
     */
    DeviceAgeing?: number | null;
    /**
     * Format: double
     * @description 人工产能
     */
    ArtificialAgeing?: number | null;
    /**
     * Format: int32
     * @description 人数
     */
    PersonNum?: number | null;
    /** @description 是否默认 */
    BDefault?: boolean;
    /** @description 是否默认 */
    BDefaultStr?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[BaseSelectDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['BaseSelectDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 基础下拉数据实体 */
  BaseSelectDto: {
    /** @description ID */
    Id?: string;
    /** @description 编码 */
    Code?: string;
    /** @description 名称 */
    Name?: string;
  };
  /** @description 盘点明细保存参数 */
  CheckDetailSaveReqDto: {
    /** @description 盘点任务号 */
    TaskNum: string;
    /** @description 盘点信息 */
    DetailDtos: definitions['CheckDetailDto'][];
  };
  /** @description 盘点明细实体 */
  CheckDetailDto: {
    /** @description 标签卡号 */
    LabelNum: string;
    /** @description 盘点明细 */
    InfoDtos: definitions['CheckDetailInfoDto'][];
  };
  /** @description 盘点明细 */
  CheckDetailInfoDto: {
    /** @description 盘点仓库编码 */
    cWhCode: string;
    /** @description 存货编码 */
    cInvCode: string;
    /** @description 批号 */
    cCVBatch?: string;
    /** @description 货位编码 */
    cPosition?: string;
    /**
     * Format: double
     * @description 盘点数量
     */
    iCVCQuantity?: number | null;
  };
  /** @description 盘点明细修改参数 */
  CheckDetailUpdReqDto: {
    /** @description 盘点ID */
    Id: string;
    /** @description 盘点仓库编码 */
    cWhCode: string;
    /** @description 标签号 */
    LabelNum?: string;
    /** @description 批号 */
    cCVBatch?: string;
    /** @description 货位编码 */
    cPosition?: string;
    /**
     * Format: double
     * @description 盘点数量
     */
    iCVCQuantity?: number | null;
  };
  /** @description 查询盘点明细分页数据参数 */
  QueryCheckDetailPageReqDto: {
    /** @description 盘点任务号 */
    TaskNum?: string;
    /** @description 存货代码或编码 */
    cInvAddCode?: string;
    /** @description 标签号 */
    LabelNum?: string;
    /** @description 是否已汇总 */
    BSummary?: boolean;
    /** @description 仓库编码 */
    cWhCode?: string;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[CheckDetailBaseDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['CheckDetailBaseDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 盘点明细返回基础实体 */
  CheckDetailBaseDto: {
    /** @description 盘点明细ID */
    Id?: string;
    /** @description 盘点任务ID */
    TaskId?: string;
    /** @description 任务号 */
    TaskNum?: string;
    /** @description 标签卡号 */
    LabelNum?: string;
    /** @description 盘点仓库编码 */
    cWhCode?: string;
    /** @description 仓库名称 */
    cWhName?: string;
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 存货代码 */
    cInvAddCode?: string;
    /** @description 存货名称 */
    cInvName?: string;
    /** @description 规格型号 */
    cInvStd?: string;
    /** @description 计量单位编码 */
    cComUnitCode?: string;
    /** @description 计量单位名称 */
    cComUnitName?: string;
    /** @description 批号 */
    cCVBatch?: string;
    /** @description 货位编码 */
    cPosition?: string;
    /**
     * Format: double
     * @description 盘点数量
     */
    iCVCQuantity?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[CheckDetailListDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['CheckDetailListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 盘点明细列表返回实体 */
  CheckDetailListDto: {
    /** @description 是否已汇总 */
    BSummary?: boolean;
    /** @description 是否已汇总 */
    BSummaryDesc?: string;
    /** @description 汇总单号 */
    SummaryCode?: string;
    /**
     * Format: date-time
     * @description 盘点时间
     */
    CreatedTime?: string;
    /**
     * Format: date-time
     * @description 最后修改时间
     */
    UpdatedTime?: string;
    /** @description 盘点人 */
    CreatedUserName?: string;
    /** @description 最后修改人 */
    UpdatedUserName?: string;
    /** @description 盘点明细ID */
    Id?: string;
    /** @description 盘点任务ID */
    TaskId?: string;
    /** @description 任务号 */
    TaskNum?: string;
    /** @description 标签卡号 */
    LabelNum?: string;
    /** @description 盘点仓库编码 */
    cWhCode?: string;
    /** @description 仓库名称 */
    cWhName?: string;
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 存货代码 */
    cInvAddCode?: string;
    /** @description 存货名称 */
    cInvName?: string;
    /** @description 规格型号 */
    cInvStd?: string;
    /** @description 计量单位编码 */
    cComUnitCode?: string;
    /** @description 计量单位名称 */
    cComUnitName?: string;
    /** @description 批号 */
    cCVBatch?: string;
    /** @description 货位编码 */
    cPosition?: string;
    /**
     * Format: double
     * @description 盘点数量
     */
    iCVCQuantity?: number | null;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[WarehouseBaseDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['WarehouseBaseDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 仓库档案基础实体 */
  WarehouseBaseDto: {
    /** @description 仓库编码 */
    cWhCode?: string;
    /** @description 仓库名称 */
    cWhName?: string;
    /** @description 是否启用货位 */
    bWhPos?: boolean;
    /**
     * Format: int32
     * @description 仓库属性 0：普通仓库 1：现场仓
     */
    iWHProperty?: number | null;
    /** @description 仓库属性 */
    WHProperty?: string;
    /** @description 是否代管仓 */
    bProxyWh?: boolean;
    /** @description 是否资产仓 */
    bWhAsset?: boolean;
    /** @description 部门编码 */
    cDepCode?: string;
    /** @description 部门名称 */
    cDepName?: string;
    /** @description 电话 */
    cWhPhone?: string;
    /** @description 负责人 */
    cWhPerson?: string;
    /** @description 计价方式 */
    cWhValueStyle?: string;
  };
  /** @description 查询待汇总盘点明细分页参数 */
  QueryPendingSummaryDetailReqDto: {
    /** @description 盘点任务ID */
    TaskId: string;
    /** @description 盘点仓库编码 */
    cWhCode: string;
    /** @description 盘点明细ID集合 */
    DetailIds?: string[];
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[PendingSummaryDetailDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['PendingSummaryDetailDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 待汇总盘点明细实体 */
  PendingSummaryDetailDto: {
    /** @description 明细ID */
    Id?: string;
    /** @description 标签卡号 */
    LabelNum?: string;
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 存货代码 */
    cInvAddCode?: string;
    /** @description 存货名称 */
    cInvName?: string;
    /** @description 规格型号 */
    cInvStd?: string;
    /** @description 计量单位编码 */
    cComUnitCode?: string;
    /** @description 计量单位名称 */
    cComUnitName?: string;
    /** @description 批号 */
    cCVBatch?: string;
    /** @description 货位编码 */
    cPosition?: string;
    /**
     * Format: double
     * @description 盘点数量
     */
    iCVCQuantity?: number | null;
    /**
     * Format: date-time
     * @description 盘点时间
     */
    CreatedTime?: string;
    /** @description 盘点人 */
    CreatedUserName?: string;
    /** @description 任务号 */
    TaskNum?: string;
    /** @description 任务ID */
    TaskId?: string;
    /** @description 仓库编码 */
    cWhCode?: string;
    /** @description 仓库名称 */
    cWhName?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[CheckSummaryBodyDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['CheckSummaryBodyDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 汇总明细行Dto */
  CheckSummaryBodyDto: {
    /** @description 表体ID */
    Id?: string;
    /** @description 存货编码 */
    cInvCode: string;
    /** @description 存货代码 */
    cInvAddCode?: string;
    /** @description 存货名称 */
    cInvName?: string;
    /** @description 规格型号 */
    cInvStd?: string;
    /** @description 计量单位编码 */
    cComUnitCode?: string;
    /** @description 计量单位名称 */
    cComUnitName?: string;
    /** @description 批号 */
    cCVBatch?: string;
    /** @description 货位编码 */
    cPosition?: string;
    /**
     * Format: double
     * @description 盘点数量
     */
    iCVCQuantity?: number | null;
    /**
     * Format: double
     * @description 账面数
     */
    iAcQuantity?: number | null;
    /**
     * Format: double
     * @description 盘盈数
     */
    CheckWinQty?: number | null;
    /**
     * Format: double
     * @description 盘亏数
     */
    CheckLossQty?: number | null;
    /** @description 备注 */
    dRemark?: string;
    /** @description 汇总记录ID列表 */
    DetailIds?: string[];
  };
  /** @description 盘点汇总单生单参数 */
  CheckSummaryAddReqDto: {
    /** @description 汇总单号 */
    SCode?: string;
    /** @description 盘点仓库 */
    cWhCode: string;
    /** @description 盘点任务ID */
    TaskId: string;
    /** @description 盘点日期 */
    dDate: string;
    /** @description 备注说明 */
    Remark?: string;
    /** @description 表体行数据 */
    BodyDtos: definitions['CheckSummaryBodyDto'][];
  };
  /** @description 盘点汇总单更新请求Dto */
  CheckSummaryUpdDto: {
    /** @description ID */
    Id: string;
    /** @description 盘点日期 */
    dDate: string;
    /** @description 备注 */
    Remark?: string;
    /** @description 表体行数据 */
    BodyDtos: definitions['CheckSummaryBodyDto'][];
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[CheckSummaryInfoDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['CheckSummaryInfoDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 盘点汇总明细实体 */
  CheckSummaryInfoDto: {
    /** @description 主表Id */
    Id?: string;
    /** @description 任务号 */
    TaskNum?: string;
    /** @description 盘点仓库名称 */
    cWhName?: string;
    /** @description 制单人 */
    CreateUser?: string;
    /**
     * Format: date-time
     * @description 创建时间
     */
    CreatedTime?: string;
    /**
     * Format: int32
     * @description 审核状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = PENDING，待审核<br/>
     * 2 = AUDITED，已审核<br/>
     * 3 = REJECT，驳回
     * @enum {number}
     */
    AuditState?: number | null;
    /** @description 审核状态 */
    AuditStateStr?: string;
    /** @description 审核人名称 */
    AuditorName?: string;
    /**
     * Format: date-time
     * @description 审核时间
     */
    AuditTime?: string;
    /** @description U8盘点单号 */
    U8CvCode?: string;
    /** @description 是否已盘库 */
    BWhCheck?: boolean;
    /** @description 汇总单号 */
    SCode?: string;
    /** @description 盘点仓库 */
    cWhCode: string;
    /** @description 盘点任务ID */
    TaskId: string;
    /** @description 盘点日期 */
    dDate: string;
    /** @description 备注说明 */
    Remark?: string;
    /** @description 表体行数据 */
    BodyDtos: definitions['CheckSummaryBodyDto'][];
  };
  /** @description 查询汇总单列表数据 */
  QueryCheckSummaryListReqDto: {
    /**
     * Format: int32
     * @description 审核状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = PENDING，待审核<br/>
     * 2 = AUDITED，已审核<br/>
     * 3 = REJECT，驳回
     * @enum {number}
     */
    AuditState?: number | null;
    /** @description 是否已盘库 不传查所有 */
    BWhCheck?: boolean;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[CheckSummaryListDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['CheckSummaryListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 盘点汇总列表实体 */
  CheckSummaryListDto: {
    /** @description 子表ID */
    Id?: string;
    /** @description 主表ID */
    MainId?: string;
    /** @description 汇总单号 */
    SCode?: string;
    /** @description 任务ID */
    TaskId?: string;
    /** @description 任务号 */
    TaskNum?: string;
    /** @description 盘点仓库编码 */
    cWhCode?: string;
    /** @description 盘点仓库名称 */
    cWhName?: string;
    /** @description 盘点日期 */
    dDate?: string;
    /** @description 备注 */
    Remark?: string;
    /** @description 制单人 */
    CreateUser?: string;
    /**
     * Format: date-time
     * @description 创建时间
     */
    CreatedTime?: string;
    /**
     * Format: int32
     * @description 审核状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = PENDING，待审核<br/>
     * 2 = AUDITED，已审核<br/>
     * 3 = REJECT，驳回
     * @enum {number}
     */
    AuditState?: number | null;
    /** @description 是否已盘库 */
    BWhCheck?: boolean;
    /** @description 是否已盘库 */
    BWhCheckDesc?: string;
    /** @description 审核状态 */
    AuditStateStr?: string;
    /** @description 审核人名称 */
    AuditorName?: string;
    /**
     * Format: date-time
     * @description 审核时间
     */
    AuditTime?: string;
    /** @description U8盘点单号 */
    U8CvCode?: string;
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 存货代码 */
    cInvAddCode?: string;
    /** @description 存货名称 */
    cInvName?: string;
    /** @description 规格型号 */
    cInvStd?: string;
    /** @description 计量单位编码 */
    cComUnitCode?: string;
    /** @description 计量单位名称 */
    cComUnitName?: string;
    /**
     * Format: double
     * @description 盘点数量
     */
    iCVCQuantity?: number | null;
    /**
     * Format: double
     * @description 账面数
     */
    iAcQuantity?: number | null;
    /**
     * Format: double
     * @description 盘盈数
     */
    CheckWinQty?: number | null;
    /**
     * Format: double
     * @description 盘亏数
     */
    CheckLossQty?: number | null;
    /** @description 表体备注 */
    dRemark?: string;
  };
  /** @description 盘点任务保存参数 */
  CheckTaskSaveDto: {
    /** @description 盘点任务号 */
    TaskNum: string;
    /** @description 盘点日期（默认当天） */
    dCheckDate: string;
    /** @description 备注 */
    Remark?: string;
    /** @description 是否是新建状态 */
    bNew?: boolean;
    /** @description 是否新建即开始 */
    bNewAndStart?: boolean;
  };
  /** @description 盘点任务操作参数 */
  CheckTaskActionDto: {
    /** @description 任务ID */
    Id: string;
    /**
     * Format: int32
     * @description 任务状态 -只能是 1-4<br/>
     * 0 = NEW，新建<br/>
     * 1 = CHECKING，盘点中<br/>
     * 2 = SUSPEND，暂停<br/>
     * 3 = RECOVERY，恢复<br/>
     * 4 = FINISHED，结束<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    TaskState?: number | null;
  };
  /** @description 查询盘点任务分页列表 */
  QueryCheckTaskPageDto: {
    /**
     * Format: int32
     * @description 任务状态<br/>
     * 0 = NEW，新建<br/>
     * 1 = CHECKING，盘点中<br/>
     * 2 = SUSPEND，暂停<br/>
     * 3 = RECOVERY，恢复<br/>
     * 4 = FINISHED，结束<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    TaskState?: number | null;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[CheckTaskListDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['CheckTaskListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 盘点任务返回实体 */
  CheckTaskListDto: {
    /** @description Id */
    Id?: string;
    /** @description 盘点任务号 */
    TaskNum?: string;
    /** @description 盘点日期 */
    dCheckDate?: string;
    /**
     * Format: int32
     * @description 任务状态<br/>
     * 0 = NEW，新建<br/>
     * 1 = CHECKING，盘点中<br/>
     * 2 = SUSPEND，暂停<br/>
     * 3 = RECOVERY，恢复<br/>
     * 4 = FINISHED，结束<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    TaskState?: number | null;
    /** @description 备注 */
    Remark?: string;
    /**
     * Format: int32
     * @description 流水号
     */
    Idx?: number | null;
    /** @description 子表集合 */
    DetailEntities?: definitions['CheckDetailEntity'][];
    /**
     * Format: date-time
     * @description 创建时间
     */
    CreatedTime?: string;
    /**
     * Format: date-time
     * @description 更新时间
     */
    UpdatedTime?: string;
    /** @description 创建者Id */
    CreatedUserId?: string;
    /** @description 创建者名称 */
    CreatedUserName?: string;
    /** @description 修改者Id */
    UpdatedUserId?: string;
    /** @description 修改者名称 */
    UpdatedUserName?: string;
    /** @description 软删除 */
    IsDeleted?: boolean;
    /** @description 是否启用 */
    IsEnabled?: boolean;
    /** @description U8账套号 */
    AccId?: string;
  };
  /** @description 盘点明细表 */
  CheckDetailEntity: {
    /**
     * Format: int64
     * @description 盘点任务ID
     */
    TaskId?: string;
    /** @description 标签卡号 */
    LabelNum?: string;
    /** @description 盘点仓库编码 */
    cWhCode?: string;
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 批号 */
    cCVBatch?: string;
    /** @description 货位编码 */
    cPosition?: string;
    /**
     * Format: double
     * @description 盘点数量
     */
    iCVCQuantity?: number | null;
    /** @description 是否已汇总 */
    BSummary?: boolean;
    /** @description 汇总单号 */
    SummaryCode?: string;
    /**
     * Format: int64
     * @description 汇总单子表ID
     */
    SummaryDId?: string;
    /**
     * Format: date-time
     * @description 创建时间
     */
    CreatedTime?: string;
    /**
     * Format: date-time
     * @description 更新时间
     */
    UpdatedTime?: string;
    /** @description 创建者Id */
    CreatedUserId?: string;
    /** @description 创建者名称 */
    CreatedUserName?: string;
    /** @description 修改者Id */
    UpdatedUserId?: string;
    /** @description 修改者名称 */
    UpdatedUserName?: string;
    /** @description 软删除 */
    IsDeleted?: boolean;
    /** @description 是否启用 */
    IsEnabled?: boolean;
    /** @description U8账套号 */
    AccId?: string;
    /**
     * Format: int64
     * @description 主键Id
     */
    Id?: string;
  };
  /** @description 查询暂存数据 */
  QueryCheckVouchStagDataReqDto: {
    /** @description 盘点仓库编码 */
    cWhCode: string;
    /** @description 盘点日期 */
    dCVDate: string;
    /** @description 盘点部门 */
    cDepCode: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[CheckVouchInvDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['CheckVouchInvDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 盘点存货信息 */
  CheckVouchInvDto: {
    /** @description 存货名称 */
    cInvName?: string;
    /** @description 存货代码 */
    cInvAddCode?: string;
    /** @description 货位名称 */
    cPosName?: string;
    /** @description 存货编码 */
    cInvCode: string;
    /** @description 批号 */
    cCVBatch?: string;
    /** @description 货位编码 */
    cPosition?: string;
    /**
     * Format: double
     * @description 盘点数量
     */
    iCVCQuantity?: number | null;
  };
  /** @description 盘点单保存参数 */
  CheckVouchSaveReqDto: {
    /** @description 盘点仓库编码 */
    cWhCode: string;
    /** @description 盘点日期 */
    dCVDate: string;
    /** @description 盘点部门 */
    cDepCode: string;
    /**
     * Format: int32
     * @description 操作类型<br/>
     * 0 = Staging，暂存<br/>
     * 1 = Submit，提交<br/>
     * 2 = Check，验货
     * @enum {number}
     */
    ActionType: number | null;
    /** @description 存货明细列表 */
    InvDtos?: definitions['CheckVouchInvBaseDto'][];
    /** @description 备注 */
    cMemo?: string;
  };
  /** @description 盘点产品明细实体 */
  CheckVouchInvBaseDto: {
    /** @description 存货编码 */
    cInvCode: string;
    /** @description 批号 */
    cCVBatch?: string;
    /** @description 货位编码 */
    cPosition?: string;
    /**
     * Format: double
     * @description 盘点数量
     */
    iCVCQuantity?: number | null;
  };
  /** @description JSON Save Request DTO */
  JsonSaveReqDto: {
    JsonData: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[BaoLuDashboardResDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['BaoLuDashboardResDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 宝陆看板结果实体 */
  BaoLuDashboardResDto: {
    CyPLanComRateResDto?: definitions['PLanComRateResDto'];
    QJDPLanComRateResDto?: definitions['PLanComRateResDto'];
    /** @description 自定义维护的常量指标Json */
    ConstIdxJson?: string;
    /** @description 订单生产进度 */
    PlanMoProcessInfoDtos?: definitions['PlanMoProcessInfoDto'][];
    /** @description 7日内交付风险数据 */
    SerDayDeliveryDataDtos?: definitions['SoDeliveryDataDto'][];
    /** @description 月份产量和发货量数据 */
    MoAndDeliveryQtyDtos?: definitions['MoAndDeliveryQtyDto'][];
    /** @description 日发货量数据 */
    DayDeliveryQtyDtos?: definitions['DayDeliveryQtyDto'][];
    /** @description 库存分类数据 */
    StockInvClsDtos?: definitions['StockInvClsDto'][];
    /** @description 月库存记录数据 */
    MonthStockRecordDtos?: definitions['MonthStockRecordDto'][];
  };
  /** @description 计划完成率结果Dto */
  PLanComRateResDto: {
    /**
     * Format: int32
     * @description 存货类型
     */
    InvType?: number | null;
    /** @description 存货类型名称 */
    InvTypeName?: string;
    /** @description 出货情况 */
    ShipItem?: definitions['PLanComRateResItemDto'];
    /** @description 生产情况 */
    MoItem?: definitions['PLanComRateResItemDto'];
  };
  /** @description 订单生产进度信息Dto */
  PlanMoProcessInfoDto: {
    /** @description 订单编号 */
    MoCode?: string;
    /**
     * Format: int32
     * @description 行号
     */
    SortSeq?: number | null;
    /** @description 存货编码 */
    InvCode?: string;
    /** @description 零件号 */
    InvAddCode?: string;
    /** @description 存货名称 */
    InvName?: string;
    /**
     * Format: double
     * @description 计划生产数量
     */
    IssueQty?: number | null;
    /**
     * Format: double
     * @description 生产进度
     */
    Process?: number | null;
  };
  /** @description 7日内交付风险数据 */
  SoDeliveryDataDto: {
    /**
     * Format: int32
     * @description 序号
     */
    NoNum?: number | null;
    /** @description 存货编码 */
    cinvcode?: string;
    /** @description 零件号 */
    cinvaddcode?: string;
    /** @description 存货名称 */
    cinvname?: string;
    /**
     * Format: double
     * @description 缺货数量
     */
    QlQty?: number | null;
  };
  /** @description 月度产量和发货量 */
  MoAndDeliveryQtyDto: {
    /** @description 周期 */
    iperiod?: string;
    /**
     * Format: int32
     * @description 月份
     */
    month?: number | null;
    /**
     * Format: double
     * @description 产量
     */
    moqty?: number | null;
    /**
     * Format: double
     * @description 发货量
     */
    disqty?: number | null;
  };
  /** @description 日度发货量 */
  DayDeliveryQtyDto: {
    /** @description 日期 */
    tday?: string;
    /**
     * Format: int32
     * @description 天数
     */
    iday?: number | null;
    /**
     * Format: double
     * @description 发货量
     */
    disqty?: number | null;
  };
  /** @description 库存类别Dto */
  StockInvClsDto: {
    /** @description 存货类别编码 */
    cInvCCode?: string;
    /** @description 存货类别名称 */
    cInvCName?: string;
    /**
     * Format: double
     * @description 库存数量
     */
    StockQty?: number | null;
    /**
     * Format: double
     * @description 库存占比
     */
    Rate?: number | null;
  };
  /** @description 阅读收发存数据 */
  MonthStockRecordDto: {
    /** @description 年月 */
    iperiod?: string;
    /**
     * Format: int32
     * @description 月份
     */
    month?: number | null;
    /**
     * Format: double
     * @description 入库数量
     */
    rdqty?: number | null;
    /**
     * Format: double
     * @description 出库数量
     */
    ckqty?: number | null;
    /**
     * Format: double
     * @description 结存数量
     */
    jcqty?: number | null;
    /**
     * Format: double
     * @description 期初数量
     */
    qcqty?: number | null;
  };
  /** @description 计划完成率结果明细Dto */
  PLanComRateResItemDto: {
    /**
     * Format: double
     * @description 计划数
     */
    PlanQty?: number | null;
    /**
     * Format: double
     * @description 实际数
     */
    RealQty?: number | null;
    /**
     * Format: double
     * @description 完成率
     */
    ComRate?: number | null;
  };
  /** @description 设备档案报存参数 */
  DeviceSaveReqDto: {
    /** @description 主键ID */
    Id?: string;
    /** @description 设备编码/代号 */
    Code: string;
    /** @description 设备名称 */
    Name: string;
    /** @description 设备型号 */
    Model?: string;
    /** @description 设备序列号 */
    SN?: string;
    /**
     * Format: date-time
     * @description 采购日期
     */
    PurDate?: string;
    /** @description 设备类型编码（来源数据字典） */
    TypeCode: string;
    /** @description 备注/说明 */
    Remark?: string;
    /** @description 车间ID */
    WorkShopId?: string;
    /**
     * Format: int32
     * @description 设备状态<br/>
     * 0 = Normal，正常<br/>
     * 1 = Repair，维修中<br/>
     * 2 = Maintenance，保养中<br/>
     * 3 = Scrap，报废<br/>
     * 4 = InUse，在用<br/>
     * 5 = WaitRepair，待维修<br/>
     * 6 = WaitMaintenance，待保养<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    DeviceState?: number | null;
    /** @description 是否排产 */
    BAPS?: boolean;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[DeviceInfoDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['DeviceInfoDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 设备信息实体 */
  DeviceInfoDto: {
    /** @description 分类名称 */
    TypeName?: string;
    /** @description 车间 */
    WorkShop?: string;
    /** @description 是否排产设备 */
    BAPSStr?: string;
    /** @description 设备状态 */
    DeviceStateDesc?: string;
    /** @description 创建人 */
    CreatedUserName?: string;
    /**
     * Format: date-time
     * @description 创建时间
     */
    CreatedTime?: string;
    /** @description 主键ID */
    Id?: string;
    /** @description 设备编码/代号 */
    Code: string;
    /** @description 设备名称 */
    Name: string;
    /** @description 设备型号 */
    Model?: string;
    /** @description 设备序列号 */
    SN?: string;
    /**
     * Format: date-time
     * @description 采购日期
     */
    PurDate?: string;
    /** @description 设备类型编码（来源数据字典） */
    TypeCode: string;
    /** @description 备注/说明 */
    Remark?: string;
    /** @description 车间ID */
    WorkShopId?: string;
    /**
     * Format: int32
     * @description 设备状态<br/>
     * 0 = Normal，正常<br/>
     * 1 = Repair，维修中<br/>
     * 2 = Maintenance，保养中<br/>
     * 3 = Scrap，报废<br/>
     * 4 = InUse，在用<br/>
     * 5 = WaitRepair，待维修<br/>
     * 6 = WaitMaintenance，待保养<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    DeviceState?: number | null;
    /** @description 是否排产 */
    BAPS?: boolean;
  };
  /** @description 查询设备分页数据参数 */
  QueryDevicePageReqDto: {
    /** @description 分类编码集合 */
    TypeCodes?: string[];
    /** @description 车间ID */
    WorkShopId?: string;
    /**
     * Format: int32
     * @description 设备状态<br/>
     * 0 = Normal，正常<br/>
     * 1 = Repair，维修中<br/>
     * 2 = Maintenance，保养中<br/>
     * 3 = Scrap，报废<br/>
     * 4 = InUse，在用<br/>
     * 5 = WaitRepair，待维修<br/>
     * 6 = WaitMaintenance，待保养<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    DeviceState?: number | null;
    /** @description 是否只查排产设备 */
    BAPS?: boolean;
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 工序ID */
    OpId?: string;
    /** @description 是根据产能对照表过滤 */
    BFilterCapacity?: boolean;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[DeviceInfoDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['DeviceInfoDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[TreeSelectDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['TreeSelectDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 通用树下拉实体 */
  TreeSelectDto: {
    /** @description 编码 */
    code?: string;
    /** @description 是否展开 */
    spread?: boolean;
    id?: string;
    title?: string;
    parentId?: string;
    hasChildren?: boolean;
    children?: definitions['TreeSelectDto'][];
  };
  /** @description 根据车间和工序查询设备集合 */
  QueryDeviceByWorkShopAndOpReqDto: {
    /** @description 车间ID */
    WorkShopId?: string;
    /** @description 工序ID集合 */
    OpIds: string[];
  };
  /** @description 不带分页的JSON泛型LIST返回类型 */
  'LLJsonResult[WorkShopOpDeviceDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['WorkShopOpDeviceDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 车间工序设备信息 */
  WorkShopOpDeviceDto: {
    /** @description 工序ID */
    OpId?: string;
    /** @description 设备ID */
    DeviceId?: string;
    /** @description 设备编码 */
    DeviceCode?: string;
    /** @description 设备名称 */
    DeviceName?: string;
  };
  /** @description 故障分类基础信息实体 */
  FaultClassBaseDto: {
    /** @description ID */
    Id?: string;
    /** @description 编码 */
    Code: string;
    /** @description 名称 */
    Name: string;
    /** @description 是否启用 */
    IsEnabled?: boolean;
    /** @description 启用状态 */
    Enabled?: string;
    /** @description 备注 */
    Remark?: string;
    /** @description 所属上级ID */
    ParentId?: string;
    /** @description 所属上级名称 */
    ParentName?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[FaultClassInfoDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['FaultClassInfoDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 故障分类信息实体 */
  FaultClassInfoDto: {
    /**
     * Format: date-time
     * @description 创建时间
     */
    CreatedTime?: string;
    /**
     * Format: date-time
     * @description 更新时间
     */
    UpdatedTime?: string;
    /** @description 创建者名称 */
    CreatedUserName?: string;
    /** @description 修改者名称 */
    UpdatedUserName?: string;
    /** @description ID */
    Id?: string;
    /** @description 编码 */
    Code: string;
    /** @description 名称 */
    Name: string;
    /** @description 是否启用 */
    IsEnabled?: boolean;
    /** @description 启用状态 */
    Enabled?: string;
    /** @description 备注 */
    Remark?: string;
    /** @description 所属上级ID */
    ParentId?: string;
    /** @description 所属上级名称 */
    ParentName?: string;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[FaultClassInfoDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['FaultClassInfoDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 查询工序委外待发料列表 */
  QueryHyMoIssueListReqDto: {
    /** @description 查询关键字（生产订单号/计划单号/流转卡条码） */
    keyWord?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[HyMoIssueListDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['HyMoIssueListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 工序委外待发料列表 */
  HyMoIssueListDto: {
    /**
     * Format: int32
     * @description 生产订单主表ID
     */
    MoId?: number | null;
    /**
     * Format: int32
     * @description 生产订单子表ID
     */
    MoDId?: number | null;
    /** @description 生产订单号 */
    MoCode?: string;
    /** @description 计划ID */
    PlanId?: string;
    /** @description 计划单号 */
    PlanCode?: string;
    /** @description 存货编码 */
    InvCode?: string;
    /** @description 存货名称 */
    InvName?: string;
    /** @description 开工日期 */
    StartDate?: string;
    /** @description 完工日期 */
    DueDate?: string;
    /** @description 委外工序Id */
    HyMoOpId?: string;
    /** @description 委外工序名称 */
    HyMoOpName?: string;
    /**
     * Format: int32
     * @description 委外工序行号
     */
    HyMoOpSeq?: number | null;
    /**
     * Format: double
     * @description 待发料总数量
     */
    IssueQty?: number | null;
    /**
     * Format: double
     * @description 已发料总数量
     */
    IssueQtyed?: number | null;
    /**
     * Format: double
     * @description 剩余可发料数量
     */
    SyIssueQty?: number | null;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[HyMoReviceListDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['HyMoReviceListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 工序委外待收料列表 */
  HyMoReviceListDto: {
    /**
     * Format: int32
     * @description 生产订单主表ID
     */
    MoId?: number | null;
    /**
     * Format: int32
     * @description 生产订单子表ID
     */
    MoDId?: number | null;
    /** @description 生产订单号 */
    MoCode?: string;
    /** @description 计划ID */
    PlanId?: string;
    /** @description 计划单号 */
    PlanCode?: string;
    /** @description 供应商编码 */
    cVenCode?: string;
    /** @description 供应商名称 */
    cVenName?: string;
    /** @description 存货编码 */
    InvCode?: string;
    /** @description 存货名称 */
    InvName?: string;
    /** @description 开工日期 */
    StartDate?: string;
    /** @description 完工日期 */
    DueDate?: string;
    /** @description 工序资料子表ID */
    MoRoutingDId?: string;
    /** @description 委外工序Id */
    HyMoOpId?: string;
    /** @description 委外工序名称 */
    HyMoOpName?: string;
    /**
     * Format: int32
     * @description 委外工序行号
     */
    HyMoOpSeq?: number | null;
    /**
     * Format: double
     * @description 待收料总数量
     */
    ReceiveQty?: number | null;
    /**
     * Format: double
     * @description 已收料总数量
     */
    ReceiveQtyed?: number | null;
    /**
     * Format: double
     * @description 剩余可收料总数量
     */
    SyReceiveQty?: number | null;
    /** @description 恪守了明细信息 */
    BodyDtos?: definitions['HyMoOrderReviceInfoDto'][];
  };
  /** @description 委外收料明细实体 */
  HyMoOrderReviceInfoDto: {
    /** @description 委外加工单号 */
    HyCode?: string;
    /**
     * Format: int32
     * @description 委外加工单ID
     */
    HyId?: number | null;
    /**
     * Format: int32
     * @description 委外加工单子表ID
     */
    HyDId?: number | null;
    /**
     * Format: double
     * @description 剩余可收料数量
     */
    ExecQty?: number | null;
  };
  /** @description 扫码查询工序委外明细信息 */
  QueryHyMoOrderInfoReqDto: {
    /** @description 流转卡条码 */
    BarCode: string;
    /**
     * Format: int32
     * @description 扫描入口<br/>
     * 0 = ALL，全部<br/>
     * 1 = FOREIGN，委外发料<br/>
     * 2 = FOREIGN_RECEIVE，委外收料
     * @enum {number}
     */
    ScanEntry?: number | null;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[HyMoOrderInfoDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['HyMoOrderInfoDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 工序委外收发记录明细 */
  HyMoOrderInfoDto: {
    /**
     * Format: int32
     * @description 生产订单主表ID
     */
    MoId?: number | null;
    /**
     * Format: int32
     * @description 生产订单子表ID
     */
    MoDId?: number | null;
    /** @description 生产订单号 */
    MoCode?: string;
    /** @description 计划ID */
    PlanId?: string;
    /** @description 计划单号 */
    PlanCode?: string;
    /** @description 存货编码 */
    InvCode?: string;
    /** @description 存货名称 */
    InvName?: string;
    /** @description 开工日期 */
    StartDate?: string;
    /** @description 完工日期 */
    DueDate?: string;
    /** @description 工序集合 */
    OpDtos?: definitions['HyMoOrderOpDto'][];
  };
  /** @description 工序委外对应的工序信息 */
  HyMoOrderOpDto: {
    /** @description 委外工序Id */
    HyMoOpId?: string;
    /** @description 委外工序名称 */
    HyMoOpName?: string;
    /**
     * Format: int32
     * @description 委外工序行号
     */
    HyMoOpSeq?: number | null;
    /**
     * Format: double
     * @description 数量
     */
    Qty?: number | null;
    /**
     * Format: double
     * @description 已操作数量
     */
    Qtyed?: number | null;
    /**
     * Format: double
     * @description 剩余可操作数量
     */
    SyQty?: number | null;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[HyReviceScanInfoDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['HyReviceScanInfoDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 委外收料流转卡扫描返回实体 */
  HyReviceScanInfoDto: {
    /**
     * Format: int32
     * @description 生产订单主表ID
     */
    MoId?: number | null;
    /**
     * Format: int32
     * @description 生产订单子表ID
     */
    MoDId?: number | null;
    /** @description 生产订单号 */
    MoCode?: string;
    /** @description 计划ID */
    PlanId?: string;
    /** @description 计划单号 */
    PlanCode?: string;
    /** @description 存货编码 */
    InvCode?: string;
    /** @description 存货名称 */
    InvName?: string;
    /** @description 开工日期 */
    StartDate?: string;
    /** @description 完工日期 */
    DueDate?: string;
    /** @description 供应商列表 */
    VendorDtos?: definitions['HyReviceVendorDto'][];
  };
  /** @description 委外收料流转卡扫描供应商返回实体 */
  HyReviceVendorDto: {
    /** @description 供应商编码 */
    cVenCode?: string;
    /** @description 供应商名称 */
    cVenName?: string;
    /** @description 工序实体 */
    OpDtos?: definitions['HyReviceOpInfoDto'][];
  };
  /** @description 委外收料流转卡扫描工序返回实体 */
  HyReviceOpInfoDto: {
    /** @description 委外工序Id */
    HyMoOpId?: string;
    /** @description 委外工序名称 */
    HyMoOpName?: string;
    /**
     * Format: int32
     * @description 委外工序行号
     */
    HyMoOpSeq?: number | null;
    /**
     * Format: double
     * @description 待收料总数量
     */
    ReceiveQty?: number | null;
    /**
     * Format: double
     * @description 已收料总数量
     */
    ReceiveQtyed?: number | null;
    /**
     * Format: double
     * @description 剩余可收料总数量
     */
    SyReceiveQty?: number | null;
  };
  /** @description 委外工序保存请求 */
  HyMoOrderSaveReqDto: {
    /**
     * Format: int32
     * @description 操作类型<br/>
     * 0 = ALL，全部<br/>
     * 1 = FOREIGN，委外发料<br/>
     * 2 = FOREIGN_RECEIVE，委外收料
     * @enum {number}
     */
    Entry: number | null;
    /** @description 供应商参数集合 */
    VenDtos: definitions['HyMoOrderVenDto'][];
  };
  /** @description 委外工序供保存时供应商参数实体 */
  HyMoOrderVenDto: {
    /** @description 委外供应商编码 */
    cVenCode: string;
    /** @description 单据日期（对应发料/收料） */
    dDate?: string;
    /** @description 备注 */
    Remark?: string;
    /** @description 工序明细列表 */
    OpDtos: definitions['HyMoOrderVenOpDto'][];
  };
  /** @description 工序委外的工序信息 */
  HyMoOrderVenOpDto: {
    /** @description 计划ID */
    PlanId: string;
    /** @description 工序ID */
    OpId: string;
    /** @description 工序名称 */
    OpName?: string;
    /** @description 存货编码 */
    cInvCode: string;
    /**
     * Format: double
     * @description 数量
     */
    Qty: number | null;
    /**
     * Format: double
     * @description 不良数量（收料用）
     */
    ScrapQty?: number | null;
    /** @description 不良原因（收料用） */
    ScrapMsg?: string;
  };
  /** @description 委外收料单保存 */
  HyMoReviceSaveReqDto: {
    /** @description 提交参数列表 */
    InputDtos: definitions['HyMoReviceInputDto'][];
  };
  /** @description 委外工单提交参数实体 */
  HyMoReviceInputDto: {
    /** @description 计划ID */
    PlanId: string;
    /**
     * Format: int32
     * @description 生产订单主表ID
     */
    MoId?: number | null;
    /**
     * Format: int32
     * @description 生产订单子表ID
     */
    MoDId?: number | null;
    /** @description 供应商编码 */
    cVenCode: string;
    /** @description 工序ID */
    HyMoOpId: string;
    /**
     * Format: double
     * @description 收料数量
     */
    ReviceQty?: number | null;
    /**
     * Format: double
     * @description 不良数量
     */
    ScrapQty?: number | null;
    /** @description 不良原因 */
    Reason?: string;
  };
  /** @description 委外收料不良记录请求参数 */
  QueryHyMoReviceScrapReqDto: {
    /** @description 计划ID */
    PlanId?: string;
    /** @description 工序ID */
    OpId?: string;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[HyMoReviceScrapDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['HyMoReviceScrapDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 委外收料不良记录返回实习 */
  HyMoReviceScrapDto: {
    /** @description 生产订单号 */
    MoCode?: string;
    /** @description 计划单号 */
    PlanCode?: string;
    /**
     * Format: int32
     * @description 行号
     */
    SortSeq?: number | null;
    /** @description 存货编码 */
    InvCode?: string;
    /** @description 存货名称 */
    InvName?: string;
    /**
     * Format: double
     * @description 生产订单数量
     */
    MoQty?: number | null;
    /**
     * Format: double
     * @description 下达数量
     */
    IssueQty?: number | null;
    /** @description 开工日期 */
    StartDate?: string;
    /** @description 完工日期 */
    DueDate?: string;
    /**
     * Format: int32
     * @description 生产订单主表ID
     */
    MoId?: number | null;
    /**
     * Format: int32
     * @description 生产订单子表ID
     */
    MoDId?: number | null;
    /**
     * Format: int64
     * @description 计划ID
     */
    PlanId?: string;
    /**
     * Format: int64
     * @description 工序ID
     */
    OpId?: string;
    /**
     * Format: int32
     * @description 工序行号
     */
    OpSeq?: number | null;
    /** @description 工序名称 */
    OpName?: string;
    /**
     * Format: double
     * @description 不良数量
     */
    ScrapQty?: number | null;
    /** @description 不良原因 */
    Reason?: string;
    /**
     * Format: date-time
     * @description 创建时间
     */
    CreateTime?: string;
    /**
     * Format: int32
     * @description 主键Id
     */
    Id?: number | null;
    /** @description U8账套号 */
    AccId?: string;
  };
  /** @description 查询请假单分页Dto */
  QueryLeaveDocPageReqDto: {
    /** @description 车间Id */
    WorkShopId?: string;
    /** @description 班组ID */
    TeamGroupId?: string;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[LeaveDocInfoDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['LeaveDocInfoDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 请假单明细Dto */
  LeaveDocInfoDto: {
    /** @description 车间名称 */
    WorkShopName?: string;
    /** @description 班组名称 */
    TeamGroupName?: string;
    /** @description 制单人 */
    CreatedUserName?: string;
    /** @description 制单日期 */
    CreatedTime?: string;
    /** @description 生效状态 */
    IsEnabled?: boolean;
    /** @description 生效状态 */
    IsEnabledStr?: string;
    /** @description 修改时需要传 */
    Id: string;
    /** @description 单号 */
    DocCode?: string;
    /** @description 所属车间Id */
    WorkShopId: string;
    /** @description 所属班组Id */
    TeamGroupId: string;
    /** @description 请假人员编码 */
    cPersonCode: string;
    /** @description 请假人员名称 */
    cPerson?: string;
    /** @description 开始时间 */
    StartTime: string;
    /** @description 结束时间 */
    EndTime: string;
    /** @description 请假原因 */
    Reason?: string;
  };
  /** @description 请假单保存Dto */
  LeaveDocSaveReqDto: {
    /** @description 修改时需要传 */
    Id: string;
    /** @description 单号 */
    DocCode?: string;
    /** @description 所属车间Id */
    WorkShopId: string;
    /** @description 所属班组Id */
    TeamGroupId: string;
    /** @description 请假人员编码 */
    cPersonCode: string;
    /** @description 请假人员名称 */
    cPerson?: string;
    /** @description 开始时间 */
    StartTime: string;
    /** @description 结束时间 */
    EndTime: string;
    /** @description 请假原因 */
    Reason?: string;
  };
  /** @description 获取账套请求参数 */
  QueryAccListReqDto: {
    /** @description 用户密码 */
    cPassWord?: string;
    /** @description 用户ID */
    cUserId: string;
    /**
     * Format: int32
     * @description 登录系统（默认PC）<br/>
     * 0 = PDA，PDA<br/>
     * 1 = PC，PC端<br/>
     * 2 = VEN，供应商
     * @enum {number}
     */
    SystemType?: number | null;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[UAccInfoRepDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['UAccInfoRepDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description U8账套信息实体 */
  UAccInfoRepDto: {
    /** @description 账套编号 */
    sAccId?: string;
    /** @description 账套名称 */
    sAccName?: string;
  };
  /** @description 登录的参数实体 */
  LoginReqDto: {
    /** @description 账套ID */
    sAccId: string;
    /** @description PDA登陆时必传 */
    uuid: string;
    /** @description 是否强制登录，将其他客户端踢下线 */
    ForceLogin?: boolean;
    /** @description 用户密码 */
    cPassWord?: string;
    /** @description 用户ID */
    cUserId: string;
    /**
     * Format: int32
     * @description 登录系统（默认PC）<br/>
     * 0 = PDA，PDA<br/>
     * 1 = PC，PC端<br/>
     * 2 = VEN，供应商
     * @enum {number}
     */
    SystemType?: number | null;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[LoginResDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['LoginResDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 登录返回参数实体 */
  LoginResDto: {
    /** @description accessToken */
    accessToken?: string;
    /** @description 过期时间 */
    cExpiry?: string;
    /** @description 登录的用户ID */
    cUserId?: string;
    /** @description 登录用户名 */
    cUserName?: string;
    /** @description 登录的账套ID */
    cAccId?: string;
    /** @description 登录账套名称 */
    cAccName?: string;
    /**
     * Format: int32
     * @description 登录系统类型<br/>
     * 0 = PDA，PDA<br/>
     * 1 = PC，PC端<br/>
     * 2 = VEN，供应商
     * @enum {number}
     */
    LoginSys?: number | null;
    /** @description WEBSOCKET连接地址(需要前端你自己拼上 ws://ip:port) */
    webSocketUrl?: string;
    /** @description 是否无任何权限 */
    BNonAnyAuth?: boolean;
  };
  /** @description PDA设备许可绑定参数实体 */
  AppDeviceLicenceBindReqDto: {
    /** @description 设备型号 */
    DeviceModel?: string;
    /** @description 设备厂商 */
    DeviceVendor?: string;
    /** @description 设备的UUID */
    DevieceId: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[BarCodeAuthDeviceEntity]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['BarCodeAuthDeviceEntity'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 条码授权设备记录表 */
  BarCodeAuthDeviceEntity: {
    /**
     * Format: int32
     * @description 主键自增
     */
    Id?: number | null;
    /** @description 设备型号 */
    DeviceModel?: string;
    /** @description 设备厂商 */
    DeviceVendor?: string;
    /** @description 设备的UUID */
    DevieceId?: string;
    /** @description 加密串 */
    EnPwdSalt?: string;
    /**
     * Format: date-time
     * @description 授权时间
     */
    AddTime?: string;
    /** @description 备注 */
    Remark?: string;
  };
  /** @description 模具档案保存实体 */
  MoldSaveReqDto: {
    /** @description 修改时需传 */
    Id?: string;
    /** @description 模具编码/代号 */
    Code: string;
    /** @description 模具名称 */
    Name: string;
    /** @description 模具类型编码（来源数据字典） */
    MoldTypeCode?: string;
    /**
     * Format: int32
     * @description 模穴数
     */
    PCS?: number | null;
    /** @description 模具号 */
    Model?: string;
    /** @description 客户编码 */
    cCusCode?: string;
    /** @description 客户名称 */
    cCusName?: string;
    /** @description 备注 */
    Remark?: string;
    /** @description 车间ID */
    WorkShopId?: string;
    /**
     * Format: int32
     * @description 模具状态<br/>
     * 0 = Normal，正常<br/>
     * 1 = Repair，维修中<br/>
     * 2 = Maintenance，保养中<br/>
     * 3 = Scrap，报废<br/>
     * 4 = InUse，在用<br/>
     * 5 = WaitRepair，待维修<br/>
     * 6 = WaitMaintenance，待保养<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    State?: number | null;
    /** @description 模具状态 */
    StateDesc?: string;
    /** @description 是否左右件（当模穴数为偶数时可设置） */
    BLeftAndRight?: boolean;
    /** @description 是否左右件（当模穴数为偶数时可设置） */
    BLeftAndRightDesc?: string;
    /** @description 左件编码 */
    LeftInvCode?: string;
    /** @description 右件编码 */
    RightInvCode?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[MoldInfoDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['MoldInfoDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 设备档案明细实体 */
  MoldInfoDto: {
    /** @description 模具类型 */
    MoldType?: string;
    /** @description 车间 */
    WorkShop?: string;
    /** @description 创建人 */
    CreatedUserName?: string;
    /**
     * Format: date-time
     * @description 创建时间
     */
    CreatedTime?: string;
    /** @description 修改时需传 */
    Id?: string;
    /** @description 模具编码/代号 */
    Code: string;
    /** @description 模具名称 */
    Name: string;
    /** @description 模具类型编码（来源数据字典） */
    MoldTypeCode?: string;
    /**
     * Format: int32
     * @description 模穴数
     */
    PCS?: number | null;
    /** @description 模具号 */
    Model?: string;
    /** @description 客户编码 */
    cCusCode?: string;
    /** @description 客户名称 */
    cCusName?: string;
    /** @description 备注 */
    Remark?: string;
    /** @description 车间ID */
    WorkShopId?: string;
    /**
     * Format: int32
     * @description 模具状态<br/>
     * 0 = Normal，正常<br/>
     * 1 = Repair，维修中<br/>
     * 2 = Maintenance，保养中<br/>
     * 3 = Scrap，报废<br/>
     * 4 = InUse，在用<br/>
     * 5 = WaitRepair，待维修<br/>
     * 6 = WaitMaintenance，待保养<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    State?: number | null;
    /** @description 模具状态 */
    StateDesc?: string;
    /** @description 是否左右件（当模穴数为偶数时可设置） */
    BLeftAndRight?: boolean;
    /** @description 是否左右件（当模穴数为偶数时可设置） */
    BLeftAndRightDesc?: string;
    /** @description 左件编码 */
    LeftInvCode?: string;
    /** @description 右件编码 */
    RightInvCode?: string;
  };
  /** @description 查询模具档案分页列表参数 */
  QueryMoldPageReqDto: {
    /** @description 客户编码 */
    cCusCodes?: string[];
    /** @description 模具类型编码 */
    MoldTypeCodes?: string[];
    /** @description 是否查询已生码的数据 */
    bFilterRawCode?: boolean;
    /** @description 车间ID */
    WorkShopId?: string;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[MoldInfoDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['MoldInfoDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 模具档案生码参数 */
  MoldBarCodeReqDto: {
    /** @description 模具ID集合 */
    MoldIds?: string[];
  };
  /** @description 查询带排产的计划列表 */
  QueryAPSPlanListReqDto: {
    /** @description 开工开始日期 */
    StartBeginDate?: string;
    /** @description 开工结束日期 */
    StartEndDate?: string;
    /** @description 车间ID */
    WorkShopId?: string;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[APSPlanListDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['APSPlanListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 可排产计划列表实体 */
  APSPlanListDto: {
    /** @description 计划ID */
    PlanId?: string;
    /** @description 计划单号 */
    PlanCode?: string;
    /** @description 生产订单号 */
    MoCode?: string;
    /** @description 产品编码 */
    cInvCode?: string;
    /** @description 零件号 */
    cInvAddCode?: string;
    /** @description 产品名称 */
    cInvName?: string;
    /** @description 计划开工日期 */
    StartDate?: string;
    /** @description 完工日期 */
    DueDate?: string;
    /**
     * Format: double
     * @description 计划数量
     */
    IssueQty?: number | null;
    /** @description 日期显示字段 */
    DisDate?: string;
    /** @description 排产工序集合 */
    OpDtos?: definitions['APSPlanOpDto'][];
  };
  /** @description 排产计划工序实体 */
  APSPlanOpDto: {
    /** @description 排产后明细时需要用到其余无用 */
    PlanOpId?: string;
    /** @description 工序资料ID */
    RoutingDId?: string;
    /** @description 工序ID */
    OpId?: string;
    /** @description 工序行号 */
    OpSeq?: string;
    /** @description 工序编码 */
    OpCode?: string;
    /** @description 工序名称 */
    OpName?: string;
    /**
     * Format: double
     * @description 待排数量
     */
    APSQty?: number | null;
    /**
     * Format: double
     * @description 原始排产数量
     */
    SourceApsQty?: number | null;
    /**
     * Format: double
     * @description 已完工数量
     */
    ComQty?: number | null;
    /** @description 产能对照表 */
    CapacityDtos?: definitions['APSResDto'][];
  };
  /** @description 排产资源实体 */
  APSResDto: {
    /** @description 工序ID */
    OpId?: string;
    /**
     * Format: int32
     * @description 资源类型<br/>
     * 1 = DEVICE，设备<br/>
     * 2 = ARTIFICIAL，人工<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    ResType?: number | null;
    /**
     * Format: int32
     * @description 排产优先级
     */
    APSLevel?: number | null;
    /** @description 是否默认资源 */
    BDefault?: boolean;
    /** @description 资源ID */
    ResId?: string;
    /** @description 资源编码 */
    ResCode?: string;
    /** @description 资源名称（设备的话拼上型号一起返回） */
    ResName?: string;
    /**
     * Format: double
     * @description 资源产能
     */
    ResAging?: number | null;
    /** @description 可排产时间段 */
    TimeRangeDtos?: definitions['WorkHourTimer'][];
    /** @description 可排产的计划工序ID集合 */
    PlanOpIds?: string[];
  };
  WorkHourTimer: {
    /** Format: date-time */
    Start?: string;
    /** Format: date-time */
    End?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[APSPlanListDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['APSPlanListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[APSWorkShopDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['APSWorkShopDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 排产车架信息 */
  APSWorkShopDto: {
    /** @description 车间ID */
    WorkShopId?: string;
    /** @description 车间编码 */
    WorkShopCode?: string;
    /** @description 车间名称 */
    WorkShopName?: string;
    /** @description 上班时间 */
    StartTime?: string;
    /** @description 下班时间 */
    EndTime?: string;
  };
  /** @description 查询可排产资源列表参数 */
  QueryAPSResListReqDto: {
    /** @description 计划ID集合 */
    PlanIds: string[];
    /** @description 工序ID集合 */
    OpIds: string[];
    /** @description 是否插单 */
    BInsert?: boolean;
    /** @description 排产车间ID */
    WorkShopId: string;
    /** @description 排产日期开始 */
    StartDate: string;
    /** @description 排产日期结束 */
    EndDate: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[APSResDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['APSResDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 计划/工序自动排产参数 */
  PlanOpAutoAPSReqDto: {
    /** @description 计划ID */
    PlanId: string;
    /** @description 工序ID */
    OpId?: string;
    /**
     * Format: double
     * @description 排产数量
     */
    APSQty?: number | null;
    /** @description 是否强制覆盖(已有排产信息的需要提示确认，确认后传true，默认false) */
    BCover?: boolean;
    /** @description 是否插单 */
    BInsert?: boolean;
    /** @description 查单原因 */
    InsertReason?: string;
    /** @description 排产单ID */
    ApsId?: string;
    /** @description 排产车间ID */
    WorkShopId: string;
    /** @description 排产日期开始 */
    StartDate: string;
    /** @description 排产日期结束 */
    EndDate: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[PlanAPSInfoDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['PlanAPSInfoDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 排产明细返回实体 */
  PlanAPSInfoDto: {
    /** @description 排产单ID */
    APSId?: string;
    /** @description 所属车间名称 */
    WorkShopName?: string;
    /**
     * Format: int32
     * @description 单据状态<br/>
     * 0 = Draft，草稿<br/>
     * 1 = Normal，正常<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    DocState?: number | null;
    /** @description 是否已经派工(已派工的不可编辑) */
    BShift?: boolean;
    /** @description 排产单号 */
    ApsCode?: string;
    /** @description 是否紧急插单 */
    BInsert?: boolean;
    /** @description 查单原因 */
    InsertReason?: string;
    /**
     * Format: int32
     * @description 插单处理方式<br/>
     * 0 = CLOSE，关闭<br/>
     * 1 = DELAY，顺延
     * @enum {number}
     */
    InsertHandleWay?: number | null;
    /** @description 计划列表 */
    PlanDtos?: definitions['APSPlanListDto'][];
    /** @description 已排产资源列表 */
    APSResList?: definitions['APSResListDto'][];
    /** @description 资源列表 */
    ResDtos?: definitions['APSResDto'][];
    /** @description 排产车间ID */
    WorkShopId: string;
    /** @description 排产日期开始 */
    StartDate: string;
    /** @description 排产日期结束 */
    EndDate: string;
  };
  /** @description 已排产资源列表实体 */
  APSResListDto: {
    /** @description 排产子表ID */
    APSDId?: string;
    /**
     * Format: int32
     * @description 资源类型<br/>
     * 1 = DEVICE，设备<br/>
     * 2 = ARTIFICIAL，人工<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    ResType?: number | null;
    /** @description 资源ID(设备或班组ID) */
    ResId?: string;
    /** @description 资源编码 */
    ResCode?: string;
    /** @description 资源名称（设备的话拼上型号一起返回） */
    ResName?: string;
    /**
     * Format: double
     * @description 资源产能
     */
    ResAging?: number | null;
    /**
     * Format: double
     * @description 排产数量
     */
    ApsQty?: number | null;
    /**
     * Format: double
     * @description 派工数量
     */
    ShiftQty?: number | null;
    /**
     * Format: date-time
     * @description 开始时间
     */
    StartTime?: string;
    /**
     * Format: date-time
     * @description 结束时间
     */
    EndTime?: string;
    /** @description 对应计划/工序的行ID */
    PlanOpId?: string;
    /** @description 是否关闭 */
    BClose?: boolean;
    /** @description 表体备注 */
    DRemark?: string;
  };
  /** @description 查询资源详细信息的参数 */
  QueryResInfoReqDto: {
    /**
     * Format: int32
     * @description 资源类型<br/>
     * 1 = DEVICE，设备<br/>
     * 2 = ARTIFICIAL，人工<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    CapacityType: number | null;
    /** @description 资源ID */
    ResId: string;
    /** @description 计划ID集合 */
    PlanIds: string[];
    /** @description 工序ID集合 */
    OpIds: string[];
    /** @description 是否插单 */
    BInsert?: boolean;
    /** @description 排产车间ID */
    WorkShopId: string;
    /** @description 排产日期开始 */
    StartDate: string;
    /** @description 排产日期结束 */
    EndDate: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[APSResInfoDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['APSResInfoDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 待排产资源明细实体 */
  APSResInfoDto: {
    /** @description 已排产未完成的计划/工序列表 */
    PlanOpDtos?: definitions['APSPlanOpInfoDto'][];
    /** @description 工序ID */
    OpId?: string;
    /**
     * Format: int32
     * @description 资源类型<br/>
     * 1 = DEVICE，设备<br/>
     * 2 = ARTIFICIAL，人工<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    ResType?: number | null;
    /**
     * Format: int32
     * @description 排产优先级
     */
    APSLevel?: number | null;
    /** @description 是否默认资源 */
    BDefault?: boolean;
    /** @description 资源ID */
    ResId?: string;
    /** @description 资源编码 */
    ResCode?: string;
    /** @description 资源名称（设备的话拼上型号一起返回） */
    ResName?: string;
    /**
     * Format: double
     * @description 资源产能
     */
    ResAging?: number | null;
    /** @description 可排产时间段 */
    TimeRangeDtos?: definitions['WorkHourTimer'][];
    /** @description 可排产的计划工序ID集合 */
    PlanOpIds?: string[];
  };
  /** @description 已排产未完成的计划/工序明细实体 */
  APSPlanOpInfoDto: {
    /** @description 计划ID */
    PlanId?: string;
    /** @description 计划单号 */
    PlanCode?: string;
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 存货代码 */
    cInvAddCode?: string;
    /** @description 存货名称 */
    cInvName?: string;
    /** @description 开工日期 */
    StartDate?: string;
    /** @description 开始时间 */
    StartTime?: string;
    /** @description 完工日期 */
    DueDate?: string;
    /** @description 结束时间 */
    EndTime?: string;
    /** @description 工序ID */
    OpId?: string;
    /** @description 工序行号 */
    OpSeq?: string;
    /** @description 工序编码 */
    OpCode?: string;
    /** @description 工序名称 */
    OpName?: string;
    /**
     * Format: double
     * @description 排产数量
     */
    APSQty?: number | null;
    /**
     * Format: double
     * @description 产能
     */
    ResAging?: number | null;
    /**
     * Format: double
     * @description 已派工数量
     */
    ShiftQty?: number | null;
    /**
     * Format: double
     * @description 进度比例
     */
    ComRate?: number | null;
  };
  /** @description 查询排产单主表分页数据参数 */
  QueryAPSMainPageReqDto: {
    /** @description 排产车间ID */
    WorkShopId?: string;
    /** @description 开始日期 */
    StartDate?: string;
    /** @description 结束日期 */
    EndDate?: string;
    /**
     * Format: int32
     * @description 单据状态<br/>
     * 0 = Draft，草稿<br/>
     * 1 = Normal，正常<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    DocState?: number | null;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[APSMainDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['APSMainDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 排产单主表实体 */
  APSMainDto: {
    /** @description 排产单主表ID */
    Id?: string;
    /** @description 排产车间ID */
    WorkShopId?: string;
    /** @description 排产车间 */
    WorkShop?: string;
    /** @description 排产单号 */
    ApsCode?: string;
    /**
     * Format: date-time
     * @description 开始时间
     */
    StartTime?: string;
    /**
     * Format: date-time
     * @description 结束时间
     */
    EndTime?: string;
    /** @description 是否紧急插单 */
    BInsert?: boolean;
    /**
     * Format: int32
     * @description 插单处理方式<br/>
     * 0 = CLOSE，关闭<br/>
     * 1 = DELAY，顺延
     * @enum {number}
     */
    InsertHandleWay?: number | null;
    /** @description 处理方式描述 */
    InsertHandleWayDesc?: string;
    /** @description 查单原因 */
    InsertReason?: string;
    /** @description 是否已经派工 */
    BShift?: boolean;
    /**
     * Format: int32
     * @description 单据状态<br/>
     * 0 = Draft，草稿<br/>
     * 1 = Normal，正常<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    DocState?: number | null;
    /** @description 单据状态说明 */
    DocStateDesc?: string;
    /** @description 排产人 */
    CreatedUserName?: string;
    /**
     * Format: date-time
     * @description 排产时间
     */
    CreatedTime?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[PlanAPSInfoListDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['PlanAPSInfoListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 计划排产列表返回实体 */
  PlanAPSInfoListDto: {
    /** @description 排产单号 */
    ApsCode?: string;
    /** @description 计划ID */
    PlanId?: string;
    /** @description 计划单号 */
    PlanCode?: string;
    /** @description 生产订单号 */
    MoCode?: string;
    /** @description 产品编码 */
    cInvCode?: string;
    /** @description 零件号 */
    cInvAddCode?: string;
    /** @description 产品名称 */
    cInvName?: string;
    /** @description 计划开工日期 */
    StartDate?: string;
    /** @description 完工日期 */
    EndDate?: string;
    /**
     * Format: double
     * @description 计划数量
     */
    IssueQty?: number | null;
    /** @description 工序ID */
    OpId?: string;
    /** @description 工序行号 */
    OpSeq?: string;
    /** @description 工序编码 */
    OpCode?: string;
    /** @description 工序名称 */
    OpName?: string;
    /**
     * Format: int32
     * @description 资源类型<br/>
     * 1 = DEVICE，设备<br/>
     * 2 = ARTIFICIAL，人工<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    ResType?: number | null;
    /** @description 资源ID(设备或班组ID) */
    ResId?: string;
    /** @description 资源编码 */
    ResCode?: string;
    /** @description 资源名称（设备的话拼上型号一起返回） */
    ResName?: string;
    /**
     * Format: double
     * @description 资源产能
     */
    ResAging?: number | null;
    /**
     * Format: double
     * @description 排产数量
     */
    ApsQty?: number | null;
    /**
     * Format: double
     * @description 派工数量
     */
    ShiftQty?: number | null;
    /**
     * Format: date-time
     * @description 开始时间
     */
    StartTime?: string;
    /**
     * Format: date-time
     * @description 结束时间
     */
    EndTime?: string;
    /** @description 是否关闭 */
    BClose?: boolean;
    /** @description 表体备注 */
    DRemark?: string;
  };
  /** @description 查询排产单单据明细请求参数 */
  QueryAPSDocInfoReqDto: {
    /** @description 排产单ID */
    ApsId?: string;
    /** @description 排产车间ID */
    WorkShopId?: string;
    /** @description 排产开始日期 */
    StartDate?: string;
    /** @description 排产结束日期 */
    EndDate?: string;
    /** @description 计划开工开始日期 */
    StartBeginDate?: string;
    /** @description 计划开工结束日期 */
    StartEndDate?: string;
  };
  /** @description 查询可派工的排产单列表请求Dto */
  QueryCanShiftApsListReqDto: {
    /** @description 排产车间 */
    WorkShopId?: string;
    /** @description 开始日期 */
    StartDate?: string;
    /** @description 结束日期 */
    EndDate?: string;
    /** @description 设备ID */
    DeviceId?: string;
    /** @description 班组ID */
    TeamId?: string;
    /** @description 排产单ID集合 */
    ApsIds?: string[];
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[CanShiftApsListDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['CanShiftApsListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 可派工的排产明细列表实体 */
  CanShiftApsListDto: {
    /** @description 排产单主表ID */
    Id?: string;
    /** @description 排产车间ID */
    WorkShopId?: string;
    /** @description 排产车间 */
    WorkShop?: string;
    /** @description 排产单号 */
    ApsCode?: string;
    /** @description 计划ID */
    PlanId?: string;
    /** @description 计划单号 */
    PlanCode?: string;
    /** @description 生产订单号 */
    MoCode?: string;
    /** @description 产品编码 */
    cInvCode?: string;
    /** @description 零件号 */
    cInvAddCode?: string;
    /** @description 产品名称 */
    cInvName?: string;
    /** @description 规格型号 */
    cInvStd?: string;
    /** @description 计量单位编码 */
    cComUnitCode?: string;
    /** @description 计量单位名称 */
    cComUnitName?: string;
    /** @description 排产开始日期 */
    StartDate?: string;
    /** @description 排产结束日期 */
    EndDate?: string;
    /**
     * Format: double
     * @description 计划下达数量
     */
    IssueQty?: number | null;
    /** @description 排产人 */
    CreatedUserName?: string;
    /**
     * Format: date-time
     * @description 排产时间
     */
    CreatedTime?: string;
    /** @description 工序列表 */
    OpDtos?: definitions['CanShiftOpDetailDto'][];
  };
  /** @description 可派工的排产工序实体 */
  CanShiftOpDetailDto: {
    /** @description 排产明细ID */
    ApsDId?: string;
    /**
     * Format: double
     * @description 排产数量
     */
    ApsQty?: number | null;
    /** @description 班组ID */
    TeamId?: string;
    /** @description 班组名称 */
    TeamName?: string;
    /** @description 开始时间 */
    StartTime?: string;
    /** @description 结束时间 */
    EndTime?: string;
    /** @description 工序计划ID */
    RoutingDId?: string;
    /** @description 工序ID */
    OpId?: string;
    /** @description 工序行号 */
    OpSeq?: string;
    /** @description 工序名称 */
    OpName?: string;
    /** @description 模具ID */
    MoldId?: string;
    /** @description 模具名称 */
    MoldName?: string;
    /** @description 设备ID */
    DeviceId?: string;
    /** @description 设备名称 */
    DeviceName?: string;
    /**
     * Format: double
     * @description 累计派工数量
     */
    ShiftQty?: number | null;
    /**
     * Format: double
     * @description 剩余可派工数量
     */
    SyShiftQty?: number | null;
  };
  /** @description 计划排产保存请求Dto */
  MomAPSSaveReqDto: {
    /** @description 排产单ID（修改时需传） */
    ApsId?: string;
    /**
     * Format: int32
     * @description 单据状态-默认草稿<br/>
     * 0 = Draft，草稿<br/>
     * 1 = Normal，正常<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    DocState?: number | null;
    /** @description 是否插单 */
    BInsert?: boolean;
    /**
     * Format: int32
     * @description 插单处理方式<br/>
     * 0 = CLOSE，关闭<br/>
     * 1 = DELAY，顺延
     * @enum {number}
     */
    HandleWay?: number | null;
    /** @description 查单原因 */
    InsertReason?: string;
    /** @description 排产的工序集合 */
    OpSaveDtos?: definitions['MomAPSOpSaveDto'][];
    /** @description 排产车间ID */
    WorkShopId: string;
    /** @description 排产日期开始 */
    StartDate: string;
    /** @description 排产日期结束 */
    EndDate: string;
  };
  /** @description 排产保存工序Dto */
  MomAPSOpSaveDto: {
    /** @description 计划ID */
    PlanId?: string;
    /** @description 工序ID */
    OpId?: string;
    /**
     * Format: double
     * @description 排产数量
     */
    ApsQty?: number | null;
    /** @description 排产资源集合 */
    ResDtos?: definitions['MomAPSResSaveDto'][];
  };
  /** @description 排产保存资源Dto */
  MomAPSResSaveDto: {
    /** @description 排产子表ID */
    APSDId?: string;
    /**
     * Format: int32
     * @description 资源类型<br/>
     * 1 = DEVICE，设备<br/>
     * 2 = ARTIFICIAL，人工<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    ResType?: number | null;
    /** @description 资源ID */
    ResId?: string;
    /**
     * Format: date-time
     * @description 开始时间
     */
    StartTime?: string;
    /**
     * Format: date-time
     * @description 结束时间
     */
    EndTime?: string;
  };
  /** @description 查询插单受影响的工单列表请求Dto */
  QueryApsInsertEffectListReqDto: {
    /** @description 插单排产单主表ID */
    ApsId: string;
    /** @description 计划ID */
    PlanId: string;
    /** @description 工序ID */
    OpId?: string;
    /**
     * Format: int32
     * @description 查询类型<br/>
     * 0 = AUTO，自动排产<br/>
     * 1 = MANUAL，手动排产
     * @enum {number}
     */
    QueryType?: number | null;
    /**
     * Format: int32
     * @description 资源类型<br/>
     * 1 = DEVICE，设备<br/>
     * 2 = ARTIFICIAL，人工<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    ResType?: number | null;
    /** @description 资源ID */
    ResId?: string;
    /**
     * Format: date-time
     * @description 开始时间
     */
    StartTime?: string;
    /**
     * Format: date-time
     * @description 结束时间
     */
    EndTime?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[ApsInsertEffectListDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['ApsInsertEffectListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 插单受影响的工单列表Dto */
  ApsInsertEffectListDto: {
    /** @description 排产单主表ID */
    Id?: string;
    /** @description 排产单子表 */
    ApsDId?: string;
    /** @description 是否紧急插单 */
    BInsert?: boolean;
    /** @description 查单原因 */
    InsertReason?: string;
    /**
     * Format: int32
     * @description 插单处理方式<br/>
     * 0 = CLOSE，关闭<br/>
     * 1 = DELAY，顺延
     * @enum {number}
     */
    InsertHandleWay?: number | null;
    /** @description 是否已经派工 */
    BShift?: boolean;
    /**
     * Format: int32
     * @description 单据状态<br/>
     * 0 = Draft，草稿<br/>
     * 1 = Normal，正常<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    DocState?: number | null;
    /** @description 单据状态说明 */
    DocStateDesc?: string;
    /** @description 排产人 */
    CreatedUserName?: string;
    /**
     * Format: date-time
     * @description 排产时间
     */
    CreatedTime?: string;
    /** @description 排产单号 */
    ApsCode?: string;
    /** @description 计划ID */
    PlanId?: string;
    /** @description 计划单号 */
    PlanCode?: string;
    /** @description 生产订单号 */
    MoCode?: string;
    /** @description 产品编码 */
    cInvCode?: string;
    /** @description 零件号 */
    cInvAddCode?: string;
    /** @description 产品名称 */
    cInvName?: string;
    /** @description 计划开工日期 */
    StartDate?: string;
    /** @description 完工日期 */
    EndDate?: string;
    /**
     * Format: double
     * @description 计划数量
     */
    IssueQty?: number | null;
    /** @description 工序ID */
    OpId?: string;
    /** @description 工序行号 */
    OpSeq?: string;
    /** @description 工序编码 */
    OpCode?: string;
    /** @description 工序名称 */
    OpName?: string;
    /**
     * Format: int32
     * @description 资源类型<br/>
     * 1 = DEVICE，设备<br/>
     * 2 = ARTIFICIAL，人工<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    ResType?: number | null;
    /** @description 资源ID(设备或班组ID) */
    ResId?: string;
    /** @description 资源编码 */
    ResCode?: string;
    /** @description 资源名称（设备的话拼上型号一起返回） */
    ResName?: string;
    /**
     * Format: double
     * @description 资源产能
     */
    ResAging?: number | null;
    /**
     * Format: double
     * @description 排产数量
     */
    ApsQty?: number | null;
    /**
     * Format: double
     * @description 派工数量
     */
    ShiftQty?: number | null;
    /**
     * Format: date-time
     * @description 开始时间
     */
    StartTime?: string;
    /**
     * Format: date-time
     * @description 结束时间
     */
    EndTime?: string;
    /** @description 是否关闭 */
    BClose?: boolean;
    /** @description 表体备注 */
    DRemark?: string;
  };
  /** @description 查询可下单的生产订单明细参数实体 */
  QueryMomIssueDetailListReqDto: {
    /** @description 需求完工日期开始 */
    dPreMoDateBegin?: string;
    /** @description 需求完工日期结束 */
    dPreMoDateEnd?: string;
    /** @description 开工日期开始 */
    StartDateBegin?: string;
    /** @description 开工日期结束 */
    StartDateEnd?: string;
    /** @description 存货编码开始 */
    cInvCodeStart?: string;
    /** @description 存货编码结束 */
    cInvCodeEnd?: string;
    /** @description 是否已完成 */
    bComplete?: boolean;
    /** @description 生产部门 */
    mDeptCode?: string;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[JHXDMomDetailDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['JHXDMomDetailDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 计划下单 */
  JHXDMomDetailDto: {
    /**
     * Format: int32
     * @description 生产订单主表ID
     */
    MoId?: number | null;
    /**
     * Format: int32
     * @description 生产订单子表ID
     */
    MoDId?: number | null;
    /** @description 生产订单号 */
    MoCode?: string;
    /**
     * Format: int32
     * @description 行号
     */
    SortSeq?: number | null;
    /** @description 存货编码 */
    InvCode?: string;
    /** @description 存货分类编码 */
    cInvCCode?: string;
    /** @description 存货名称 */
    cInvName?: string;
    /** @description 规格型号 */
    cInvStd?: string;
    /** @description 计量单位编码 */
    cComUnitCode?: string;
    /** @description 计量单位名称 */
    cComUnitName?: string;
    /**
     * Format: double
     * @description 生产订单数量
     */
    Qty?: number | null;
    /**
     * Format: double
     * @description 合格入库数量
     */
    QuanlifiedInQty?: number | null;
    /**
     * Format: double
     * @description MRP数量
     */
    MrpQty?: number | null;
    /** @description 销售订单号 */
    SoCode?: string;
    /** @description 计划代号 */
    PlanCode?: string;
    /** @description 生产部门编码 */
    MDeptCode?: string;
    /** @description 生产部门 */
    cDepName?: string;
    /** @description 客户编码 */
    cCusCode?: string;
    /** @description 客户名称 */
    cCusName?: string;
    /** @description 开工日期 */
    StartDate?: string;
    /** @description 完工日期 */
    DueDate?: string;
    /** @description 需求完工日期 */
    dPreMoDate?: string;
    /**
     * Format: double
     * @description 累计计划下达数量
     */
    JHXDQty?: number | null;
    /** @description 默认工艺路线ID */
    PRoutingId?: string;
    /** @description 默认工艺路线版本说明 */
    PRoutingVer?: string;
    /** @description 预入仓库编码 */
    WhCode?: string;
    /** @description 预入仓库名称 */
    cWhName?: string;
    /** @description 模具ID */
    MoldId?: string;
    /** @description 模具编码 */
    MoldCode?: string;
    /** @description 模具名称 */
    MoldName?: string;
    /** @description 工序列表 */
    OpDtos?: definitions['JHXDMomOpDetailDto'][];
  };
  /** @description 计划下达展开工序信息 */
  JHXDMomOpDetailDto: {
    /** @description 工序ID */
    OpId?: string;
    /**
     * Format: int32
     * @description 工序行号
     */
    OpSeq?: number | null;
    /** @description 工序名称 */
    OpName?: string;
    /** @description 是否首道工序 */
    BFirstFlag?: boolean;
    /** @description 是否末道工序 */
    BLastFlag?: boolean;
  };
  /** @description 计划下单保存参数实体 */
  MomPlanIssueSaveDto: {
    /** @description 表体明细 */
    IssueDtos?: definitions['MomPlanIssueBaseDto'][];
    /** @description 是否有U8车间模块 */
    BHasFc?: boolean;
  };
  /** @description 计划下单基础实体 */
  MomPlanIssueBaseDto: {
    /** @description 计划ID-修改时需传 */
    Id?: string;
    /**
     * Format: int32
     * @description 生产订单主表ID
     */
    MoId?: number | null;
    /**
     * Format: int32
     * @description 生产订单子表ID
     */
    MoDId?: number | null;
    /** @description 销售订单号 */
    cSoCode?: string;
    /** @description 生产订单号 */
    MoCode: string;
    /**
     * Format: int32
     * @description 行号
     */
    SortSeq?: number | null;
    /** @description 存货编码 */
    InvCode: string;
    /**
     * Format: double
     * @description 生产订单数量
     */
    MoQty?: number | null;
    /**
     * Format: double
     * @description 下达数量(必须大于等于生产数量)
     */
    IssueQty?: number | null;
    /** @description 开工日期 */
    StartDate: string;
    /**
     * Format: int32
     * @description 开工时段
     */
    StartPeriod?: number | null;
    /** @description 完工日期 */
    DueDate: string;
    /**
     * Format: int32
     * @description 完工时段
     */
    DuePeriod?: number | null;
    /** @description 需求完工日期 */
    dPreMoDate?: string;
    /** @description 工艺路线ID */
    PRoutingId: string;
    /** @description 模具ID */
    MoldId?: string;
    /** @description 备注 */
    Remark?: string;
    /** @description 生产批次号 */
    MoBatch?: string;
    /** @description 工序设备列表 */
    OpDtos?: definitions['MomPlanIssueOpDto'][];
  };
  /** @description 计划下达工序明细实体 */
  MomPlanIssueOpDto: {
    /** @description 计划ID */
    PlanId?: string;
    /** @description 工序ID */
    OpId: string;
    /** @description 设备ID */
    DeviceId: string;
    /** @description 是否报工点 */
    BReportFlag?: boolean;
    /**
     * Format: int32
     * @description 检验方式<br/>
     * 1 = NONE，无<br/>
     * 2 = SIMPLE，简单模式<br/>
     * 3 = INDEX，指标模式<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    QcWay?: number | null;
  };
  /** @description 查询可计划下达的MRP列表参数实体 */
  QueryJHXDMrpListReqDto: {
    /** @description 开工日期开始 */
    StartDateBegin?: string;
    /** @description 开工日期结束 */
    StartDateEnd?: string;
    /** @description 存货编码开始 */
    cInvCodeStart?: string;
    /** @description 存货编码结束 */
    cInvCodeEnd?: string;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[JHXDMrpDetailDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['JHXDMrpDetailDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 计划下达MRP明细实体 */
  JHXDMrpDetailDto: {
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 存货代码 */
    cInvAddCode?: string;
    /** @description 存货名称 */
    cInvName?: string;
    /** @description 规格型号 */
    cInvStd?: string;
    /** @description 计量单位编码 */
    cComUnitCode?: string;
    /** @description 计量单位名称 */
    cComUnitName?: string;
    /**
     * Format: int32
     * @description 物料ID
     */
    PartId?: number | null;
    /** @description 开工日期 */
    StartDate?: string;
    /** @description 完工日期 */
    DueDate?: string;
    /**
     * Format: double
     * @description 计划数量
     */
    PlanQty?: number | null;
    /**
     * Format: double
     * @description 已下达数量（已下达生产订单数量）
     */
    CrdQty?: number | null;
    /**
     * Format: int32
     * @description MRP子表ID
     */
    DemandId?: number | null;
    /** @description 计划单号 */
    PlanCode?: string;
    /** @description 预入仓库编码 */
    cWhCode?: string;
    /** @description 预入仓库名称 */
    cWhName?: string;
    /** @description 默认工艺路线ID */
    PRoutingId?: string;
    /** @description 默认工艺路线版本说明 */
    PRoutingVer?: string;
    /** @description 工序列表 */
    OpDtos?: definitions['JHXDMomOpDetailDto'][];
  };
  /** @description 计划下达保存参数（同步生成U8的生产订单） */
  MomPlanSaveReqDto: {
    /** @description 部门编码 */
    MDeptCode: string;
    /** @description 开工日期 */
    StartDate: string;
    /** @description 完工日期 */
    DueDate: string;
    /** @description 备注 */
    cMemo?: string;
    /** @description 生产计划表体 */
    Bodys: definitions['MomPlanBodyDto'][];
    /** @description 是否有U8车间模块 */
    BHasFc?: boolean;
  };
  /** @description 生产计划表体实体 */
  MomPlanBodyDto: {
    /**
     * Format: int32
     * @description 行号
     */
    RowNum?: number | null;
    /** @description 存货编码 */
    cInvCode: string;
    /**
     * Format: double
     * @description 计划数量
     */
    PQty?: number | null;
    /** @description 部门编码 */
    MDeptCode?: string;
    /** @description 开工日期 */
    StartDate?: string;
    /** @description 完工日期 */
    DueDate?: string;
    /** @description 工艺露馅ID */
    PRoutingId: string;
    /** @description BOMID */
    BomId: string;
    /** @description 备注 */
    cbMemo?: string;
    /**
     * Format: int32
     * @description MRP计划子表ID
     */
    DemandId?: number | null;
    /** @description MRP计划单号 */
    PlanCode?: string;
    /** @description 生产批次号 */
    MoBatch?: string;
    /**
     * Format: int32
     * @description 生产订单表体ID
     */
    MoDId?: number | null;
    /** @description 工序资料子表 */
    SubBodys: definitions['MomPlanSubBodyDto'][];
  };
  /** @description 生产计划表体工序资料子表实体 */
  MomPlanSubBodyDto: {
    /**
     * Format: int32
     * @description 工艺路线子表ID
     */
    PRoutingDId?: number | null;
    /**
     * Format: int32
     * @description 工序ID
     */
    OperationId?: number | null;
    /** @description 工序行号 */
    OpSeq: string;
    /** @description 工序的开工日期 */
    StartDate?: string;
    /** @description 工序的完工日期 */
    DueDate?: string;
    /** @description 备注 */
    Remark?: string;
    /** @description 设备ID */
    DeviceId?: string;
    /** @description 倒冲 */
    BFFlag?: boolean;
    /** @description 倒冲 */
    FeeFlag?: boolean;
    /** @description 委外 */
    SubFlag?: boolean;
    /** @description 计划委外 */
    PlanSubFlag?: boolean;
    /** @description 是否报工点 */
    BReportFlag?: boolean;
    /**
     * Format: int32
     * @description 工作中心ID
     */
    WcId?: number | null;
    /**
     * Format: int32
     * @description 检验方式<br/>
     * 1 = NONE，无<br/>
     * 2 = SIMPLE，简单模式<br/>
     * 3 = INDEX，指标模式<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    QcWay?: number | null;
  };
  /** @description 计划修改参数 */
  MomPlanIssueEditDto: {
    /** @description 修改时需传 */
    Id: string;
    /**
     * Format: double
     * @description 下达数量(必须大于等于生产数量)
     */
    IssueQty?: number | null;
    /** @description 开工日期 */
    StartDate?: string;
    /** @description 完工日期 */
    DueDate?: string;
    /** @description 工艺路线ID */
    PRoutingId: string;
    /** @description 备注 */
    Remark?: string;
  };
  /** @description 查询明细基础参数实体 */
  QueryInfoBaseReqDto: {
    /** @description ID */
    Id: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[MomPlanIssueInfoDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['MomPlanIssueInfoDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 生产计划明细实体 */
  MomPlanIssueInfoDto: {
    /** @description 计划单号 */
    PlanCode?: string;
    /** @description 料品代码 */
    cInvAddCode?: string;
    /** @description 料品名称 */
    cInvName?: string;
    /** @description 料品规格 */
    cInvStd?: string;
    /** @description 计量单位编码 */
    cComUnitCode?: string;
    /** @description 计量单位名称 */
    cComUnitName?: string;
    /** @description 是否已派工 */
    BSchedu?: boolean;
    /** @description 是否已完工 */
    BFinish?: boolean;
    /** @description 工艺路线版本说明 */
    PRoutingVer?: string;
    /** @description BOM ID */
    BomId?: string;
    /** @description BOM版本说明 */
    BomVer?: string;
    /** @description 模具名称 */
    MoldName?: string;
    /** @description 生产部门编码 */
    mDepCode?: string;
    /** @description 生产部门 */
    mDepName?: string;
    /** @description 计划人 */
    CreatedUserName?: string;
    /**
     * Format: date-time
     * @description 计划时间
     */
    CreatedTime?: string;
    /**
     * Format: int32
     * @description 关闭方式<br/>
     * 0 = FULL，整单<br/>
     * 1 = PART，部分<br/>
     * 2 = NONE，未关闭<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    dCloseType?: number | null;
    /** @description 是否关闭 */
    bClose?: boolean;
    /** @description 关闭人 */
    cCloser?: string;
    /**
     * Format: date-time
     * @description 关闭时间
     */
    dCloseTime?: string;
    /** @description 关闭原因 */
    dCloseMemo?: string;
    /**
     * Format: double
     * @description 可关闭数量
     */
    canCloseQty?: number | null;
    /**
     * Format: double
     * @description 关闭后计划量
     */
    dCloseIssueQty?: number | null;
    /** @description 工序资料 */
    RoutingDetailDtos?: definitions['MomRoutingDetailBaseDto'][];
    /** @description 计划ID-修改时需传 */
    Id?: string;
    /**
     * Format: int32
     * @description 生产订单主表ID
     */
    MoId?: number | null;
    /**
     * Format: int32
     * @description 生产订单子表ID
     */
    MoDId?: number | null;
    /** @description 销售订单号 */
    cSoCode?: string;
    /** @description 生产订单号 */
    MoCode: string;
    /**
     * Format: int32
     * @description 行号
     */
    SortSeq?: number | null;
    /** @description 存货编码 */
    InvCode: string;
    /**
     * Format: double
     * @description 生产订单数量
     */
    MoQty?: number | null;
    /**
     * Format: double
     * @description 下达数量(必须大于等于生产数量)
     */
    IssueQty?: number | null;
    /** @description 开工日期 */
    StartDate: string;
    /**
     * Format: int32
     * @description 开工时段
     */
    StartPeriod?: number | null;
    /** @description 完工日期 */
    DueDate: string;
    /**
     * Format: int32
     * @description 完工时段
     */
    DuePeriod?: number | null;
    /** @description 需求完工日期 */
    dPreMoDate?: string;
    /** @description 工艺路线ID */
    PRoutingId: string;
    /** @description 模具ID */
    MoldId?: string;
    /** @description 备注 */
    Remark?: string;
    /** @description 生产批次号 */
    MoBatch?: string;
    /** @description 工序设备列表 */
    OpDtos?: definitions['MomPlanIssueOpDto'][];
  };
  /** @description 生产计划工序资料基础实体 */
  MomRoutingDetailBaseDto: {
    /**
     * Format: int32
     * @description 工序组行号
     */
    OpGroupSeq?: number | null;
    /**
     * Format: int64
     * @description 工序组ID
     */
    OpGroupId?: string;
    /** @description 工序组名称 */
    OpGroupName?: string;
    /** @description 是否末道工序组 */
    BLastFlag?: boolean;
    /** @description 是否首道工序组 */
    BFirstFlag?: boolean;
    /** @description 是否平行工序 */
    BParallel?: boolean;
    /** @description 工序ID */
    OpId?: string;
    /**
     * Format: int32
     * @description 工序行号
     */
    OpSeq?: number | null;
    /** @description 工序名称 */
    OpName?: string;
    /** @description 设备ID */
    DeviceId?: string;
    /** @description 设备名称 */
    DeviceName?: string;
    /** @description 是否委外工序 */
    BForeignOp?: boolean;
    /**
     * Format: int32
     * @description 检验方式<br/>
     * 1 = NONE，无<br/>
     * 2 = SIMPLE，简单模式<br/>
     * 3 = INDEX，指标模式<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    QcWay?: number | null;
    /** @description 检验方式描述 */
    QcWayDesc?: string;
    /** @description 是否报工点 */
    BReportFlag?: boolean;
    /**
     * Format: double
     * @description 可用合格数量
     */
    BalQualifiedQty?: number | null;
    /**
     * Format: double
     * @description 可用报检量
     */
    BalDeclareQty?: number | null;
    /**
     * Format: double
     * @description 可用加工数量
     */
    BalMachiningQty?: number | null;
    /**
     * Format: double
     * @description 合格数量
     */
    QualifiedQty?: number | null;
    /**
     * Format: double
     * @description 报废数量
     */
    ScrapQty?: number | null;
    /**
     * Format: double
     * @description 累计派工数量
     */
    ShiftQty?: number | null;
    /**
     * Format: double
     * @description 累计完工数量
     */
    CompleteQty?: number | null;
    /**
     * Format: double
     * @description 已关闭数量
     */
    CloseQty?: number | null;
  };
  /** @description 生产计划分页查询参数实体 */
  QueryMomPlanIssuePageReqDto: {
    /** @description 是否已派工 */
    BSchedu?: boolean;
    /** @description 是否已完工 */
    BFinish?: boolean;
    /** @description 需求完工日期开始 */
    dPreMoDateBegin?: string;
    /** @description 需求完工日期结束 */
    dPreMoDateEnd?: string;
    /** @description 计划日期开始 */
    PlanDateBegin?: string;
    /** @description 计划日期结束 */
    PlanDateEnd?: string;
    /** @description 开工日期开始 */
    StartDateBegin?: string;
    /** @description 开工日期结束 */
    StartDateEnd?: string;
    /** @description 存货编码开始 */
    cInvCodeStart?: string;
    /** @description 存货编码结束 */
    cInvCodeEnd?: string;
    /** @description 生产部门 */
    mDeptCode?: string;
    /** @description 是否查询已生码的数据 */
    bFilterRawCode?: boolean;
    /**
     * Format: int32
     * @description 关闭方式<br/>
     * 0 = FULL，整单<br/>
     * 1 = PART，部分<br/>
     * 2 = NONE，未关闭<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    CloseType?: number | null;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LLPJsonResult[MomPlanIssueInfoDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['MomPlanIssueInfoDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 生产计划生码参数 */
  MomPlanIssueRawCodeReqDto: {
    /** @description 计划ID集合 */
    PlanIds?: string[];
    /**
     * Format: double
     * @description 包装数(不传默认以下达数量作为生码的包装数)
     */
    PackQty?: number | null;
  };
  /** @description 计划关闭参数 */
  MomPlanIssueCloseReqDto: {
    /**
     * Format: int32
     * @description 关闭方式<br/>
     * 0 = FULL，整单<br/>
     * 1 = PART，部分<br/>
     * 2 = NONE，未关闭<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    CloseType?: number | null;
    /** @description 关闭的计划ID集合 */
    PlanIds: string[];
    /**
     * Format: double
     * @description 关闭数量
     */
    CloseQty?: number | null;
    /** @description 原因说明 */
    dCloseMemo?: string;
  };
  /** @description 齐料展望请求Dto */
  MaterialProSpectReqDto: {
    /** @description 选中的生产订单表体ID集合 */
    MoDIds?: (number | null)[];
    /** @description 是否只查询当前选中订单 */
    bQueryCurr?: boolean;
    /** @description 是否展开到末级 */
    bExpandEnd?: boolean;
    /** @description 子件用 */
    cInvCode?: string;
    /** @description 仓库编码列表 */
    whCodes?: string[];
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[MaterialProSpectDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['MaterialProSpectDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 生产齐套展望物料实体 */
  MaterialProSpectDto: {
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 存货代码 */
    cInvAddCode?: string;
    /** @description 存货名称 */
    cInvName?: string;
    /** @description 规格型号 */
    cInvStd?: string;
    /** @description 主计量 */
    UnitName?: string;
    /**
     * Format: double
     * @description 需求量
     */
    Qty?: number | null;
    /**
     * Format: double
     * @description 已领量
     */
    IssQty?: number | null;
    /**
     * Format: double
     * @description 未领量
     */
    UnIssQty?: number | null;
    /**
     * Format: double
     * @description 可用量
     */
    AvailQty?: number | null;
    /**
     * Format: double
     * @description 缺料量
     */
    ShortAgeQty?: number | null;
    /**
     * Format: double
     * @description 现存量
     */
    StockQty?: number | null;
    /**
     * Format: double
     * @description 已请购量
     */
    AppQty?: number | null;
    /**
     * Format: double
     * @description 订单在途量
     */
    PoQty?: number | null;
    /**
     * Format: double
     * @description 到货/在检量
     */
    ArrQty?: number | null;
    /**
     * Format: double
     * @description 生产订单量（待生产入库量）
     */
    MoRdQty?: number | null;
    /**
     * Format: double
     * @description 委外订单量（待委外入库量）
     */
    OmRdQty?: number | null;
    /**
     * Format: double
     * @description 委外发料量
     */
    OmOutQty?: number | null;
    /** @description 仓库列表动态列 */
    DyColumns?: definitions['DyColumnResDto'][];
  };
  /** @description 动态列实体 */
  DyColumnResDto: {
    /** @description 列名(显示名称) */
    ColumnDisName?: string;
    /** @description 列名(字段) */
    ColumnField?: string;
    /** @description 列值 */
    ColumnVal?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[MoAlloacteIssueDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['MoAlloacteIssueDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 生产子件领用情况 */
  MoAlloacteIssueDto: {
    /** @description 生产订单号 */
    MoCode?: string;
    /**
     * Format: int32
     * @description 行号
     */
    MoSeq?: number | null;
    /** @description 开工日期 */
    StartDateStr?: string;
    /** @description 完工日期 */
    DueDateStr?: string;
    /** @description 部门编码 */
    MDept?: string;
    /** @description 部门名称 */
    DeptName?: string;
    /** @description 产品编码 */
    cInvCode?: string;
    /** @description 产品代码 */
    cInvAddCode?: string;
    /** @description 产品名称 */
    cInvName?: string;
    /** @description 产品规格 */
    cInvStd?: string;
    /**
     * Format: double
     * @description 生产数量
     */
    MoQty?: number | null;
    /** @description 物料编码 */
    InvCode?: string;
    /** @description 物料代码 */
    InvAddCode?: string;
    /** @description 物料名称 */
    InvName?: string;
    /** @description 物料规格 */
    InvStd?: string;
    /** @description 单位名称 */
    UnitName?: string;
    /**
     * Format: double
     * @description 应领数量
     */
    Qty?: number | null;
    /**
     * Format: double
     * @description 已领数量
     */
    IssQty?: number | null;
    /**
     * Format: double
     * @description 未领数量
     */
    UnIssQty?: number | null;
  };
  /** @description 领料申请打印参数 */
  MaterialAppPrintReqDto: {
    /** @description 生产订单明细ID集合 */
    MoDIds?: (number | null)[];
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[BaseFileListResDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['BaseFileListResDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 返回文件列表实体 */
  BaseFileListResDto: {
    FileDtos?: definitions['BaseFileDo'][];
    /** @description 返回数据 */
    Data?: { [key: string]: unknown };
    /** @description 返回消息 */
    Msg?: string;
    /** @description 处理状态 */
    State?: boolean;
  };
  /** @description 文件基础实体 */
  BaseFileDo: {
    /** @description 文件名称 */
    FileName?: string;
    /** @description 文件路径 */
    FilePath?: string;
    /** @description 文件下载地址 */
    FileSrc?: string;
  };
  /** @description 不带分页的JSON泛型LIST返回类型 */
  'LLJsonResult[MomRdInfoDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['MomRdInfoDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 产场频入库单明细实体 */
  MomRdInfoDto: {
    /** @description 产成品入库单单号 */
    cCode?: string;
    /** @description 入库单主表Id */
    Id?: string;
    /**
     * Format: int32
     * @description 产成品入库单子表标识
     */
    AutoId?: number | null;
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 存货代码 */
    cInvAddCode?: string;
    /** @description 存货名称 */
    cInvName?: string;
    /** @description 存货规格 */
    cInvStd?: string;
    /**
     * Format: double
     * @description 数量
     */
    Qty?: number | null;
    /** @description 仓库编码 */
    cWhCode?: string;
    /** @description 仓库名称 */
    cWhName?: string;
    /** @description 是否启用货位 */
    bWHPos?: boolean;
    /** @description 货位名称 */
    cPosName?: string;
    /** @description 货位编码 */
    cPosCode?: string;
    /** @description 批号 */
    cBatch?: string;
    /**
     * Format: int32
     * @description 生产订单子表ID
     */
    iMPoIds?: number | null;
    /** @description 生产订单号 */
    MoCode?: string;
  };
  /** @description 不带分页的JSON泛型LIST返回类型 */
  'LLJsonResult[MomRdWaitAuditListDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['MomRdWaitAuditListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 产成品入库单未审核列表实体 */
  MomRdWaitAuditListDto: {
    /**
     * Format: int32
     * @description 主表标识
     */
    Id?: number | null;
    /** @description 产成品入库单单号 */
    cCode?: string;
    /** @description 单据日期 */
    dDate?: string;
    /** @description 仓库编码 */
    cWhCode?: string;
    /** @description 仓库名称 */
    cWhName?: string;
    /**
     * Format: int32
     * @description 存货个数
     */
    InvCount?: number | null;
    /**
     * Format: double
     * @description 数量
     */
    Qty?: number | null;
    /** @description 部门编码 */
    cDepCode?: string;
    /** @description 部门名称 */
    cDepName?: string;
    /** @description 单据条码 */
    cSysBarCode?: string;
    /** @description 是否启用货位 */
    bWhPos?: boolean;
    /** @description 存货信息集合 */
    cInvDtos?: definitions['BaseSelectDto'][];
  };
  /** @description 产成品入库单审核参数 */
  MomRdAuditReqDto: {
    /** @description 入库单号 */
    cCode: string;
    /**
     * Format: int32
     * @description 入库单ID
     */
    Id?: number | null;
    /** @description 表体信息 */
    cInvDtos?: definitions['RdInvBaseDto'][];
  };
  /** @description 出入库存货基础实体 */
  RdInvBaseDto: {
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 仓库编码 */
    cWhCode?: string;
    /** @description 货位编码 */
    cPosCode?: string;
    /** @description 批次 */
    cBatch?: string;
    /**
     * Format: double
     * @description 数量
     */
    Qty?: number | null;
    /**
     * Format: int32
     * @description 子表标识
     */
    AutoId?: number | null;
    /** @description 生产日期-产成品入库用 */
    dMadeDate?: string;
  };
  /** @description 查询可派工的生产计划明细参数 */
  QueryMomShiftDetailPageReqDto: {
    /** @description 计划开始时间 */
    PlanStartDate?: string;
    /** @description 计划结束时间 */
    PlanEndDate?: string;
    /** @description 存货编码开始 */
    cInvCodeStart?: string;
    /** @description 存货编码结束 */
    cInvCodeEnd?: string;
    /** @description 工序组ID */
    OpGroupId?: string;
    /** @description 工序ID */
    OpId?: string;
    /** @description 生产部门编码 */
    mDeptCode?: string;
    /** @description 计划ID集合 */
    PlanIds?: string[];
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[MomShiftDetailListDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['MomShiftDetailListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 可派工生产计划明细列表实体 */
  MomShiftDetailListDto: {
    /** @description 存货名称 */
    cInvName?: string;
    /** @description 存货代码 */
    cInvAddCode?: string;
    /** @description 规格型号 */
    cInvStd?: string;
    /** @description 计量单位编码 */
    cComUnitCode?: string;
    /** @description 计量单位名称 */
    cComUnitName?: string;
    /** @description 默认工艺路线版本说明 */
    PRoutingVer?: string;
    /** @description 模具名称 */
    MoldName?: string;
    /**
     * Format: int32
     * @description 工序组行号
     */
    OpGroupSeq?: number | null;
    /** @description 工序组ID */
    OpGroupId?: string;
    /** @description 工序组名称 */
    OpGroupName?: string;
    /** @description 是否末道工序组 */
    BLastFlag?: boolean;
    /** @description 是否首道工序组 */
    BFirstFlag?: boolean;
    /** @description 计划人 */
    PlanUser?: string;
    /** @description 计划下达日期 */
    PlanDate?: string;
    /** @description 工序列表 */
    OpDtos?: definitions['MomShiftOpBaseDto'][];
    /**
     * Format: double
     * @description 关闭后计划量
     */
    dCloseIssueQty?: number | null;
    /** @description 计划ID-修改时需传 */
    Id?: string;
    /**
     * Format: int32
     * @description 生产订单主表ID
     */
    MoId?: number | null;
    /**
     * Format: int32
     * @description 生产订单子表ID
     */
    MoDId?: number | null;
    /** @description 销售订单号 */
    cSoCode?: string;
    /** @description 生产订单号 */
    MoCode: string;
    /**
     * Format: int32
     * @description 行号
     */
    SortSeq?: number | null;
    /** @description 存货编码 */
    InvCode: string;
    /**
     * Format: double
     * @description 生产订单数量
     */
    MoQty?: number | null;
    /**
     * Format: double
     * @description 下达数量(必须大于等于生产数量)
     */
    IssueQty?: number | null;
    /** @description 开工日期 */
    StartDate: string;
    /**
     * Format: int32
     * @description 开工时段
     */
    StartPeriod?: number | null;
    /** @description 完工日期 */
    DueDate: string;
    /**
     * Format: int32
     * @description 完工时段
     */
    DuePeriod?: number | null;
    /** @description 需求完工日期 */
    dPreMoDate?: string;
    /** @description 工艺路线ID */
    PRoutingId: string;
    /** @description 模具ID */
    MoldId?: string;
    /** @description 备注 */
    Remark?: string;
    /** @description 生产批次号 */
    MoBatch?: string;
  };
  /** @description 派工工序返回基本实体 */
  MomShiftOpBaseDto: {
    /** @description 工序计划ID */
    RoutingDId?: string;
    /** @description 工序ID */
    OpId?: string;
    /** @description 工序行号 */
    OpSeq?: string;
    /** @description 工序名称 */
    OpName?: string;
    /** @description 模具ID */
    MoldId?: string;
    /** @description 模具名称 */
    MoldName?: string;
    /** @description 设备ID */
    DeviceId?: string;
    /** @description 设备名称 */
    DeviceName?: string;
    /**
     * Format: double
     * @description 累计派工数量
     */
    ShiftQty?: number | null;
    /**
     * Format: double
     * @description 剩余可派工数量
     */
    SyShiftQty?: number | null;
  };
  /** @description 派工单保存参数实体 */
  MomShiftSaveReqDto: {
    /** @description 保存时需传 */
    Id?: string;
    /** @description 派工单号 */
    MSCode: string;
    /** @description 工序组Id */
    OpGroupId?: string;
    /** @description 是否平行工序的工序组 */
    BParallel?: boolean;
    /** @description 开工日期 */
    StartDate: string;
    /** @description 完工日期 */
    DueDate: string;
    /** @description 备注 */
    Remark?: string;
    /** @description 来源派工单主表ID(转单会有) */
    SourceId?: string;
    /** @description 所属车间ID */
    WorkShopId?: string;
    /** @description 子表集合 */
    DetailDtos: definitions['MomShiftDetailBaseDto'][];
  };
  /** @description 派工单表体 */
  MomShiftDetailBaseDto: {
    /** @description 表体ID */
    Id?: string;
    /** @description 工序计划ID */
    RoutingDId?: string;
    /** @description 生产计划ID */
    PlanId: string;
    /**
     * Format: double
     * @description 派工数量
     */
    ShiftQty?: number | null;
    /**
     * Format: double
     * @description 转单数量（不用传后台计算）
     */
    TransQty?: number | null;
    /**
     * Format: double
     * @description 原始派工数量
     */
    OriShiftQty?: number | null;
    /** @description 班组ID */
    TeamGroupId: string;
    /** @description 派工人元编码列表 */
    PersonCodeList?: string[];
    /** @description 模具ID */
    MoldId?: string;
    /** @description 设备ID */
    DeviceId?: string;
    /** @description 开工日期 */
    StartDate?: string;
    /** @description 完工日期 */
    DueDate?: string;
    /**
     * Format: int32
     * @description 开工时段
     */
    StartPeriod?: number | null;
    /**
     * Format: int32
     * @description 完工时段
     */
    DuePeriod?: number | null;
    /** @description 需求完工日期 */
    dPreMoDate?: string;
    /** @description 工序ID */
    OpId: string;
    /** @description 排产单表体ID(参照排产时需要传) */
    ApsDId?: string;
    /** @description 自定义项1 */
    Define1?: string;
    /** @description 自定义项2 */
    Define2?: string;
    /** @description 自定义项3 */
    Define3?: string;
    /** @description 自定义项4 */
    Define4?: string;
    /** @description 自定义项5 */
    Define5?: string;
    /** @description 自定义项6 */
    Define6?: string;
    /** @description 自定义项7 */
    Define7?: string;
    /** @description 自定义项8 */
    Define8?: string;
    /** @description 自定义项9 */
    Define9?: string;
    /** @description 自定义项10 */
    Define10?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[MomShiftMainDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['MomShiftMainDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 派工单表头实体 */
  MomShiftMainDto: {
    /** @description 派工单ID */
    Id?: string;
    /** @description 派工单号 */
    MSCode?: string;
    /** @description 工序组ID */
    OpGroupId?: string;
    /** @description 工序组编码 */
    OpGroupCode?: string;
    /** @description 工序组名称 */
    OpGroupName?: string;
    /** @description 是否平行工序的工序组 */
    BParallel?: boolean;
    /** @description 开工日期 */
    StartDate?: string;
    /** @description 完工日期 */
    DueDate?: string;
    /** @description 备注 */
    Remark?: string;
    /** @description 审核意见 */
    AuditRmind?: string;
    /**
     * Format: int32
     * @description 审核状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = PENDING，待审核<br/>
     * 2 = AUDITED，已审核<br/>
     * 3 = REJECT，驳回
     * @enum {number}
     */
    AuditState?: number | null;
    /** @description 审核人名称 */
    AuditorName?: string;
    /**
     * Format: date-time
     * @description 审核时间
     */
    AuditTime?: string;
    /**
     * Format: date-time
     * @description 制单时间
     */
    CreatedTime?: string;
    /** @description 制单人 */
    CreatedUserName?: string;
    /** @description 表体集合 */
    DetailDtos?: definitions['MomShiftDetailDto'][];
    /** @description 源单ID */
    SourceId?: string;
    /** @description 源单号 */
    SourceCode?: string;
    /** @description 是否班组长已接收 */
    BRevice?: boolean;
    /** @description 是否全部完工 */
    BFinish?: boolean;
    /** @description 是否来源排产 */
    BFromAps?: boolean;
    /** @description 所属车间ID */
    WorkShopId?: string;
    /** @description 所属车间 */
    WorkShop?: string;
    /** @description 是否关闭 */
    BClose?: boolean;
    /** @description 关闭原因 */
    DCloseReason?: string;
    /**
     * Format: date-time
     * @description 关闭时间
     */
    DCloseTime?: string;
    /** @description 关闭人 */
    DCloseUser?: string;
    /** @description 是否最后一张单据 */
    bLast?: boolean;
    /** @description 是否第一张单据 */
    bFirst?: boolean;
    /** @description 是否中间单据 */
    bCenter?: boolean;
  };
  /** @description 派工单表体明细实体 */
  MomShiftDetailDto: {
    /** @description 派工单表体主键(拼上工序组ID) */
    DId?: string;
    /** @description 计划人 */
    PlanUser?: string;
    /** @description 计划下达日期 */
    PlanDate?: string;
    /**
     * Format: double
     * @description 下达数量
     */
    IssueQty?: number | null;
    /** @description 计划单号 */
    PlanCode?: string;
    /**
     * Format: int32
     * @description 计划行号
     */
    PSortSeq?: number | null;
    /**
     * Format: int32
     * @description 生产订单主表ID
     */
    MoId?: number | null;
    /**
     * Format: int32
     * @description 生产订单子表ID
     */
    MoDId?: number | null;
    /** @description 销售订单号 */
    cSoCode?: string;
    /** @description 生产订单号 */
    MoCode?: string;
    /**
     * Format: int32
     * @description 行号
     */
    SortSeq?: number | null;
    /** @description 工艺路线ID */
    PRoutingId?: string;
    /** @description 工艺路线说明 */
    PRoutingVer?: string;
    /** @description 班组名称 */
    TeamGroup?: string;
    /** @description 存货编码 */
    InvCode?: string;
    /** @description 存货名称 */
    cInvName?: string;
    /** @description 存货代码 */
    cInvAddCode?: string;
    /** @description 规格型号 */
    cInvStd?: string;
    /** @description 计量单位编码 */
    cComUnitCode?: string;
    /** @description 计量单位名称 */
    cComUnitName?: string;
    /**
     * Format: int32
     * @description 工序行号
     */
    OpSeq?: number | null;
    /** @description 工序名称 */
    OpName?: string;
    /** @description 模具编码 */
    MoldCode?: string;
    /** @description 设备编码 */
    DeviceCode?: string;
    /** @description 模具名称 */
    MoldName?: string;
    /** @description 设备名称 */
    DeviceName?: string;
    /**
     * Format: double
     * @description 累计报工数量
     */
    BillQty?: number | null;
    /**
     * Format: double
     * @description 关闭数量
     */
    CloseQty?: number | null;
    /** @description 派工人元名称列表 */
    PersonNames?: string[];
    /** @description 操作员编码集合 */
    cOpCodes?: string[];
    /** @description 操作员名称集合 */
    cOpNames?: string[];
    /** @description 表体ID */
    Id?: string;
    /** @description 工序计划ID */
    RoutingDId?: string;
    /** @description 生产计划ID */
    PlanId: string;
    /**
     * Format: double
     * @description 派工数量
     */
    ShiftQty?: number | null;
    /**
     * Format: double
     * @description 转单数量（不用传后台计算）
     */
    TransQty?: number | null;
    /**
     * Format: double
     * @description 原始派工数量
     */
    OriShiftQty?: number | null;
    /** @description 班组ID */
    TeamGroupId: string;
    /** @description 派工人元编码列表 */
    PersonCodeList?: string[];
    /** @description 模具ID */
    MoldId?: string;
    /** @description 设备ID */
    DeviceId?: string;
    /** @description 开工日期 */
    StartDate?: string;
    /** @description 完工日期 */
    DueDate?: string;
    /**
     * Format: int32
     * @description 开工时段
     */
    StartPeriod?: number | null;
    /**
     * Format: int32
     * @description 完工时段
     */
    DuePeriod?: number | null;
    /** @description 需求完工日期 */
    dPreMoDate?: string;
    /** @description 工序ID */
    OpId: string;
    /** @description 排产单表体ID(参照排产时需要传) */
    ApsDId?: string;
    /** @description 自定义项1 */
    Define1?: string;
    /** @description 自定义项2 */
    Define2?: string;
    /** @description 自定义项3 */
    Define3?: string;
    /** @description 自定义项4 */
    Define4?: string;
    /** @description 自定义项5 */
    Define5?: string;
    /** @description 自定义项6 */
    Define6?: string;
    /** @description 自定义项7 */
    Define7?: string;
    /** @description 自定义项8 */
    Define8?: string;
    /** @description 自定义项9 */
    Define9?: string;
    /** @description 自定义项10 */
    Define10?: string;
  };
  /** @description 查询派工单分页数据 */
  QueryMomShiftPageReqDto: {
    /** @description 派工开始时间 */
    ShiftStartDate?: string;
    /** @description 派工结束时间 */
    ShiftEndDate?: string;
    /** @description 开工日期开始 */
    StartDateBegin?: string;
    /** @description 开工日期结束 */
    StartDateEnd?: string;
    /** @description 存货编码开始 */
    cInvCodeStart?: string;
    /** @description 存货编码结束 */
    cInvCodeEnd?: string;
    /**
     * Format: int32
     * @description 审核状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = PENDING，待审核<br/>
     * 2 = AUDITED，已审核<br/>
     * 3 = REJECT，驳回
     * @enum {number}
     */
    AuditState?: number | null;
    /** @description 工序组ID */
    OpGroupId?: string;
    /** @description 工序ID */
    OpId?: string;
    /** @description 生产部门编码 */
    mDepCode?: string;
    /** @description 所属车间ID */
    WorkShopId?: string;
    /** @description 模具ID */
    MoldId?: string;
    /** @description 设备ID */
    DeviceId?: string;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[MomShiftListDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['MomShiftListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 派工单列表实体 */
  MomShiftListDto: {
    /** @description 派工单ID */
    MId?: string;
    /** @description 派工单号 */
    MSCode?: string;
    /** @description 审核意见 */
    AuditRmind?: string;
    /**
     * Format: int32
     * @description 审核状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = PENDING，待审核<br/>
     * 2 = AUDITED，已审核<br/>
     * 3 = REJECT，驳回
     * @enum {number}
     */
    AuditState?: number | null;
    /** @description 审核人名称 */
    AuditorName?: string;
    /**
     * Format: date-time
     * @description 审核时间
     */
    AuditTime?: string;
    /** @description 备注 */
    Remark?: string;
    /**
     * Format: date-time
     * @description 制单时间
     */
    CreatedTime?: string;
    /** @description 制单人 */
    CreatedUserName?: string;
    /** @description 来源派工单主表ID(转单会有) */
    SourceId?: string;
    /** @description 源单号 */
    SourceCode?: string;
    /** @description 是否关闭 */
    BClose?: boolean;
    /** @description 关闭原因 */
    DCloseReason?: string;
    /**
     * Format: date-time
     * @description 关闭时间
     */
    DCloseTime?: string;
    /** @description 关闭人 */
    DCloseUser?: string;
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 存货名称 */
    cInvName?: string;
    /** @description 存货代码 */
    cInvAddCode?: string;
    /** @description 规格型号 */
    cInvStd?: string;
    /** @description 计量单位编码 */
    cComUnitCode?: string;
    /** @description 计量单位名称 */
    cComUnitName?: string;
    /** @description 默认工艺路线版本说明 */
    PRoutingVer?: string;
    /** @description 工艺路线ID */
    PRoutingId?: string;
    /** @description 模具名称 */
    MoldName?: string;
    /** @description 模具编码 */
    MoldCode?: string;
    /** @description 设备编码 */
    DeviceCode?: string;
    /** @description 班组名称 */
    TeamGroup?: string;
    /**
     * Format: int32
     * @description 工序组行号
     */
    OpGroupSeq?: number | null;
    /** @description 工序组ID */
    OpGroupId?: string;
    /** @description 工序组名称 */
    OpGroupName?: string;
    /** @description 是否末道工序组 */
    BLastFlag?: boolean;
    /** @description 是否首道工序组 */
    BFirstFlag?: boolean;
    /**
     * Format: int32
     * @description 工序行号
     */
    OpSeq?: number | null;
    /** @description 工序编码 */
    OpCode?: string;
    /** @description 工序名称 */
    OpName?: string;
    /** @description 所属工作中心编码 */
    WcCode?: string;
    /** @description 设备名称 */
    DeviceName?: string;
    /** @description 计划人 */
    PlanUser?: string;
    /** @description 计划下达日期 */
    PlanDate?: string;
    /**
     * Format: double
     * @description 下达数量
     */
    IssueQty?: number | null;
    /** @description 计划单号 */
    PlanCode?: string;
    /**
     * Format: int32
     * @description 计划行号
     */
    PSortSeq?: number | null;
    /**
     * Format: int32
     * @description 生产订单主表ID
     */
    MoId?: number | null;
    /**
     * Format: int32
     * @description 生产订单子表ID
     */
    MoDId?: number | null;
    /** @description 销售订单号 */
    cSoCode?: string;
    /** @description 生产订单号 */
    MoCode?: string;
    /**
     * Format: int32
     * @description 行号
     */
    SortSeq?: number | null;
    /**
     * Format: int32
     * @description 关闭方式<br/>
     * 0 = FULL，整单<br/>
     * 1 = PART，部分<br/>
     * 2 = NONE，未关闭<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    dCloseType?: number | null;
    /** @description 是否关闭 */
    pClose?: boolean;
    /**
     * Format: double
     * @description 累计报工数量
     */
    BillQty?: number | null;
    /** @description 派工人员名称 */
    PersonNames?: string[];
    /** @description 生产部门编码 */
    mDepCode?: string;
    /** @description 生产部门 */
    mDepName?: string;
    /** @description 所属车间ID */
    WorkShopId?: string;
    /** @description 所属车间 */
    WorkShop?: string;
    /** @description 操作员编码集合 */
    cOpCodes?: string[];
    /** @description 操作员名称集合 */
    cOpNames?: string[];
    /** @description 班组长人员编码集合 */
    ForemanCodes?: string[];
    /** @description 班组长姓名列表 */
    ForemanNames?: string[];
    /** @description 表体ID */
    Id?: string;
    /** @description 工序计划ID */
    RoutingDId?: string;
    /** @description 生产计划ID */
    PlanId: string;
    /**
     * Format: double
     * @description 派工数量
     */
    ShiftQty?: number | null;
    /**
     * Format: double
     * @description 转单数量（不用传后台计算）
     */
    TransQty?: number | null;
    /**
     * Format: double
     * @description 原始派工数量
     */
    OriShiftQty?: number | null;
    /** @description 班组ID */
    TeamGroupId: string;
    /** @description 派工人元编码列表 */
    PersonCodeList?: string[];
    /** @description 模具ID */
    MoldId?: string;
    /** @description 设备ID */
    DeviceId?: string;
    /** @description 开工日期 */
    StartDate?: string;
    /** @description 完工日期 */
    DueDate?: string;
    /**
     * Format: int32
     * @description 开工时段
     */
    StartPeriod?: number | null;
    /**
     * Format: int32
     * @description 完工时段
     */
    DuePeriod?: number | null;
    /** @description 需求完工日期 */
    dPreMoDate?: string;
    /** @description 工序ID */
    OpId: string;
    /** @description 排产单表体ID(参照排产时需要传) */
    ApsDId?: string;
    /** @description 自定义项1 */
    Define1?: string;
    /** @description 自定义项2 */
    Define2?: string;
    /** @description 自定义项3 */
    Define3?: string;
    /** @description 自定义项4 */
    Define4?: string;
    /** @description 自定义项5 */
    Define5?: string;
    /** @description 自定义项6 */
    Define6?: string;
    /** @description 自定义项7 */
    Define7?: string;
    /** @description 自定义项8 */
    Define8?: string;
    /** @description 自定义项9 */
    Define9?: string;
    /** @description 自定义项10 */
    Define10?: string;
  };
  /** @description 派工单关闭请求Dto */
  MomShiftCloseReqDto: {
    /**
     * Format: int64
     * @description 派工单Id
     */
    ShiftId: string;
    /** @description 关闭原因 */
    DCloseReason?: string;
  };
  /** @description 查询派工任务分页数据 */
  QueryShiftTaskPageReqDto: {
    /** @description 生产订单号 */
    MoCode?: string;
    /** @description 派工单号 */
    MSCode?: string;
    /** @description 存货编码 */
    cInvCode?: string;
    /**
     * Format: int32
     * @description 任务状态<br/>
     * 0 = PENDING，待接收<br/>
     * 1 = RECEIVED，已接收<br/>
     * 2 = SUSPEND，挂起<br/>
     * 3 = RECOVERY，已恢复<br/>
     * 4 = STARTED，已开工<br/>
     * 5 = FINISHED，已完工<br/>
     * 6 = TRANSED，已转单<br/>
     * 7 = CLOSED，已关闭<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    TaskState?: number | null;
    /** @description 工序ID */
    OpId?: string;
    /** @description 班组ID */
    TeamId?: string;
    /** @description 车间ID */
    WorkShopId?: string;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[MoShiftTaskDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['MoShiftTaskDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 派工任务返回实体 */
  MoShiftTaskDto: {
    /** @description 计划ID */
    PlanId?: string;
    /** @description 计划单号 */
    PlanCode?: string;
    /** @description 生产订单号 */
    MoCode?: string;
    /**
     * Format: int32
     * @description 生产订单行号
     */
    SortSeq?: number | null;
    /**
     * Format: double
     * @description 生产数量
     */
    MoQty?: number | null;
    /** @description 部门编码 */
    MDeptCode?: string;
    /** @description 计划员 */
    Plantor?: string;
    /** @description 计划下达时间 */
    IssueTime?: string;
    /** @description 部门名称 */
    MDeptName?: string;
    /** @description 派工单ID */
    ShiftMainId?: string;
    /** @description 派工单子表ID */
    ShiftDetailId?: string;
    /** @description 派工单号 */
    ShiftCode?: string;
    /**
     * Format: double
     * @description 派工数量
     */
    ShiftQty?: number | null;
    /** @description 派工时间 */
    ShiftTime?: string;
    /** @description 工序ID */
    OpId?: string;
    /**
     * Format: int32
     * @description 工序行号
     */
    OpSeq?: number | null;
    /** @description 工序名称 */
    OpName?: string;
    /** @description 班组ID */
    TeamId?: string;
    /** @description 班组名称 */
    TeamName?: string;
    /** @description 班组长 */
    TeamLeader?: string;
    /** @description 模具ID */
    MoldId?: string;
    /** @description 模具名称 */
    MoldName?: string;
    /** @description 设备ID */
    DeviceId?: string;
    /** @description 设备名称 */
    DeviceName?: string;
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 存货名称 */
    cInvName?: string;
    /** @description 存货代码 */
    cInvAddCode?: string;
    /** @description 规格型号 */
    cInvStd?: string;
    /** @description 计量单位编码 */
    cComUnitCode?: string;
    /** @description 计量单位名称 */
    cComUnitName?: string;
    /**
     * Format: int32
     * @description 任务状态<br/>
     * 0 = PENDING，待接收<br/>
     * 1 = RECEIVED，已接收<br/>
     * 2 = SUSPEND，挂起<br/>
     * 3 = RECOVERY，已恢复<br/>
     * 4 = STARTED，已开工<br/>
     * 5 = FINISHED，已完工<br/>
     * 6 = TRANSED，已转单<br/>
     * 7 = CLOSED，已关闭<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    TaskState?: number | null;
    /** @description 任务状态说明 */
    TaskStateStr?: string;
    /** @description 接收时间 */
    ReceiveTime?: string;
    /** @description 接收人 */
    Receiver?: string;
    /** @description 接收人名称 */
    ReceiveName?: string;
  };
  /** @description 转单数据计算参数 */
  MomShiftTransReqDto: {
    /** @description 派工单ID */
    ShiftId: string;
  };
  /** @description 派工单打印参数 */
  MomShiftPrintReqDto: {
    /** @description 派工单ID */
    Id: string;
  };
  /** @description 查询报工单列表参数 */
  QueryMoRoutingBillPageReqDto: {
    /** @description 班组ID */
    TeamId?: string;
    /** @description 工序组ID */
    OpGroupId?: string;
    /** @description 工序ID */
    OpId?: string;
    /** @description 开启日期 */
    StartDate?: string;
    /** @description 结束日期 */
    EndDate?: string;
    /** @description 存货编码开始 */
    cInvCodeStart?: string;
    /** @description 存货编码结束 */
    cInvCodeEnd?: string;
    /** @description 生产部门 */
    mDepCode?: string;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[MoRoutingBillListDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['MoRoutingBillListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 报工单列表返回实体 */
  MoRoutingBillListDto: {
    /** @description 报工单ID */
    Id?: string;
    /** @description 报工单号 */
    VouchCode?: string;
    /** @description 单据日期 */
    VouchDate?: string;
    /** @description 生产订单号 */
    MoCode?: string;
    /**
     * Format: int32
     * @description 生产订单主表ID
     */
    MoId?: number | null;
    /** @description 计划单号 */
    PlanCode?: string;
    /** @description 计划ID */
    PlanId?: string;
    /** @description 不良入库单号集合 */
    ScrapRdCodeList?: string[];
    /** @description 入库单号集合 */
    RdCodeList?: string[];
    /**
     * Format: date-time
     * @description 报工时间
     */
    CreatedTime?: string;
    /** @description 报工人员 */
    CreatedUserName?: string;
    /** @description 表体ID */
    DId?: string;
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 存货名称 */
    cInvName?: string;
    /** @description 存货代码 */
    cInvAddCode?: string;
    /** @description 规格型号 */
    cInvStd?: string;
    /** @description 计量单位 */
    cComUnitName?: string;
    /** @description 班组ID */
    TeamId?: string;
    /** @description 班组名称 */
    TeamName?: string;
    /** @description 工序组ID */
    OpGroupId?: string;
    /**
     * Format: int32
     * @description 工序组行号
     */
    OpGroupSeq?: number | null;
    /** @description 工序组名称 */
    OpGroupName?: string;
    /** @description 工序ID */
    OpId?: string;
    /**
     * Format: int32
     * @description 工序行号
     */
    OpSeq?: number | null;
    /** @description 工序名称 */
    OpName?: string;
    /** @description 工序制作人 */
    cPersonCode?: string;
    /** @description 工序制作人名称 */
    cPerson?: string;
    /** @description 报工人编码集合 */
    cPersonCodes?: string[];
    /** @description 报工人名称 */
    cPersonList?: string[];
    /**
     * Format: double
     * @description 合格数量
     */
    QualifiedQty?: number | null;
    /**
     * Format: double
     * @description 不良数量
     */
    ScrapQty?: number | null;
    /**
     * Format: double
     * @description 报检数量
     */
    DeclareQty?: number | null;
    /**
     * Format: double
     * @description 报工总数量
     */
    ReportQty?: number | null;
    /**
     * Format: double
     * @description 总的有效工时
     */
    EffectWHours?: number | null;
    /**
     * Format: double
     * @description 总的无效工时
     */
    InvaildWHours?: number | null;
    /**
     * Format: double
     * @description 实际总的有效工时
     */
    SJEffectWHours?: number | null;
    /**
     * Format: double
     * @description 实际总的无效工时
     */
    SJInvaildWHours?: number | null;
    /** @description 生产部门编码 */
    mDepCode?: string;
    /** @description 生产部门 */
    mDepName?: string;
  };
  /** @description 查询报工单明细参数 */
  QueryMoRoutingBillInfoReqDto: {
    /** @description 单据ID */
    Id?: string;
    /**
     * Format: int32
     * @description 查询方式<br/>
     * 0 = ALL，默认<br/>
     * 1 = FIRST，第一张<br/>
     * 2 = PREVIOUS，上一页<br/>
     * 3 = NEXT，下一页<br/>
     * 4 = FINAL，最后一页
     * @enum {number}
     */
    Way?: number | null;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[MoRoutingInfoDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['MoRoutingInfoDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 报工单明细返回实体 */
  MoRoutingInfoDto: {
    /** @description 报工单ID */
    Id?: string;
    /** @description 报工单号 */
    VouchCode?: string;
    /** @description 单据日期 */
    VouchDate?: string;
    /** @description 生产订单号 */
    MoCode?: string;
    /**
     * Format: int32
     * @description 生产订单主表ID
     */
    MoId?: number | null;
    /** @description 计划单号 */
    PlanCode?: string;
    /** @description 计划ID */
    PlanId?: string;
    /** @description 不良入库单号集合 */
    ScrapRdCodeList?: string[];
    /** @description 入库单号集合 */
    RdCodeList?: string[];
    /**
     * Format: date-time
     * @description 报工时间
     */
    CreatedTime?: string;
    /** @description 报工人员 */
    CreatedUserName?: string;
    /** @description 表体行 */
    DetailDtos?: definitions['MoRoutingBillDetailDto'][];
    /** @description 是否最后一张单据 */
    bLast?: boolean;
    /** @description 是否第一张单据 */
    bFirst?: boolean;
    /** @description 是否中间单据 */
    bCenter?: boolean;
  };
  /** @description 报工单表体返回实体 */
  MoRoutingBillDetailDto: {
    /** @description 表体ID */
    Id?: string;
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 存货名称 */
    cInvName?: string;
    /** @description 存货代码 */
    cInvAddCode?: string;
    /** @description 规格型号 */
    cInvStd?: string;
    /** @description 计量单位编码 */
    cComUnitCode?: string;
    /** @description 计量单位名称 */
    cComUnitName?: string;
    /** @description 工序组ID */
    OpGroupId?: string;
    /**
     * Format: int32
     * @description 工序组行号
     */
    OpGroupSeq?: number | null;
    /** @description 工序组名称 */
    OpGroupName?: string;
    /** @description 工序ID */
    OpId?: string;
    /**
     * Format: int32
     * @description 工序行号
     */
    OpSeq?: number | null;
    /** @description 工序名称 */
    OpName?: string;
    /** @description 工序制作人 */
    cPersonCode?: string;
    /** @description 工序制作人名称 */
    cPerson?: string;
    /** @description 工序制作人名称列表 */
    cPersons?: string[];
    /** @description 报工人编码集合 */
    cPersonCodes?: string[];
    /**
     * Format: double
     * @description 合格数量
     */
    QualifiedQty?: number | null;
    /**
     * Format: double
     * @description 不良数量
     */
    ScrapQty?: number | null;
    /**
     * Format: double
     * @description 报检数量
     */
    DeclareQty?: number | null;
    /**
     * Format: double
     * @description 报工总数量
     */
    ReportQty?: number | null;
    /**
     * Format: double
     * @description 总的有效工时
     */
    EffectWHours?: number | null;
    /**
     * Format: double
     * @description 总的无效工时
     */
    InvaildWHours?: number | null;
    /**
     * Format: double
     * @description 实际总的有效工时
     */
    SJEffectWHours?: number | null;
    /**
     * Format: double
     * @description 实际总的无效工时
     */
    SJInvaildWHours?: number | null;
    /** @description 报废的原因列表 */
    ScrapDtos?: definitions['MoRoutingBillScrapDto'][];
  };
  /** @description 报工不良数量以及原因实体 */
  MoRoutingBillScrapDto: {
    /** @description ID */
    Id?: string;
    /**
     * Format: double
     * @description 不良数量
     */
    ScrapQty?: number | null;
    /** @description 不良原因编码 */
    ReasonCode?: string;
    /** @description 不良原因 */
    Reason?: string;
    /** @description 图片列表 */
    PicList?: string[];
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[OMOrderHeadDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['OMOrderHeadDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 委外订单表头实体 */
  OMOrderHeadDto: {
    /** @description 委外订单ID */
    moid?: string;
    /** @description 业务类型 */
    cbustype?: string;
    /** @description 委外订单号 */
    ccode: string;
    /** @description 订单日期 */
    ddate: string;
    /** @description 供应商编码 */
    cvencode: string;
    /** @description 部门编码 */
    cdepcode?: string;
    /** @description 人员编码 */
    cpersoncode?: string;
    /** @description 汇率 */
    nflat?: string;
    /** @description 税率 */
    itaxrate?: string;
    /** @description 采购类型 */
    cptcode: string;
    /** @description 采购类型 */
    cptname?: string;
    /** @description 币种 */
    cexch_name?: string;
    /** @description 备注 */
    cmemo?: string;
  };
  /** @description 委外订单保存实体 */
  OMOrderSaveReqDto: {
    /** @description 表头 */
    Head?: definitions['OMOrderHeadDto'];
    /** @description 表体信息 */
    Bodys?: definitions['OMOrderBodyDto'][];
  };
  /** @description 委外订单表体实体 */
  OMOrderBodyDto: {
    /** @description 存货编码 */
    cinvcode?: string;
    /** @description 数量 */
    iquantity?: string;
    /** @description 预计到货时间 */
    darrivedate?: string;
    /** @description 项目编码 */
    citemcode?: string;
    /** @description 原币无税单价 */
    iunitprice?: string;
    /** @description 项目大类 */
    citem_class?: string;
    /** @description 税率 */
    ipertaxrate?: string;
    /** @description 表体备注 */
    cbmemo?: string;
    /** @description 计划下达日期 */
    dstartdate?: string;
  };
  /** @description 委外订单审核参数 */
  OMOrderAuditReqDto: {
    /** @description 委外订单ID */
    MOID?: string;
    /**
     * Format: int32
     * @description 审核操作<br/>
     * 0 = UNAUDIT，弃审<br/>
     * 1 = AUDIT，审核<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    AuditAction?: number | null;
  };
  /** @description 查询订单明细参数 */
  QueryOMOrderInfoReqDto: {
    /** @description 订单号 */
    ccode?: string;
    /**
     * Format: int32
     * @description 查询方式<br/>
     * 0 = ALL，默认<br/>
     * 1 = FIRST，第一张<br/>
     * 2 = PREVIOUS，上一页<br/>
     * 3 = NEXT，下一页<br/>
     * 4 = FINAL，最后一页
     * @enum {number}
     */
    QueryWay?: number | null;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[OMOrderInfoDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['OMOrderInfoDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 委外订单明细实体 */
  OMOrderInfoDto: {
    /** @description 业务类型（中文名称） */
    cbustype?: string;
    /** @description 委外订单号 */
    ccode?: string;
    /** @description 主表ID */
    moid?: string;
    /** @description 订单日期 */
    ddate?: string;
    /** @description 供应商编码 */
    cvencode?: string;
    /** @description 供应商名称 */
    cvenname?: string;
    /** @description 部门编码 */
    cdepcode?: string;
    /** @description 部门名称 */
    cdepname?: string;
    /** @description 人员编码 */
    cpersoncode?: string;
    /** @description 业务员名称 */
    cpersonname?: string;
    /**
     * Format: double
     * @description 汇率
     */
    nflat?: number | null;
    /**
     * Format: double
     * @description 税率
     */
    itaxrate?: number | null;
    /** @description 币种名称 */
    cexch_name?: string;
    /** @description 委外类型编码 */
    cptcode?: string;
    /** @description 委外类型 */
    cptname?: string;
    /** @description 备注 */
    cmemo?: string;
    /**
     * Format: int32
     * @description 审核状态 2：审核通过 0 ：待审核
     */
    iverifystateex?: number | null;
    /** @description 制单人 */
    cmaker?: string;
    /** @description 审核人 */
    cverifier?: string;
    /** @description 制单时间 */
    cmaketime?: string;
    /** @description 审核时间 */
    daudittime?: string;
    /** @description 表体集合 */
    bodys?: definitions['OMOrderBodyInfoDto'][];
  };
  /** @description 委外订单表体明细 */
  OMOrderBodyInfoDto: {
    /** @description 子表ID */
    id?: string;
    /** @description 主表ID */
    moid?: string;
    /** @description 项目大类 */
    citem_class?: string;
    /** @description 项目编码 */
    citemcode?: string;
    /** @description 项目名称 */
    citemname?: string;
    /** @description 项目大类名称 */
    citem_name?: string;
    /** @description 存货编码 */
    cinvcode?: string;
    /** @description 存货代码 */
    cinvaddcode?: string;
    /** @description 存货名称 */
    cinvname?: string;
    /** @description 规格型号 */
    cinvstd?: string;
    /** @description 主计量 */
    cinvm_unit?: string;
    /**
     * Format: double
     * @description 数量
     */
    iquantity?: number | null;
    /** @description 计划到货时间 */
    darrivedate?: string;
    /** @description 收货人 */
    revicer?: string;
    /**
     * Format: double
     * @description 原币含税单价
     */
    itaxprice?: number | null;
    /**
     * Format: double
     * @description 原币单价
     */
    iunitprice?: number | null;
    /**
     * Format: double
     * @description 原币金额
     */
    imoney?: number | null;
    /**
     * Format: double
     * @description 原币税额
     */
    itax?: number | null;
    /**
     * Format: double
     * @description 原币价税合计
     */
    isum?: number | null;
    /**
     * Format: double
     * @description 税率
     */
    ipertaxrate?: number | null;
    /** @description 图号 */
    cinvdefine1?: string;
    /** @description 图纸版本 */
    cinvdefine2?: string;
    /** @description 图面材质 */
    cinvdefine3?: string;
    /** @description 备注 */
    cbmemo?: string;
    /** @description 行关闭人 */
    cbcloser?: string;
    /** @description 行关闭时间 */
    cbclosetime?: string;
  };
  /** @description 采购订单列表查询参数 */
  QueryPoOrderPageReqDto: {
    /** @description 供应商编码开始 */
    VenCodeBegin?: string;
    /** @description 供应商编码结束 */
    VenCodeEnd?: string;
    /** @description 订单日期开始 */
    dPoDateBegin?: string;
    /** @description 订单日期结束 */
    dPoDateEnd?: string;
    /** @description 订单号开始 */
    cPoIdBegin?: string;
    /** @description 订单号结束 */
    cPoIdEnd?: string;
    /** @description 存货编码开始 */
    cInvCodeBegin?: string;
    /** @description 存货编码结束 */
    cInvCodeEnd?: string;
    /**
     * Format: int32
     * @description 审核状态<br/>
     * 0 = UNAUDIT，弃审<br/>
     * 1 = AUDIT，审核<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    AuditState?: number | null;
    /** @description 采购类型编码 */
    cPtCode?: string;
    /** @description 业务类型 */
    cBusType?: string;
    /**
     * Format: int32
     * @description 供应商接收状态<br/>
     * 0 = UNREVICE，未接收<br/>
     * 1 = PARTREVICE，部分接收<br/>
     * 2 = REVICED，已全部接收<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    ReviceState?: number | null;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[OMOrderListDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['OMOrderListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 订单列表实体 */
  OMOrderListDto: {
    /** @description 业务类型（中文名称） */
    cbustype?: string;
    /** @description 委外订单号 */
    ccode?: string;
    /** @description 主表ID */
    moid?: string;
    /** @description 订单日期 */
    ddate?: string;
    /** @description 供应商编码 */
    cvencode?: string;
    /** @description 供应商名称 */
    cvenname?: string;
    /** @description 部门编码 */
    cdepcode?: string;
    /** @description 部门名称 */
    cdepname?: string;
    /** @description 人员编码 */
    cpersoncode?: string;
    /** @description 业务员名称 */
    cpersonname?: string;
    /**
     * Format: double
     * @description 汇率
     */
    nflat?: number | null;
    /**
     * Format: double
     * @description 税率
     */
    itaxrate?: number | null;
    /** @description 币种名称 */
    cexch_name?: string;
    /** @description 委外类型编码 */
    cptcode?: string;
    /** @description 委外类型 */
    cptname?: string;
    /** @description 备注 */
    cmemo?: string;
    /**
     * Format: int32
     * @description 审核状态 2：审核通过 0 ：待审核 1:审核中
     */
    iverifystatenew?: number | null;
    /** @description 制单人 */
    cmaker?: string;
    /** @description 审核人 */
    cverifier?: string;
    /** @description 制单时间 */
    dcreatetime?: string;
    /** @description 审核时间 */
    dverifytime?: string;
    /** @description 关闭人 */
    cbcloser?: string;
    /** @description 关闭时间 */
    dclosetime?: string;
    /** @description 子表ID */
    modetailsid?: string;
    /** @description 存货编码 */
    cinvcode?: string;
    /** @description 存货代码 */
    cinvaddcode?: string;
    /** @description 存货名称 */
    cinvname?: string;
    /** @description 规格型号 */
    cinvstd?: string;
    /** @description 主计量 */
    cinvm_unit?: string;
    /**
     * Format: double
     * @description 数量
     */
    iquantity?: number | null;
    /** @description 计划到货时间 */
    darrivedate?: string;
    /**
     * Format: double
     * @description 原币含税单价
     */
    itaxprice?: number | null;
    /**
     * Format: double
     * @description 原币单价
     */
    iunitprice?: number | null;
    /**
     * Format: double
     * @description 原币金额
     */
    imoney?: number | null;
    /**
     * Format: double
     * @description 原币税额
     */
    itax?: number | null;
    /**
     * Format: double
     * @description 原币价税合计
     */
    isum?: number | null;
    /**
     * Format: double
     * @description 税率
     */
    ipertaxrate?: number | null;
    /** @description 图号 */
    cinvdefine1?: string;
    /** @description 图纸版本 */
    cinvdefine2?: string;
    /** @description 图面材质 */
    cinvdefine3?: string;
    /**
     * Format: int32
     * @description 供应商接收状态<br/>
     * 0 = UNREVICE，未接收<br/>
     * 1 = PARTREVICE，部分接收<br/>
     * 2 = REVICED，已全部接收<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    reviceState?: number | null;
    /**
     * Format: double
     * @description 供应商接收数量
     */
    reviceQty?: number | null;
  };
  /** @description 工序保存参数 */
  OperationSaveReqDto: {
    /** @description ID修改需传 */
    Id?: string;
    /** @description 工序编码 */
    OpCode: string;
    /** @description 工序名称 */
    OpName: string;
    /** @description 所属工作中心编码 */
    WcCode: string;
    /** @description 设备ID */
    DeviceId?: string;
    /** @description 备注/说明 */
    Remark?: string;
    /** @description 是否关键工序（领料控制） */
    BKeyOp?: boolean;
    /** @description 是否报工点 */
    BReportFlag?: boolean;
    /** @description 是否倒冲工序 */
    BFFlag?: boolean;
    /** @description 是否扫描工序 */
    BScan?: boolean;
    /** @description 设备ID集合 */
    DeviceIdList?: string[];
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[OperationInfoDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['OperationInfoDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 工序当啊明细实体 */
  OperationInfoDto: {
    /** @description 创建人 */
    CreatedUserName?: string;
    /**
     * Format: date-time
     * @description 创建时间
     */
    CreatedTime?: string;
    /** @description 工作中心 */
    WcName?: string;
    /** @description 设备名称 */
    DeviceName?: string;
    /** @description 设备ID集合 */
    DeviceIds?: string;
    /** @description 设备集合 */
    DeviceList?: definitions['BaseSelectDto'][];
    /** @description ID修改需传 */
    Id?: string;
    /** @description 工序编码 */
    OpCode: string;
    /** @description 工序名称 */
    OpName: string;
    /** @description 所属工作中心编码 */
    WcCode: string;
    /** @description 设备ID */
    DeviceId?: string;
    /** @description 备注/说明 */
    Remark?: string;
    /** @description 是否关键工序（领料控制） */
    BKeyOp?: boolean;
    /** @description 是否报工点 */
    BReportFlag?: boolean;
    /** @description 是否倒冲工序 */
    BFFlag?: boolean;
    /** @description 是否扫描工序 */
    BScan?: boolean;
    /** @description 设备ID集合 */
    DeviceIdList?: string[];
  };
  /** @description 查询工序分页参数 */
  QueryOperationPageReqDto: {
    /** @description 工作中心 */
    WcCode?: string;
    /** @description 工序类型（默认全部） */
    OpTypes?: (number | null)[];
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[OperationInfoDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['OperationInfoDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 工序组档案保存 */
  OpGroupSaveReqDto: {
    /** @description 修改时需要传 */
    Id?: string;
    /** @description 编码 */
    Code?: string;
    /** @description 名称 */
    Name: string;
    /** @description 是否平行工序的工序组 */
    BParallel?: boolean;
    /** @description 备注 */
    Remark?: string;
    /** @description APP显示图标 */
    Icon?: string;
    /** @description 表体行集合 */
    DetailDtos?: definitions['OpGroupDetailDto'][];
  };
  /** @description 工序组明细表实体 */
  OpGroupDetailDto: {
    /**
     * Format: int32
     * @description 工序行号
     */
    OpSeq?: number | null;
    /** @description 工序ID */
    OpId?: string;
    /** @description 工序代号 */
    OpCode?: string;
    /** @description 工序名称 */
    OpDesc?: string;
    /** @description 备注（说明） */
    DRemark?: string;
    /** @description 设备ID */
    DeviceId?: string;
    /** @description 设备名称 */
    DeviceName?: string;
    /** @description 是否关键工序（领料控制） */
    BKeyOp?: boolean;
    /** @description 是否报工点 */
    BReportFlag?: boolean;
  };
  /** @description 查询工序组明细 */
  QueryOpGroupInfoReqDto: {
    /** @description 工序组 ID */
    Id: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[OpGroupInfoDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['OpGroupInfoDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 工序组明细i实体 */
  OpGroupInfoDto: {
    /** @description 创建人 */
    CreatedUserName?: string;
    /**
     * Format: date-time
     * @description 创建时间
     */
    CreatedTime?: string;
    /** @description 修改时需要传 */
    Id?: string;
    /** @description 编码 */
    Code?: string;
    /** @description 名称 */
    Name: string;
    /** @description 是否平行工序的工序组 */
    BParallel?: boolean;
    /** @description 备注 */
    Remark?: string;
    /** @description APP显示图标 */
    Icon?: string;
    /** @description 表体行集合 */
    DetailDtos?: definitions['OpGroupDetailDto'][];
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[OpGroupListDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['OpGroupListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 工序组列表实体 */
  OpGroupListDto: {
    /** @description ID修改需传 */
    Id?: string;
    /** @description 编码 */
    Code?: string;
    /** @description 名称 */
    Name: string;
    /** @description 是否平行工序的工序组 */
    BParallel?: boolean;
    /** @description 备注 */
    Remark?: string;
    /** @description APP显示图标 */
    Icon?: string;
    /** @description 创建人 */
    CreatedUserName?: string;
    /**
     * Format: date-time
     * @description 创建时间
     */
    CreatedTime?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[OpGroupDetailDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['OpGroupDetailDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 工序检验完成操作请求Dto */
  OpInspectQcAtionReqDto: {
    /**
     * Format: int64
     * @description 任务ID
     */
    TaskId: string;
    /**
     * Format: double
     * @description 良品数量
     */
    QualifiedQty?: number | null;
    /**
     * Format: double
     * @description 不良数量
     */
    ScrapQty?: number | null;
    /** @description 入库参数(末道工序或不良) */
    InWareDto?: definitions['MoRoutingBillInWareBaseDto'];
    /** @description 不良记录集合 */
    ScrapDtos?: definitions['MoRoutingBillScrapDto'][];
  };
  /** @description 报工入库参数 */
  MoRoutingBillInWareBaseDto: {
    /** @description 入库批号 */
    CBtach?: string;
    /** @description 一品多点 */
    CFree1?: string;
    /** @description 良品仓库集合 */
    QualifiedWhDtos?: definitions['WhPosQtyBaseDto'][];
    /** @description 不良品仓库集合 */
    ScrapWhDtos?: definitions['WhPosQtyBaseDto'][];
  };
  /** @description 仓库货位数量实体 */
  WhPosQtyBaseDto: {
    /** @description 仓库编码 */
    WhCode?: string;
    /** @description 货位编码 */
    PosCode?: string;
    /**
     * Format: double
     * @description 数量
     */
    Qty?: number | null;
  };
  /** @description 查询工序检验任务列表参数 */
  QueryOpInspectTaskListReqDto: {
    /**
     * Format: int32
     * @description 任务状态<br/>
     * 1 = PENGING，待检验<br/>
     * 2 = FINLISH，检验完成<br/>
     * 3 = CLOSE，关闭<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    InspectState?: number | null;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LLPJsonResult[OpInspectTaskListDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['OpInspectTaskListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 工序检验任务列表Dto */
  OpInspectTaskListDto: {
    /**
     * Format: int64
     * @description 任务ID
     */
    Id?: string;
    /**
     * Format: int64
     * @description 计划ID
     */
    PlanId?: string;
    /** @description 计划单号 */
    PlanCode?: string;
    /**
     * Format: int64
     * @description 工序计划子表ID
     */
    RoutingDId?: string;
    /**
     * Format: int64
     * @description 派工单主表ID
     */
    ShiftId?: string;
    /** @description 派工单号 */
    ShiftCode?: string;
    /** @description 计量单位名称 */
    cComUnitName?: string;
    /**
     * Format: int64
     * @description 派工单表体ID
     */
    ShiftBodyId?: string;
    /**
     * Format: int32
     * @description 工序组行号
     */
    OpGroupSeq?: number | null;
    /**
     * Format: int64
     * @description 工序组ID
     */
    OpGroupId?: string;
    /** @description 工序组名称 */
    OpGroupName?: string;
    /** @description 是否平行工序 */
    BParallel?: boolean;
    /** @description 工序ID */
    OpId?: string;
    /**
     * Format: int32
     * @description 工序行号
     */
    OpSeq?: number | null;
    /** @description 工序名称 */
    OpName?: string;
    /** @description 工序批次 */
    OpBatch?: string;
    /** @description 末道工序标志 */
    LastOpFlag?: boolean;
    /** @description 末道工序 */
    LastOpFlagStr?: string;
    /** @description 检验方式描述 */
    QcWayDesc?: string;
    /**
     * Format: double
     * @description 报检数量
     */
    DeclareQty?: number | null;
    /**
     * Format: double
     * @description 合格数量
     */
    QualifiedQty?: number | null;
    /**
     * Format: double
     * @description 不良数量
     */
    ScrapQty?: number | null;
    /**
     * Format: int32
     * @description 检验方式<br/>
     * 1 = NONE，无<br/>
     * 2 = SIMPLE，简单模式<br/>
     * 3 = INDEX，指标模式<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    QcWay?: number | null;
    /**
     * Format: int32
     * @description 检验状态<br/>
     * 1 = PENGING，待检验<br/>
     * 2 = FINLISH，检验完成<br/>
     * 3 = CLOSE，关闭<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    InspectState?: number | null;
    /** @description 检验状态 */
    InspectStateDesc?: string;
    /** @description 报检人 */
    CreatedUserName?: string;
    /**
     * Format: date-time
     * @description 报检时间
     */
    CreatedTime?: string;
    /** @description 检验人员 */
    Inspector?: string;
    /**
     * Format: date-time
     * @description 检验时间
     */
    InspectTime?: string;
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 存货代码 */
    cInvAddCode?: string;
    /** @description 存货名称 */
    cInvName?: string;
    /** @description 规格型号 */
    cInvStd?: string;
  };
  /** @description 其他出库保存参数 */
  OtherOutSaveReqDto: {
    /** @description 日期 */
    dDate?: string;
    /** @description 仓库 */
    cWhCode: string;
    /** @description 类别编码 */
    cRdCode?: string;
    /** @description 备注 */
    Remark?: string;
    /** @description 是否生单即审核 */
    BSaveAndCheck?: boolean;
    /** @description 存货列表 */
    InvDtos?: definitions['StockInvBaseDto'][];
  };
  /** @description 库存业务存货基础实体 */
  StockInvBaseDto: {
    /** @description 存货编码 */
    cInvCode?: string;
    /**
     * Format: double
     * @description 数量
     */
    Qty?: number | null;
    /** @description 货位 */
    cPosCode?: string;
    /** @description 批号 */
    cBatch?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[NoCheckOtherOutRdDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['NoCheckOtherOutRdDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 待审核的其他出入库返回实体 */
  NoCheckOtherOutRdDto: {
    /**
     * Format: int32
     * @description 单据主表ID
     */
    Id?: number | null;
    /** @description 单据来源 */
    cSource?: string;
    /** @description 业务类型 */
    cBusType?: string;
    /** @description 仓库编码 */
    cWhCode?: string;
    /** @description 仓库名称 */
    cWhName?: string;
    /** @description 单据日期 */
    dDate?: string;
    /** @description 单号 */
    cCode?: string;
    /** @description 备注 */
    cMemo?: string;
    /** @description 单据条码 */
    csysbarcode?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[OtherOutRdInfoDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['OtherOutRdInfoDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 其他出入库明细返回实体 */
  OtherOutRdInfoDto: {
    /** @description 单号 */
    cCode?: string;
    /**
     * Format: int32
     * @description 出库单主表ID
     */
    Id?: number | null;
    /** @description 存货名称 */
    cInvName?: string;
    /** @description 存货代码 */
    cInvAddCode?: string;
    /** @description 规格型号 */
    cInvStd?: string;
    /** @description 仓库编码 */
    cWhCode?: string;
    /** @description 仓库名称 */
    cWhName?: string;
    /** @description 是否启用货位 */
    bWhPos?: boolean;
    /** @description 是否启用批次 */
    bInvBatch?: boolean;
    /**
     * Format: int32
     * @description 子表ID
     */
    AutoId?: number | null;
    /** @description 存货编码 */
    cInvCode?: string;
    /**
     * Format: double
     * @description 数量
     */
    Qty?: number | null;
    /** @description 货位 */
    cPosCode?: string;
    /** @description 批号 */
    cBatch?: string;
  };
  /** @description 销售出库单审核参数 */
  SaleOutCheckReqDto: {
    /**
     * Format: int32
     * @description 销售出库单ID
     */
    Id?: number | null;
    /** @description 销售出库存货信息集合 */
    InputDtos: definitions['SaleOutBaseDto'][];
  };
  /** @description 销售出库表体基础实体 */
  SaleOutBaseDto: {
    /**
     * Format: int32
     * @description 表体ID
     */
    AutoId?: number | null;
    /** @description 存货编码 */
    cInvCode?: string;
    /**
     * Format: double
     * @description 出库数量
     */
    iQuantity?: number | null;
    /** @description 货位编码 */
    cPosition?: string;
    /** @description 批号 */
    cBatch?: string;
  };
  /** @description 其他入库单保存参数 */
  OtherRdSaveReqDto: {
    /** @description 日期 */
    dDate?: string;
    /** @description 仓库 */
    cWhCode: string;
    /** @description 类别编码 */
    cRdCode?: string;
    /** @description 备注 */
    Remark?: string;
    /** @description 是否生单即审核 */
    BSaveAndCheck?: boolean;
    /** @description 存货列表 */
    InvDtos?: definitions['StockInvBaseDto'][];
  };
  /** @description 计件工资额定表基础实体 */
  PieceQuoteBaseDto: {
    /** @description ID */
    Id?: string;
    /** @description 产品编码 */
    cInvCode: string;
    /** @description 工序ID */
    OpId: string;
    /** @description 班组ID */
    TeamId: string;
    /** @description 设备ID */
    DeviceId?: string;
    /**
     * Format: double
     * @description 计件单价
     */
    QuotePrice?: number | null;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[PieceQuoteInfoDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['PieceQuoteInfoDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 额定表明细实体 */
  PieceQuoteInfoDto: {
    /** @description 存货名称 */
    cInvName?: string;
    /** @description 计量单位 */
    cComUnitName?: string;
    /** @description 计量单位编码 */
    cComUnitCode?: string;
    /** @description 工序编码 */
    OpCode?: string;
    /** @description 工序名称 */
    OpName?: string;
    /** @description 设备名称 */
    DeviceName?: string;
    /** @description 班组名称 */
    TeamName?: string;
    /** @description ID */
    Id?: string;
    /** @description 产品编码 */
    cInvCode: string;
    /** @description 工序ID */
    OpId: string;
    /** @description 班组ID */
    TeamId: string;
    /** @description 设备ID */
    DeviceId?: string;
    /**
     * Format: double
     * @description 计件单价
     */
    QuotePrice?: number | null;
  };
  /** @description 查询额定表分页数据参数 */
  QueryPieceQuotePageReqDto: {
    /** @description 工序ID */
    OpId?: string;
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 设备ID */
    DeviceId?: string;
    /** @description 班组ID */
    TeamId?: string;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[PieceQuoteInfoDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['PieceQuoteInfoDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 计件工资计算参数 */
  PieceWageCalcReqDto: {
    /** @description 计算开始日期 */
    BeginDate: string;
    /** @description 计算结束日期 */
    EndDate: string;
    /** @description 备注 */
    Remark?: string;
  };
  /** @description 计件工资重新计算 */
  PieceWageReCalcReqDto: {
    /** @description 计件工资主表ID */
    Id: string;
  };
  /** @description 查询计件工资主表列表请求参数 */
  QueryPieceWageMainListReqDto: {
    /** @description 开始日期 */
    BeginDate?: string;
    /** @description 结束日期 */
    EndDate?: string;
    /**
     * Format: int32
     * @description 审核状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = PENDING，待审核<br/>
     * 2 = AUDITED，已审核<br/>
     * 3 = REJECT，驳回
     * @enum {number}
     */
    AuditState?: number | null;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[PieceWageMainDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['PieceWageMainDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 计件工资单主表列表 */
  PieceWageMainDto: {
    /** @description 主键 */
    Id?: string;
    /** @description 工资单号 */
    WageNo?: string;
    /**
     * Format: date-time
     * @description 计算开始日期
     */
    BeginDate?: string;
    /**
     * Format: date-time
     * @description 计算结束日期
     */
    EndDate?: string;
    /**
     * Format: double
     * @description 工资总额
     */
    WageAmount?: number | null;
    /**
     * Format: double
     * @description 实际工资总额
     */
    SJWageAmount?: number | null;
    /** @description 备注 */
    Remark?: string;
    /** @description 审核意见 */
    AuditRmind?: string;
    /**
     * Format: int32
     * @description 审核状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = PENDING，待审核<br/>
     * 2 = AUDITED，已审核<br/>
     * 3 = REJECT，驳回
     * @enum {number}
     */
    AuditState?: number | null;
    /** @description 审核人名称 */
    AuditorName?: string;
    /**
     * Format: date-time
     * @description 审核时间
     */
    AuditTime?: string;
    /**
     * Format: date-time
     * @description 创建时间
     */
    CreatedTime?: string;
    /** @description 创建者名称 */
    CreatedUserName?: string;
  };
  /** @description 查询计件工资明细列表请求参数 */
  QueryPieceWageDetailListReqDto: {
    /** @description 主表ID */
    MainId: string;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[PieceWageDetailDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['PieceWageDetailDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 计件工资明细实体 */
  PieceWageDetailDto: {
    /** @description 明细行ID */
    Id?: string;
    /** @description 报工单号 */
    BillCode?: string;
    /** @description 报工单子表ID */
    BillDetailId?: string;
    /** @description 产品编码 */
    cInvCode?: string;
    /** @description 存货名称 */
    cInvName?: string;
    /** @description 所属班组ID */
    TeamId?: string;
    /** @description 班组名称 */
    TeamName?: string;
    /** @description 所属工人 */
    cPersonCode?: string;
    /** @description 工人名字 */
    cPersonName?: string;
    /**
     * Format: int64
     * @description 工序ID
     */
    OpId?: string;
    /** @description 工序名称 */
    OpName?: string;
    /**
     * Format: double
     * @description 报工工时
     */
    BillHours?: number | null;
    /**
     * Format: double
     * @description 报工工资
     */
    BillWage?: number | null;
    /**
     * Format: double
     * @description 实际工时
     */
    SJHours?: number | null;
    /**
     * Format: double
     * @description 实际工资
     */
    SJWage?: number | null;
  };
  /** @description 工资单明细行修改参数 */
  PieceWageDetailUpdateReqDto: {
    /** @description 明细行ID */
    Id?: string;
    /**
     * Format: double
     * @description 实际工资
     */
    SJWage?: number | null;
  };
  /** @description 查询计件工资报表参数 */
  QueryPieceWageReqportReqDto: {
    /** @description 查询关键字（工资单号/备注/报工单号/） */
    KeyWord?: string;
    /** @description 开始日期 */
    BeginDate?: string;
    /** @description 结束日期 */
    EndDate?: string;
    /** @description 产品编码 */
    cInvCode?: string;
    /** @description 工序ID */
    OpId?: string;
    /** @description 人员编码 */
    cPersonCode?: string;
    /** @description 班子ID */
    TeamId?: string;
    /**
     * Format: int32
     * @description 审核状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = PENDING，待审核<br/>
     * 2 = AUDITED，已审核<br/>
     * 3 = REJECT，驳回
     * @enum {number}
     */
    AuditState?: number | null;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[PieceWageReportDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['PieceWageReportDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 计件工资报表返回实体 */
  PieceWageReportDto: {
    /** @description 计件工资主表ID */
    Id?: string;
    /** @description 工资单号 */
    WageNo?: string;
    /** @description 计算开始日期 */
    BeginDate?: string;
    /** @description 计算结束日期 */
    EndDate?: string;
    /** @description 所属工人 */
    cPersonCode?: string;
    /** @description 人员名字 */
    cPersonName?: string;
    /** @description 部门编码 */
    cDepCode?: string;
    /** @description 部门名称 */
    cDepName?: string;
    /**
     * Format: double
     * @description 报工总工时
     */
    BillHours?: number | null;
    /**
     * Format: double
     * @description 报工总工资
     */
    BillWage?: number | null;
    /**
     * Format: double
     * @description 实际总工时
     */
    SJHours?: number | null;
    /**
     * Format: double
     * @description 实际总工资
     */
    SJWage?: number | null;
    /** @description 工序工时工资集合 */
    OpWageDtos?: definitions['PersonOpWageDto'][];
  };
  /** @description 人员工序工时工资实体 */
  PersonOpWageDto: {
    /** @description 工序ID */
    OpId?: string;
    /** @description 工序名称 */
    OpName?: string;
    /**
     * Format: double
     * @description 报工工时
     */
    BillHours?: number | null;
    /**
     * Format: double
     * @description 报工工资
     */
    BillWage?: number | null;
    /**
     * Format: double
     * @description 实际工时
     */
    SJHours?: number | null;
    /**
     * Format: double
     * @description 实际工资
     */
    SJWage?: number | null;
  };
  /** @description 配置保存参数 */
  PlatConfigSaveReqDto: {
    /** @description ID修改时需传 */
    Id?: string;
    /** @description 配置的KEY */
    cKey: string;
    /** @description 配置名称 */
    cName?: string;
    /** @description 配置的JSON数据 */
    cData: string;
    /** @description 是否公共配置方案 */
    bPub?: boolean;
    /** @description 配置的账套号-不传默认当前登录所在账套，预留后期从一个账套复制到另一个账套 */
    AccId?: string;
  };
  /** @description 配置查询参数 */
  QueryPlatConfigReqDto: {
    /** @description 配置KEY */
    cKey: string;
    /** @description 是否公共方案 传 null 时先找个人 再找公共 */
    bPub?: boolean;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[PlatConfigDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['PlatConfigDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 配置返回实体 */
  PlatConfigDto: {
    /** @description ID修改时需传 */
    Id?: string;
    /** @description 配置的KEY */
    cKey?: string;
    /** @description 配置名称 */
    cName?: string;
    /** @description 配置的JSON数据 */
    cData?: string;
    /** @description 是否公共配置方案 */
    bPub?: boolean;
    /** @description 用户ID */
    ByUserId?: string;
  };
  /** @description 不带分页的JSON泛型LIST返回类型 */
  'LLJsonResult[PlatConfigDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['PlatConfigDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[PoOrderHeadDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['PoOrderHeadDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 采购订单头实体 */
  PoOrderHeadDto: {
    /** @description 业务类型（中文名称） */
    cbustype?: string;
    /** @description 采购订单号 */
    cpoid: string;
    /** @description 订单日期 */
    dpodate?: string;
    /** @description 供应商编码 */
    cvencode: string;
    /** @description 部门编码 */
    cdepcode: string;
    /** @description 人员编码 */
    cpersoncode?: string;
    /** @description 汇率 */
    nflat?: string;
    /** @description 税率 */
    itaxrate?: string;
    /** @description 币种名称 */
    cexch_name?: string;
    /** @description 采购类型编码 */
    cptcode?: string;
    /** @description 采购类型 */
    cptname?: string;
    /** @description 备注 */
    cmemo?: string;
    /** @description 表体集合 */
    bodys?: definitions['PoOrderBodyDto'][];
  };
  /** @description 采购订单表体实体 */
  PoOrderBodyDto: {
    /** @description 存货编码 */
    cinvcode?: string;
    /** @description 数量 */
    iquantity?: string;
    /** @description 预计到货时间 */
    darrivedate?: string;
    /** @description 项目编码 */
    citemcode?: string;
    /** @description 原币无税单价 */
    iunitprice?: string;
    /** @description 项目大类 */
    citem_class?: string;
    /** @description 税率 */
    ipertaxrate?: string;
    /** @description 表体备注 */
    cbmemo?: string;
  };
  /** @description 采购订单保存参数 */
  PoOrderSaveReqDto: {
    /** @description 业务类型（中文名称） */
    cbustype?: string;
    /** @description 采购订单号 */
    cpoid: string;
    /** @description 订单日期 */
    dpodate?: string;
    /** @description 供应商编码 */
    cvencode: string;
    /** @description 部门编码 */
    cdepcode: string;
    /** @description 人员编码 */
    cpersoncode?: string;
    /** @description 汇率 */
    nflat?: string;
    /** @description 税率 */
    itaxrate?: string;
    /** @description 币种名称 */
    cexch_name?: string;
    /** @description 采购类型编码 */
    cptcode?: string;
    /** @description 采购类型 */
    cptname?: string;
    /** @description 备注 */
    cmemo?: string;
    /** @description 表体集合 */
    bodys?: definitions['PoOrderBodyDto'][];
  };
  /** @description 采购订单审核参数 */
  PoOrderAuditReqDto: {
    /** @description 采购订单ID */
    POID?: string;
    /**
     * Format: int32
     * @description 审核操作<br/>
     * 0 = UNAUDIT，弃审<br/>
     * 1 = AUDIT，审核<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    AuditAction?: number | null;
  };
  /** @description 查询采购订单明细参数 */
  QueryPoOrderInfoReqDto: {
    /** @description 采购订单号 */
    cpoid?: string;
    /**
     * Format: int32
     * @description 查询方式<br/>
     * 0 = ALL，默认<br/>
     * 1 = FIRST，第一张<br/>
     * 2 = PREVIOUS，上一页<br/>
     * 3 = NEXT，下一页<br/>
     * 4 = FINAL，最后一页
     * @enum {number}
     */
    QueryWay?: number | null;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[PoOrderInfoDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['PoOrderInfoDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 采购订单明细实体 */
  PoOrderInfoDto: {
    /** @description 业务类型（中文名称） */
    cbustype?: string;
    /** @description 采购订单号 */
    cpoid?: string;
    /** @description 主表ID */
    poid?: string;
    /** @description 订单日期 */
    dpodate?: string;
    /** @description 供应商编码 */
    cvencode?: string;
    /** @description 供应商名称 */
    cvenname?: string;
    /** @description 部门编码 */
    cdepcode?: string;
    /** @description 部门名称 */
    cdepname?: string;
    /** @description 人员编码 */
    cpersoncode?: string;
    /** @description 业务员名称 */
    cpersonname?: string;
    /**
     * Format: double
     * @description 汇率
     */
    nflat?: number | null;
    /**
     * Format: double
     * @description 税率
     */
    itaxrate?: number | null;
    /** @description 币种名称 */
    cexch_name?: string;
    /** @description 采购类型编码 */
    cptcode?: string;
    /** @description 采购类型 */
    cptname?: string;
    /** @description 备注 */
    cmemo?: string;
    /**
     * Format: int32
     * @description 审核状态 2：审核通过 0 ：待审核
     */
    iverifystateex?: number | null;
    /** @description 制单人 */
    cmaker?: string;
    /** @description 审核人 */
    cverifier?: string;
    /** @description 制单时间 */
    cmaketime?: string;
    /** @description 审核时间 */
    caudittime?: string;
    /** @description 表体集合 */
    bodys?: definitions['PoOrderBodyInfoDto'][];
  };
  /** @description 采购订单表体明细 */
  PoOrderBodyInfoDto: {
    /** @description 子表ID */
    id?: string;
    /** @description 主表ID */
    poid?: string;
    /** @description 项目大类 */
    citem_class?: string;
    /** @description 项目编码 */
    citemcode?: string;
    /** @description 项目名称 */
    citemname?: string;
    /** @description 项目大类名称 */
    citem_name?: string;
    /** @description 存货编码 */
    cinvcode?: string;
    /** @description 存货代码 */
    cinvaddcode?: string;
    /** @description 存货名称 */
    cinvname?: string;
    /** @description 规格型号 */
    cinvstd?: string;
    /** @description 主计量 */
    cinvm_unit?: string;
    /**
     * Format: double
     * @description 数量
     */
    iquantity?: number | null;
    /** @description 计划到货时间 */
    darrivedate?: string;
    /** @description 收货人 */
    revicer?: string;
    /**
     * Format: double
     * @description 原币含税单价
     */
    itaxprice?: number | null;
    /**
     * Format: double
     * @description 原币单价
     */
    iunitprice?: number | null;
    /**
     * Format: double
     * @description 原币金额
     */
    imoney?: number | null;
    /**
     * Format: double
     * @description 原币税额
     */
    itax?: number | null;
    /**
     * Format: double
     * @description 原币价税合计
     */
    isum?: number | null;
    /**
     * Format: double
     * @description 税率
     */
    ipertaxrate?: number | null;
    /** @description 图号 */
    cinvdefine1?: string;
    /** @description 图纸版本 */
    cinvdefine2?: string;
    /** @description 图面材质 */
    cinvdefine3?: string;
    /** @description 备注 */
    cbmemo?: string;
    /** @description 行关闭人 */
    cbcloser?: string;
    /** @description 行关闭时间 */
    cbclosetime?: string;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[PoOrderListDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['PoOrderListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 采购订单列表实体 */
  PoOrderListDto: {
    /** @description 业务类型（中文名称） */
    cbustype?: string;
    /** @description 采购订单号 */
    cpoid?: string;
    /** @description 主表ID */
    poid?: string;
    /** @description 订单日期 */
    dpodate?: string;
    /** @description 供应商编码 */
    cvencode?: string;
    /** @description 供应商名称 */
    cvenname?: string;
    /** @description 部门编码 */
    cdepcode?: string;
    /** @description 部门名称 */
    cdepname?: string;
    /** @description 人员编码 */
    cpersoncode?: string;
    /** @description 业务员名称 */
    cpersonname?: string;
    /**
     * Format: double
     * @description 汇率
     */
    nflat?: number | null;
    /**
     * Format: double
     * @description 税率
     */
    itaxrate?: number | null;
    /** @description 币种名称 */
    cexch_name?: string;
    /** @description 采购类型编码 */
    cptcode?: string;
    /** @description 采购类型 */
    cptname?: string;
    /** @description 备注 */
    cmemo?: string;
    /**
     * Format: int32
     * @description 审核状态 2：审核通过 0 ：待审核
     */
    iverifystateex?: number | null;
    /** @description 制单人 */
    cmaker?: string;
    /** @description 审核人 */
    cverifier?: string;
    /** @description 制单时间 */
    cmaketime?: string;
    /** @description 审核时间 */
    caudittime?: string;
    /** @description 子表ID */
    id?: string;
    /** @description 存货编码 */
    cinvcode?: string;
    /** @description 存货代码 */
    cinvaddcode?: string;
    /** @description 存货名称 */
    cinvname?: string;
    /** @description 规格型号 */
    cinvstd?: string;
    /** @description 主计量 */
    cinvm_unit?: string;
    /**
     * Format: double
     * @description 数量
     */
    iquantity?: number | null;
    /** @description 计划到货时间 */
    darrivedate?: string;
    /**
     * Format: double
     * @description 原币含税单价
     */
    itaxprice?: number | null;
    /**
     * Format: double
     * @description 原币单价
     */
    iunitprice?: number | null;
    /**
     * Format: double
     * @description 原币金额
     */
    imoney?: number | null;
    /**
     * Format: double
     * @description 原币税额
     */
    itax?: number | null;
    /**
     * Format: double
     * @description 原币价税合计
     */
    isum?: number | null;
    /**
     * Format: double
     * @description 税率
     */
    ipertaxrate?: number | null;
    /** @description 图号 */
    cinvdefine1?: string;
    /** @description 图纸版本 */
    cinvdefine2?: string;
    /** @description 图面材质 */
    cinvdefine3?: string;
    /** @description 行关闭人 */
    cbcloser?: string;
    /** @description 行关闭时间 */
    cbclosetime?: string;
    /**
     * Format: int32
     * @description 供应商接收状态<br/>
     * 0 = UNREVICE，未接收<br/>
     * 1 = PARTREVICE，部分接收<br/>
     * 2 = REVICED，已全部接收<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    reviceState?: number | null;
    /**
     * Format: double
     * @description 供应商接收数量
     */
    reviceQty?: number | null;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[VenBarCodeInfoDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['VenBarCodeInfoDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 供应商自由条码扫码返回信息实体 */
  VenBarCodeInfoDto: {
    /**
     * Format: int32
     * @description 订单ID
     */
    poid?: number | null;
    /** @description 订单号 */
    cpoid?: string;
    /**
     * Format: date-time
     * @description 单据日期
     */
    ddate?: string;
    /** @description 业务类型 */
    cbustype?: string;
    /** @description 供应商编码 */
    cvencode?: string;
    /** @description 供应商名称 */
    cvenname?: string;
    /** @description 采购类型编码 */
    cptcode?: string;
    /** @description 采购类型名称 */
    cptname?: string;
    /** @description 存货编码 */
    cinvcode?: string;
    /** @description 存货代码 */
    cinvaddcode?: string;
    /** @description 存货名称 */
    cinvname?: string;
    /** @description 规格型号 */
    cinvstd?: string;
    /**
     * Format: int32
     * @description 表体ID
     */
    iposid?: number | null;
    /**
     * Format: double
     * @description 订单数量
     */
    iquantity?: number | null;
    /**
     * Format: double
     * @description 条码数量
     */
    qty?: number | null;
    /**
     * Format: double
     * @description 累计到货数量
     */
    iarrqty?: number | null;
    /** @description 批号 */
    cbatch?: string;
    /**
     * Format: double
     * @description 剩余可到货数量
     */
    syarrqty?: number | null;
    /**
     * Format: date-time
     * @description 预计到货日期
     */
    darrivedate?: string;
    /**
     * Format: int32
     * @description 行号
     */
    ivouchrowno?: number | null;
  };
  /** @description 订单到货入库保存请求Dto */
  OrderArrRdSaveReqDto: {
    /** @description 单据日期 */
    ddate?: string;
    /** @description 供应商编码 */
    cvencode: string;
    /** @description 仓库编码-入库 */
    cwhcode: string;
    /** @description 备注 */
    cmemo?: string;
    /** @description 是否采购订单 */
    bpurchase?: boolean;
    /** @description 到货明细 */
    BodyDtos: definitions['OrderArrRdSaveReqDetailDto'][];
  };
  /** @description 订单到货入库保存请求明细Dto */
  OrderArrRdSaveReqDetailDto: {
    /** @description 条码集合 */
    barCodes?: string[];
    /** @description 存货编码 */
    cinvcode?: string;
    /**
     * Format: int32
     * @description 表体ID
     */
    iposid?: number | null;
    /**
     * Format: double
     * @description 订单数量
     */
    iquantity?: number | null;
    /** @description 批号 */
    cbatch?: string;
    /** @description 货位编码 */
    cposition?: string;
  };
  /** @description 扫码查询到货单明细发货明细 */
  QueryArrInfoReqDto: {
    /** @description 到货单单号/条码/ASN单号/ASN条码 */
    BarCode: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[ArrInfoDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['ArrInfoDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 到货单明细实体 */
  ArrInfoDto: {
    /** @description 到货单号 */
    cCode?: string;
    /** @description ASN单号 */
    ASNCode?: string;
    /** @description 订单日期 */
    dDate?: string;
    /** @description 到货单ID */
    Id?: string;
    /** @description 供应商编码 */
    cVenCode?: string;
    /** @description 供应商名称 */
    cVenName?: string;
    /** @description 业务类型 */
    cBusType?: string;
    /** @description 来源订单号（采购/委外） */
    cpocode?: string;
    /** @description 表体信息集合 */
    BodyDtos?: definitions['ArrBodyDto'][];
  };
  /** @description 到货单表体信息实体 */
  ArrBodyDto: {
    /**
     * Format: int32
     * @description 表体ID
     */
    Autoid?: number | null;
    /**
     * Format: int32
     * @description 到货单ID
     */
    ID?: number | null;
    /** @description 仓库编码 */
    cWhCode?: string;
    /** @description 仓库名称 */
    cWhName?: string;
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 存货代码 */
    cInvAddCode?: string;
    /** @description 存货名称 */
    cInvName?: string;
    /**
     * Format: double
     * @description 数量
     */
    iQuantity?: number | null;
    /**
     * Format: double
     * @description 已入库数量
     */
    fValidInQuan?: number | null;
    /**
     * Format: double
     * @description 拒收数量
     */
    fRefQty?: number | null;
    /**
     * Format: double
     * @description 剩余可入库数量
     */
    SyInQuan?: number | null;
    /** @description 批号 */
    cBatch?: string;
    /** @description 是否启用货位 */
    bWhPos?: boolean;
    /** @description 是否启用批次 */
    bInvBatch?: boolean;
    /** @description 来源订单号 */
    cordercode?: string;
  };
  /** @description 采购入库提交参数 */
  PoRdReqDto: {
    /** @description 到货单号（后期可扩展采购订单） */
    cCode: string;
    /** @description 入库日期（不传默认当天） */
    dInDate?: string;
    /** @description 表体集合 */
    Bodys?: definitions['PoRdBodyDto'][];
  };
  /** @description 采购入库单表体信息实体 */
  PoRdBodyDto: {
    /**
     * Format: int32
     * @description 表体ID
     */
    AutoId?: number | null;
    /** @description 存货编码 */
    cInvCode: string;
    /**
     * Format: double
     * @description 入库数量
     */
    iQuantity?: number | null;
    /** @description 批号 */
    cBatch?: string;
    /** @description 仓库编码 */
    cWhCode: string;
    /** @description 货位编码 */
    cPosCode?: string;
    /** @description 一品多点 */
    cFree1?: string;
  };
  /** @description 工艺路线保存参数 */
  PRoutingSaveReqDto: {
    /** @description ID修改需传 */
    Id?: string;
    /** @description 工艺路线类型编码（来源数据字典） */
    RoutingTypeCode: string;
    /** @description 料品编码 */
    cInvCode: string;
    /**
     * Format: int32
     * @description 版本号
     */
    Version?: number | null;
    /** @description 版本说明 */
    VersionDesc?: string;
    /** @description 备注 */
    Remark?: string;
    /** @description 是否启用 */
    IsEnabled?: boolean;
    /** @description 子表集合 */
    DetailDtos?: definitions['PRoutingDetailBaseDto'][];
  };
  /** @description 工艺路线子表基础实体 */
  PRoutingDetailBaseDto: {
    /** @description 主表ID */
    MainId?: string;
    /**
     * Format: int32
     * @description 工序组行号
     */
    OpGroupSeq?: number | null;
    /** @description 工序组ID */
    OpGroupId: string;
    /** @description 工序组编码 */
    OpGroupCode: string;
    /** @description 工序组名称 */
    OpGroupName: string;
    /** @description 是否末道工序组 */
    BLastFlag?: boolean;
    /** @description 是否首道工序组 */
    BFirstFlag?: boolean;
    /**
     * Format: int32
     * @description 工序行号
     */
    OpSeq?: number | null;
    /** @description 工序ID */
    OpId?: string;
    /** @description 工序编码 */
    OpCode?: string;
    /** @description 工序名称 */
    OpName?: string;
    /** @description 模具ID */
    MoldId?: string;
    /** @description 模具名称 */
    MoldName?: string;
    /** @description 设备ID */
    DeviceId?: string;
    /** @description 设备名称 */
    DeviceName?: string;
    /** @description 备注 */
    DRemark?: string;
  };
  /** @description 查询工艺路线明细 */
  QueryPRoutingInfoReqDto: {
    /** @description 工艺路线ID */
    Id: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[PRoutingInfoDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['PRoutingInfoDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 工艺路线明细实体 */
  PRoutingInfoDto: {
    /** @description 工艺路线ID */
    Id?: string;
    /** @description 料品代码 */
    cInvAddCode?: string;
    /** @description 料品名称 */
    cInvName?: string;
    /** @description 料品规格 */
    cInvStd?: string;
    /** @description 计量单位编码 */
    cComUnitCode?: string;
    /** @description 计量单位名称 */
    cComUnitName?: string;
    /** @description 工艺路线类型 */
    RoutingType?: string;
    /** @description 审核意见 */
    AuditRmind?: string;
    /**
     * Format: int32
     * @description 审核状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = PENDING，待审核<br/>
     * 2 = AUDITED，已审核<br/>
     * 3 = REJECT，驳回
     * @enum {number}
     */
    AuditState?: number | null;
    /** @description 审核人ID */
    AuditorId?: string;
    /** @description 审核人名称 */
    AuditorName?: string;
    /**
     * Format: date-time
     * @description 审核时间
     */
    AuditTime?: string;
    /** @description 创建人 */
    CreatedUserName?: string;
    /**
     * Format: date-time
     * @description 创建时间
     */
    CreatedTime?: string;
    /** @description 工艺路线类型编码（来源数据字典） */
    RoutingTypeCode: string;
    /** @description 料品编码 */
    cInvCode: string;
    /**
     * Format: int32
     * @description 版本号
     */
    Version?: number | null;
    /** @description 版本说明 */
    VersionDesc?: string;
    /** @description 备注 */
    Remark?: string;
    /** @description 是否启用 */
    IsEnabled?: boolean;
    /** @description 子表集合 */
    DetailDtos?: definitions['PRoutingDetailBaseDto'][];
  };
  /** @description 查询工艺路线分页数据参数 */
  QueryPRoutingPageReqDto: {
    /** @description 料品编码开始 */
    cInvCodeStart?: string;
    /** @description 料品编码结束 */
    cInvCodeEnd?: string;
    /**
     * Format: int32
     * @description 版本号开始
     */
    VersionStart?: number | null;
    /**
     * Format: int32
     * @description 版本号结束
     */
    VersionEnd?: number | null;
    /**
     * Format: int32
     * @description 审核状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = PENDING，待审核<br/>
     * 2 = AUDITED，已审核<br/>
     * 3 = REJECT，驳回
     * @enum {number}
     */
    AuditState?: number | null;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[PRoutingMainDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['PRoutingMainDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 工艺路线主表实体 */
  PRoutingMainDto: {
    /** @description 工艺路线ID */
    Id?: string;
    /** @description 工艺路线类型编码（来源数据字典） */
    RoutingTypeCode: string;
    /** @description 料品编码 */
    cInvCode: string;
    /**
     * Format: int32
     * @description 版本号
     */
    Version?: number | null;
    /** @description 版本说明 */
    VersionDesc?: string;
    /** @description 备注 */
    Remark?: string;
    /** @description 料品代码 */
    cInvAddCode?: string;
    /** @description 料品名称 */
    cInvName?: string;
    /** @description 料品规格 */
    cInvStd?: string;
    /** @description 计量单位编码 */
    cComUnitCode?: string;
    /** @description 计量单位名称 */
    cComUnitName?: string;
    /** @description 工艺路线类型 */
    RoutingType?: string;
    /**
     * Format: int32
     * @description 审核状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = PENDING，待审核<br/>
     * 2 = AUDITED，已审核<br/>
     * 3 = REJECT，驳回
     * @enum {number}
     */
    AuditState?: number | null;
  };
  /** @description 工艺路线审核参数 */
  PRoutingAuditReqDto: {
    /** @description ID */
    Id: string;
    /**
     * Format: int32
     * @description 审核状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = PENDING，待审核<br/>
     * 2 = AUDITED，已审核<br/>
     * 3 = REJECT，驳回
     * @enum {number}
     */
    AuditState: number | null;
    /** @description 审核意见 */
    AuditRmind?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[PRoutingSelectDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['PRoutingSelectDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 工艺路线下拉列表 */
  PRoutingSelectDto: {
    /** @description 工艺路线ID */
    Id?: string;
    /** @description 工艺路线类型编码（来源数据字典） */
    RoutingTypeCode?: string;
    /** @description 存货编码 */
    cInvCode?: string;
    /**
     * Format: int32
     * @description 版本号
     */
    Version?: number | null;
    /** @description 版本说明 */
    VersionDesc?: string;
    /** @description 工艺路线类型 */
    RoutingType?: string;
  };
  /** @description APP升级参数 */
  AppUpdateReqDto: {
    /** @description APP客户端版本号 */
    Version: string;
    /** @description appID */
    AppId?: string;
    /** @description 应用名称 */
    Name?: string;
    /** @description 版本编码 */
    VersionCode?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[AppUpdateResDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['AppUpdateResDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description APP升级接口返回实体 */
  AppUpdateResDto: {
    /** @description 当前版本号 */
    Version?: string;
    /** @description 是否需要升级 */
    BNeedUpdate?: boolean;
    /** @description 升级说明 */
    UpdateDesc?: string;
    /** @description 整包升级地址 */
    PkgSrc?: string;
    /** @description WGT升级地址 */
    WgtSrc?: string;
    /** @description APP更新方式 */
    UpdateType?: string;
  };
  /** @description 检验指标保存参数Dto */
  QcIndexSaveReqDto: {
    /**
     * Format: int64
     * @description ID 修改需传
     */
    Id?: string;
    /** @description 编码 */
    IndexCode?: string;
    /** @description 名称 */
    IndexName?: string;
    /**
     * Format: int32
     * @description 重要程度<br/>
     * 0 = GENERAL，一般<br/>
     * 1 = IMPORTANT，重要<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    Importance?: number | null;
    /**
     * Format: int32
     * @description 指标类型<br/>
     * 0 = DESC，描述类<br/>
     * 1 = NUMERIC，数值类<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    IndexType?: number | null;
    /**
     * Format: int64
     * @description 所属检验项目ID
     */
    ItemId?: string;
    /** @description 单位 */
    UnitDesc?: string;
    /** @description 是否为破坏性指标 */
    BDestructive?: boolean;
    /** @description 备注/说明 */
    Remark?: string;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LLPJsonResult[QcIndexInfoDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['QcIndexInfoDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 检验指标明细Dto */
  QcIndexInfoDto: {
    ItemCode?: string;
    /** @description 项目名称 */
    ItemName?: string;
    /** @description 重要程度 */
    ImportanceDesc?: string;
    /** @description 指标类型 */
    IndexTypeDesc?: string;
    /** @description 破坏性指标 */
    BDestructiveDesc?: string;
    /** @description 创建人 */
    CreatedUserName?: string;
    /**
     * Format: date-time
     * @description 创建时间
     */
    CreatedTime?: string;
    /**
     * Format: int64
     * @description ID 修改需传
     */
    Id?: string;
    /** @description 编码 */
    IndexCode?: string;
    /** @description 名称 */
    IndexName?: string;
    /**
     * Format: int32
     * @description 重要程度<br/>
     * 0 = GENERAL，一般<br/>
     * 1 = IMPORTANT，重要<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    Importance?: number | null;
    /**
     * Format: int32
     * @description 指标类型<br/>
     * 0 = DESC，描述类<br/>
     * 1 = NUMERIC，数值类<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    IndexType?: number | null;
    /**
     * Format: int64
     * @description 所属检验项目ID
     */
    ItemId?: string;
    /** @description 单位 */
    UnitDesc?: string;
    /** @description 是否为破坏性指标 */
    BDestructive?: boolean;
    /** @description 备注/说明 */
    Remark?: string;
  };
  /** @description 查询调度方案列表 */
  QueryQcInspectDelpoyPageReqDto: {
    /**
     * Format: int32
     * @description 时间单位<br/>
     * 1 = DAY，天<br/>
     * 2 = HOUR，小时<br/>
     * 3 = MINUTE，分钟<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    TimeUnit?: number | null;
    /**
     * Format: int32
     * @description 结束方式<br/>
     * 1 = REPEAT，重复执行<br/>
     * 2 = PERMANENT，永久执行<br/>
     * 3 = ONCE，执行一次<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    StopWay?: number | null;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LLPJsonResult[QcInspectDeployListDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['QcInspectDeployListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 巡检调度方案列表返回实体 */
  QcInspectDeployListDto: {
    /**
     * Format: int32
     * @description 执行次数
     */
    ExecNum?: number | null;
    /** @description 班组名称 */
    TeamName?: string;
    /**
     * Format: date-time
     * @description 最新检验时间
     */
    LastInspectDate?: string;
    /**
     * Format: date-time
     * @description 制单时间
     */
    CreatedTime?: string;
    /** @description 制单人 */
    CreatedUserName?: string;
    /** @description 修改者名称 */
    UpdatedUserName?: string;
    /**
     * Format: date-time
     * @description 更新时间
     */
    UpdatedTime?: string;
    /** @description 工作时间集合 */
    WorkTimes?: string[];
    /** @description 修改时使用的ID */
    Id?: string;
    /** @description 调度方案编码 */
    DeployCode?: string;
    /** @description 调度方案名称 */
    DeployName: string;
    /**
     * Format: date-time
     * @description 首次巡检时间
     */
    FirstInspectDate?: string;
    /**
     * Format: int32
     * @description 巡检频率
     */
    Frequency?: number | null;
    /**
     * Format: int32
     * @description 时间单位<br/>
     * 1 = DAY，天<br/>
     * 2 = HOUR，小时<br/>
     * 3 = MINUTE，分钟<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    TimeUnit?: number | null;
    /** @description 检验班组ID */
    TeamId: string;
    /**
     * Format: int32
     * @description 结束方式<br/>
     * 1 = REPEAT，重复执行<br/>
     * 2 = PERMANENT，永久执行<br/>
     * 3 = ONCE，执行一次<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    StopWay?: number | null;
    /** @description 结束时间 */
    StopTime?: string;
    /** @description 工作时间段 08:00-20:00 这种样式 多个|分割 不维护就是24小时 */
    WorkTime?: string;
  };
  /** @description 调度方案保存参数实体 */
  QcInspectDeploySaveReqDto: {
    /** @description 修改时使用的ID */
    Id?: string;
    /** @description 调度方案编码 */
    DeployCode?: string;
    /** @description 调度方案名称 */
    DeployName: string;
    /**
     * Format: date-time
     * @description 首次巡检时间
     */
    FirstInspectDate?: string;
    /**
     * Format: int32
     * @description 巡检频率
     */
    Frequency?: number | null;
    /**
     * Format: int32
     * @description 时间单位<br/>
     * 1 = DAY，天<br/>
     * 2 = HOUR，小时<br/>
     * 3 = MINUTE，分钟<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    TimeUnit?: number | null;
    /** @description 检验班组ID */
    TeamId: string;
    /**
     * Format: int32
     * @description 结束方式<br/>
     * 1 = REPEAT，重复执行<br/>
     * 2 = PERMANENT，永久执行<br/>
     * 3 = ONCE，执行一次<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    StopWay?: number | null;
    /** @description 结束时间 */
    StopTime?: string;
    /** @description 工作时间段 08:00-20:00 这种样式 多个|分割 不维护就是24小时 */
    WorkTime?: string;
  };
  /** @description 巡检任务列表查询参数 */
  QueryQcInspectTaskListReqDto: {
    /**
     * Format: int32
     * @description 任务状态<br/>
     * 1 = PENGING，待检验<br/>
     * 2 = FINLISH，检验完成<br/>
     * 3 = CLOSE，关闭<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    InspectState?: number | null;
    /** @description 质检班组ID */
    TeamId?: string;
    /** @description 调度方案ID */
    DeployId?: string;
    /** @description 是否只查询登陆人所在班组的检验任务 */
    BQueryLoginTeam?: boolean;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LLPJsonResult[QcInspectTaskListDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['QcInspectTaskListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 巡检任务列表实体 */
  QcInspectTaskListDto: {
    /** @description 任务ID */
    Id?: string;
    /** @description 调度方案ID 可为空支持空白新增 */
    DeployId?: string;
    /** @description 调度方案编码 */
    DeployCode?: string;
    /** @description 调度方案名称 */
    DeployName?: string;
    /**
     * Format: int32
     * @description 巡检频率
     */
    Frequency?: number | null;
    /**
     * Format: int32
     * @description 时间单位<br/>
     * 1 = DAY，天<br/>
     * 2 = HOUR，小时<br/>
     * 3 = MINUTE，分钟<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    TimeUnit?: number | null;
    /**
     * Format: int32
     * @description 结束方式<br/>
     * 1 = REPEAT，重复执行<br/>
     * 2 = PERMANENT，永久执行<br/>
     * 3 = ONCE，执行一次<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    StopWay?: number | null;
    /** @description 任务编码 */
    TaskCode?: string;
    /** @description 检验班组ID */
    TeamId?: string;
    /** @description 检验班组名称 */
    TeamName?: string;
    /**
     * Format: date-time
     * @description 计划检验时间
     */
    PlanInspectTime?: string;
    /**
     * Format: date-time
     * @description 实际检验时间
     */
    RealInspectTime?: string;
    /** @description 检验人员 */
    InspectPerson?: string;
    /** @description 备注说明 */
    Remark?: string;
    /**
     * Format: int32
     * @description 检验状态<br/>
     * 1 = PENGING，待检验<br/>
     * 2 = FINLISH，检验完成<br/>
     * 3 = CLOSE，关闭<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    InspectState?: number | null;
    /** @description 状态说明 */
    InspectStateDesc?: string;
  };
  /** @description 巡检任务保存参数 */
  QcInspectTaskSaveReqDto: {
    /** @description 修改时需传 */
    Id?: string;
    /** @description 班组ID */
    TeamId: string;
    /**
     * Format: date-time
     * @description 计划检验时间-默认当前时间
     */
    PlanInspectTime?: string;
    /** @description 备注说明 */
    Remark?: string;
  };
  /** @description 巡检任务关闭 */
  QcInspectTaskCloseReqDto: {
    /** @description ID */
    Id: string;
    /** @description 关闭原因 */
    Remark?: string;
  };
  /** @description 巡检完成请求参数 */
  QcIspectFinlishReqDto: {
    /** @description 任务ID */
    TaskId: string;
    /** @description 检验人员 */
    InspectPerson: string;
    /** @description 备注说明 */
    Remark?: string;
    /** @description 巡检的条码集合 */
    BarCodeDtos?: definitions['QcInspectBarCodeDto'][];
  };
  /** @description 检验条码明细实体 */
  QcInspectBarCodeDto: {
    /** @description 流转卡条码 */
    BarCode: string;
    /** @description 计划ID */
    PlanId: string;
    /** @description 巡检工序ID */
    OpId: string;
    /**
     * Format: double
     * @description 良品数量
     */
    QualifiedQty?: number | null;
    /**
     * Format: double
     * @description 不良数量
     */
    ScrapQty?: number | null;
    /** @description 不良记录集合 */
    ScrapDtos?: definitions['MoRoutingBillScrapDto'][];
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[MomPlanFlowCardInfoDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['MomPlanFlowCardInfoDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 流转卡明细信息实体 */
  MomPlanFlowCardInfoDto: {
    /** @description 计划ID */
    PlanId?: string;
    /** @description 计划单号 */
    PlanCode?: string;
    /** @description 生产订单号 */
    MoCode?: string;
    /**
     * Format: int32
     * @description 生产订单行号
     */
    SortSeq?: number | null;
    /** @description 存货编码 */
    InvCode?: string;
    /** @description 料品代码 */
    cInvAddCode?: string;
    /** @description 料品名称 */
    cInvName?: string;
    /** @description 料品规格 */
    cInvStd?: string;
    /** @description 计量单位编码 */
    cComUnitCode?: string;
    /** @description 计量单位名称 */
    cComUnitName?: string;
    /**
     * Format: double
     * @description 下达数量(必须大于等于生产数量)
     */
    IssueQty?: number | null;
    /** @description 开工日期 */
    StartDate?: string;
    /** @description 完工日期 */
    DueDate?: string;
    /** @description 生产部门编码 */
    mDepCode?: string;
    /** @description 生产部门 */
    mDepName?: string;
    /**
     * Format: double
     * @description 条码数量
     */
    CodeQty?: number | null;
    /** @description 工序列表 */
    OpList?: definitions['MomRoutingDetailBaseDto'][];
  };
  /** @description 查询巡检任务对应的巡检流转卡列表 */
  QueryQcInspectBarCodeListReqDto: {
    /** @description 任务Id */
    TaskId?: string;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LLPJsonResult[QcInspectBarCodeInfoDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['QcInspectBarCodeInfoDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 巡检任务条码明细 */
  QcInspectBarCodeInfoDto: {
    /** @description 任务ID */
    TaskId?: string;
    /** @description 任务编号 */
    TaskCode?: string;
    /** @description 检验人 */
    InspectPerson?: string;
    /** @description 备注 */
    Remark?: string;
    /** @description 班组ID */
    TeamId?: string;
    /** @description 班组名称 */
    TeamName?: string;
    /** @description 计划单号 */
    PlanCode?: string;
    /** @description 生产订单号 */
    MoCode?: string;
    /**
     * Format: int32
     * @description 生产订单行号
     */
    SortSeq?: number | null;
    /** @description 存货编码 */
    InvCode?: string;
    /** @description 料品代码 */
    cInvAddCode?: string;
    /** @description 料品名称 */
    cInvName?: string;
    /** @description 料品规格 */
    cInvStd?: string;
    /** @description 计量单位编码 */
    cComUnitCode?: string;
    /** @description 计量单位名称 */
    cComUnitName?: string;
    /**
     * Format: double
     * @description 下达数量(必须大于等于生产数量)
     */
    IssueQty?: number | null;
    /** @description 开工日期 */
    StartDate?: string;
    /** @description 完工日期 */
    DueDate?: string;
    /** @description 生产部门编码 */
    mDepCode?: string;
    /** @description 生产部门 */
    mDepName?: string;
    /**
     * Format: double
     * @description 条码数量
     */
    CodeQty?: number | null;
    /**
     * Format: int32
     * @description 工序行号
     */
    OpSeq?: number | null;
    /** @description 工序名称 */
    OpName?: string;
    /** @description 流转卡条码 */
    BarCode: string;
    /** @description 计划ID */
    PlanId: string;
    /** @description 巡检工序ID */
    OpId: string;
    /**
     * Format: double
     * @description 良品数量
     */
    QualifiedQty?: number | null;
    /**
     * Format: double
     * @description 不良数量
     */
    ScrapQty?: number | null;
    /** @description 不良记录集合 */
    ScrapDtos?: definitions['MoRoutingBillScrapDto'][];
  };
  /** @description 建议你项目保存参数DTO */
  QcItemSaveReqDto: {
    /**
     * Format: int64
     * @description 主键ID 修改时传
     */
    Id?: string;
    /** @description 编码 */
    ItemCode: string;
    /** @description 名称 */
    ItemName: string;
    /** @description 备注/说明 */
    Remark?: string;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LLPJsonResult[QcItemInfoDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['QcItemInfoDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 检验项目信息DTO */
  QcItemInfoDto: {
    /** @description 创建人 */
    CreatedUserName?: string;
    /**
     * Format: date-time
     * @description 创建时间
     */
    CreatedTime?: string;
    /**
     * Format: int64
     * @description 主键ID 修改时传
     */
    Id?: string;
    /** @description 编码 */
    ItemCode: string;
    /** @description 名称 */
    ItemName: string;
    /** @description 备注/说明 */
    Remark?: string;
  };
  /** @description 查询模具状态一览表 */
  QueryMoldReportReqDto: {
    /**
     * Format: int32
     * @description 模具状态<br/>
     * 1 = COLLECT，领用<br/>
     * 2 = RETURN，归还<br/>
     * 3 = WAITCOLLECT，待领用<br/>
     * 4 = UNASSIGNED，未分配<br/>
     * -1 = ALL，全部
     * @enum {number}
     */
    CollectState?: number | null;
    /** @description 车间ID */
    WorkShopId?: string;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[MoldReportDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['MoldReportDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 模具状态一览表返回实体 */
  MoldReportDto: {
    /** @description 模具ID */
    MoldId?: string;
    /** @description 模具名称 */
    MoldName?: string;
    /** @description 模具编码 */
    MoldCode?: string;
    /** @description 模号 */
    Model?: string;
    /** @description 模具类型编码 */
    MoldTypeCode?: string;
    /** @description 模具类型 */
    MoldType?: string;
    /**
     * Format: int32
     * @description 模具状态<br/>
     * 1 = COLLECT，领用<br/>
     * 2 = RETURN，归还<br/>
     * 3 = WAITCOLLECT，待领用<br/>
     * 4 = UNASSIGNED，未分配<br/>
     * -1 = ALL，全部
     * @enum {number}
     */
    CollectState?: number | null;
    /** @description 生产订单号 */
    MoCode?: string;
    /** @description 使用班组ID */
    TeamId?: string;
    /** @description 使用班组名称 */
    TeamName?: string;
    /** @description 产品编码 */
    cInvCode?: string;
    /** @description 产品名称 */
    cInvName?: string;
    /** @description 规格型号 */
    cInvStd?: string;
    /** @description 存货代码 */
    cInvAddCode?: string;
    /** @description 计量单位编码 */
    cComUnitCode?: string;
    /** @description 计量单位名称 */
    cComUnitName?: string;
    /** @description 所做工序ID */
    OpId?: string;
    /** @description 所做工序名称 */
    OpName?: string;
    /** @description 领用时间 */
    CollectTime?: string;
    /** @description 归还时间 */
    ReturnTime?: string;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[DeviceReportDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['DeviceReportDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 设备状态一览表返回实体 */
  DeviceReportDto: {
    /** @description 设备ID */
    DevcieId?: string;
    /** @description 设备编码 */
    DeviceCode?: string;
    /** @description 设备名称 */
    DeviceName?: string;
    /** @description 型号 */
    Model?: string;
    /** @description 设备类型编码 */
    DeviceTypeCode?: string;
    /** @description 设备类型 */
    DeviceType?: string;
    /**
     * Format: int32
     * @description 工单状态<br/>
     * 1 = COLLECT，领用<br/>
     * 2 = RETURN，归还<br/>
     * 3 = WAITCOLLECT，待领用<br/>
     * 4 = UNASSIGNED，未分配<br/>
     * -1 = ALL，全部
     * @enum {number}
     */
    CollectState?: number | null;
    /**
     * Format: int32
     * @description 设备状态<br/>
     * 0 = Normal，正常<br/>
     * 1 = Repair，维修中<br/>
     * 2 = Maintenance，保养中<br/>
     * 3 = Scrap，报废<br/>
     * 4 = InUse，在用<br/>
     * 5 = WaitRepair，待维修<br/>
     * 6 = WaitMaintenance，待保养<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    DeviceState?: number | null;
    /** @description 生产订单号 */
    MoCode?: string;
    /** @description 使用班组ID */
    TeamId?: string;
    /** @description 使用班组名称 */
    TeamName?: string;
    /** @description 产品编码 */
    cInvCode?: string;
    /** @description 产品名称 */
    cInvName?: string;
    /** @description 规格型号 */
    cInvStd?: string;
    /** @description 存货代码 */
    cInvAddCode?: string;
    /** @description 计量单位编码 */
    cComUnitCode?: string;
    /** @description 计量单位名称 */
    cComUnitName?: string;
    /** @description 所做工序ID */
    OpId?: string;
    /** @description 所做工序名称 */
    OpName?: string;
    /** @description 领用时间 */
    CollectTime?: string;
    /** @description 归还时间 */
    ReturnTime?: string;
  };
  /** @description 查询生产订单工序在制报表 */
  QueryMoOpProcessReqDto: {
    /** @description 开始日期 */
    StartDate?: string;
    /** @description 结束日期 */
    EndDate?: string;
    /** @description 生产订单号 */
    MoCode?: string;
    /** @description 计划单号 */
    PlanCode?: string;
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 班组ID */
    TeamId?: string;
    /** @description 工序组ID */
    OpGroupId?: string;
    /** @description 部门编码 */
    mDepCode?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[MoOpReportDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['MoOpReportDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 工序在制报表返回实体 */
  MoOpReportDto: {
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 存货名称 */
    cInvName?: string;
    /** @description 规格型号 */
    cInvStd?: string;
    /** @description 存货代码 */
    cInvAddCode?: string;
    /** @description 计量单位编码 */
    cComUnitCode?: string;
    /** @description 计量单位名称 */
    cComUnitName?: string;
    /**
     * Format: double
     * @description 成品库存
     */
    StQty?: number | null;
    /**
     * Format: double
     * @description 生产订单数量
     */
    MoQty?: number | null;
    /**
     * Format: double
     * @description 计划下达数量
     */
    IssQty?: number | null;
    /**
     * Format: double
     * @description 已下达数量
     */
    ShiftQty?: number | null;
    /**
     * Format: double
     * @description 在制总数
     */
    OpQty?: number | null;
    /** @description 计划ID集合 */
    PlanIds?: string[];
    /** @description 工序在制情况集合 */
    OpDtos?: definitions['OpInfoQtyDto'][];
  };
  /** @description 工序在制数量实体 */
  OpInfoQtyDto: {
    /**
     * Format: double
     * @description 已完工数量
     */
    CompleteQty?: number | null;
    /** @description 工序代码 */
    OpId?: string;
    /** @description 工序名称 */
    OpName?: string;
    /**
     * Format: double
     * @description 在制数量
     */
    Qty?: number | null;
    /**
     * Format: double
     * @description 报废数量
     */
    ScrapQty?: number | null;
  };
  /** @description 查询在制行子件领料情况 */
  QueryMoPlanAllcatesReqDto: {
    /** @description 计划ID集合 */
    PlanIds: string[];
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[MoAllcateCollectDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['MoAllcateCollectDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 子件领用明细实体 */
  MoAllcateCollectDto: {
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 存货名称 */
    cInvName?: string;
    /** @description 规格型号 */
    cInvStd?: string;
    /** @description 存货代码 */
    cInvAddCode?: string;
    /** @description 计量单位编码 */
    cComUnitCode?: string;
    /** @description 计量单位名称 */
    cComUnitName?: string;
    /**
     * Format: double
     * @description 现存量
     */
    StQty?: number | null;
    /**
     * Format: double
     * @description 应领数量
     */
    IssQty?: number | null;
    /**
     * Format: double
     * @description 已领数量
     */
    IssedQty?: number | null;
    /**
     * Format: double
     * @description 基础用量分子
     */
    BaseQtyN?: number | null;
    /**
     * Format: double
     * @description 基础用量分母
     */
    BaseQtyD?: number | null;
  };
  /** @description 查询生产计划一览表 */
  QueryMomPlanReportReqDto: {
    /** @description 设备ID */
    DevcieId?: string;
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 生产订单号 */
    MoCode?: string;
    /** @description 生产部门编码 */
    mDepCode?: string;
    /** @description 开始日期 */
    BeginDate?: string;
    /** @description 结束日期 */
    EndDate?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[MomPlanReportDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['MomPlanReportDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 生产计划一览表返回实体 */
  MomPlanReportDto: {
    /** @description 生产部门编码 */
    mDepCode?: string;
    /** @description 生产部门名称 */
    mDepName?: string;
    /** @description 设备ID */
    DeviceId?: string;
    /** @description 设备名称 */
    DeviceName?: string;
    /** @description 设备编码 */
    DeviceCode?: string;
    /** @description 存货编码 */
    InvCode?: string;
    /** @description 存货名称 */
    InvName?: string;
    /** @description 存货代码 */
    InvAddCode?: string;
    /** @description 规格型号 */
    InvStd?: string;
    /** @description 计量单位编码 */
    cComUnitCode?: string;
    /** @description 计量单位名称 */
    cComUnitName?: string;
    /**
     * Format: double
     * @description 计划下达数量
     */
    IssueQty?: number | null;
    /**
     * Format: double
     * @description 完工数量（取入库数量）
     */
    ComQty?: number | null;
    /** @description 开工日期 */
    StartDate?: string;
    /** @description 完工日期 */
    DueDate?: string;
    /** @description 实际开工时间 */
    RealStartTime?: string;
    /** @description 实际完工时间 */
    RealDueTime?: string;
    /**
     * Format: double
     * @description 生产耗时(小时)
     */
    TotalWHours?: number | null;
    /** @description 生产订单号 */
    MoCode?: string;
    /** @description 完工后下一生产产品编码 */
    NextInvCode?: string;
    /** @description 完工后下一生产产品名称 */
    NextInvName?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[SaleOrderDisInfoDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['SaleOrderDisInfoDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 销售订单发货明细实体 */
  SaleOrderDisInfoDto: {
    /**
     * Format: int32
     * @description 主表OD
     */
    id?: number | null;
    /** @description 订单号 */
    csocode?: string;
    /** @description 客户编码 */
    ccuscode?: string;
    /** @description 销售类型编码 */
    cstcode?: string;
    /** @description 销售类型名称 */
    cstname?: string;
    /** @description 业务类型 */
    cbustype?: string;
    /** @description 客户简称 */
    ccusabbname?: string;
    /** @description 客户名称 */
    ccusname?: string;
    /**
     * Format: date-time
     * @description 预计发货日期
     */
    dpredatebt?: string;
    /**
     * Format: date-time
     * @description 单据日期
     */
    ddate?: string;
    /** @description 部门编码 */
    cdepcode?: string;
    /** @description 部门名称 */
    cdepname?: string;
    /** @description 表体 */
    bodys?: definitions['SaleOrderDisBodyDto'][];
  };
  /** @description 销售订单发货明细实体 */
  SaleOrderDisBodyDto: {
    /**
     * Format: int32
     * @description 主表ID
     */
    id?: number | null;
    /** @description 存货编码 */
    cinvcode?: string;
    /** @description 存货代码 */
    cinvaddcode?: string;
    /** @description 存货名称 */
    cinvname?: string;
    /** @description 规格型号 */
    cinvstd?: string;
    /** @description 主计量单位 */
    cinvm_unit?: string;
    /** @description 辅计量单位 */
    cinva_unit?: string;
    /** @description 计量单位分组编码 */
    cgroupcode?: string;
    /** @description 单位编码 */
    cunitid?: string;
    /**
     * Format: date-time
     * @description 预发货日期
     */
    dpredate?: string;
    /**
     * Format: double
     * @description 换算率
     */
    iinvexchrate?: number | null;
    /**
     * Format: int32
     * @description 子表ID
     */
    isosid?: number | null;
    /**
     * Format: double
     * @description 数量
     */
    iquantity?: number | null;
    /**
     * Format: double
     * @description 累计已发货数量
     */
    ifhquantity?: number | null;
    /**
     * Format: double
     * @description 剩余可发货数量
     */
    syfhquantity?: number | null;
    /**
     * Format: int32
     * @description 行号
     */
    irowno?: number | null;
    /**
     * Format: date-time
     * @description 预完工日期
     */
    dpremodate?: string;
    /** @description 是否启用批次管理 */
    binvbatch?: boolean;
  };
  /** @description 销售订单发货出库保存请求Dto */
  SaleOrderDisOutSaveReqDto: {
    /** @description 发货出库单据日期 */
    ddate?: string;
    /** @description 发货出库明细 */
    Bodys: definitions['SaleOrderDisOutSaveReqDetailDto'][];
  };
  /** @description 销售订单发货出库保存请求明细Dto */
  SaleOrderDisOutSaveReqDetailDto: {
    /**
     * Format: int32
     * @description 子表ID
     */
    isosid?: number | null;
    /**
     * Format: int32
     * @description 主表ID
     */
    id?: number | null;
    /** @description 出库仓库编码 */
    cwhcode: string;
    /** @description 存货编码 */
    cinvcode?: string;
    /**
     * Format: double
     * @description 数量
     */
    iquantity?: number | null;
    /** @description 货位编码 */
    cposition?: string;
    /** @description 批号 */
    cbatch?: string;
  };
  /** @description 查询发货单明细参数实体 */
  QueryDispatchInfoReqDto: {
    /** @description 发货单条码或单号 */
    BarCode?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[DispatchHeadDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['DispatchHeadDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 发货单表头信息 */
  DispatchHeadDto: {
    /** @description 发货单号 */
    cDLCode?: string;
    /** @description 发货日期 */
    dDate?: string;
    /**
     * Format: int32
     * @description 发货单ID
     */
    DLID?: number | null;
    /** @description 客户编码 */
    cCusCode?: string;
    /** @description 客户名称 */
    cCusName?: string;
    /** @description 表体信息 */
    BodyDtos?: definitions['DispatchBodyDto'][];
  };
  /** @description 发货单表体信息 */
  DispatchBodyDto: {
    /**
     * Format: int32
     * @description 表体ID
     */
    AutoId?: number | null;
    /**
     * Format: int32
     * @description 发货单ID
     */
    DLID?: number | null;
    /** @description 预出库仓库编码 */
    cWhCode?: string;
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 存货代码 */
    cInvAddCode?: string;
    /** @description 存货名称 */
    cInvName?: string;
    /**
     * Format: double
     * @description 发货单数量
     */
    iQuantity?: number | null;
    /**
     * Format: double
     * @description 剩余可出库数量
     */
    SyOutQty?: number | null;
    /** @description 货位编码 */
    cPosition?: string;
    /** @description 批号 */
    cBatch?: string;
    /** @description 是否启用货位 */
    bWhPos?: boolean;
    /** @description 是否启用批次 */
    bInvBatch?: boolean;
  };
  /** @description 销售出库单保存参数 */
  SaleOutSaveReqDto: {
    /** @description 销售出库存货信息集合 */
    InputDtos: definitions['SaleOutInputDto'][];
  };
  /** @description 出库参数信息实体 */
  SaleOutInputDto: {
    /**
     * Format: int32
     * @description 表体ID
     */
    AutoId?: number | null;
    /**
     * Format: int32
     * @description 发货单ID
     */
    DLID?: number | null;
    /** @description 出库仓库编码 */
    cWhCode: string;
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 存货名称 */
    cInvName?: string;
    /**
     * Format: double
     * @description 出库数量
     */
    iQuantity?: number | null;
    /** @description 货位编码 */
    cPosition?: string;
    /** @description 批号 */
    cBatch?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[NoCheckSaleOutListDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['NoCheckSaleOutListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 未审核的销售出库单列表实体 */
  NoCheckSaleOutListDto: {
    /**
     * Format: int32
     * @description 销售出库单ID
     */
    Id?: number | null;
    /** @description 单号 */
    cCode?: string;
    /** @description 单据日期 */
    dDate?: string;
    /** @description 出库仓库编码 */
    cWhCode?: string;
    /** @description 出库仓库名称 */
    cWhName?: string;
    /** @description 客户编码 */
    cCusCode?: string;
    /** @description 客户名称 */
    cCusName?: string;
    /** @description 来源单号（发货单号） */
    cBusCode?: string;
    /** @description 订单来源 */
    cSource?: string;
    /** @description 单据条码 */
    csysbarcode?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[SaleOutInfoDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['SaleOutInfoDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 销售出库单明细返回实体 */
  SaleOutInfoDto: {
    /** @description 出库单号 */
    cCode?: string;
    /**
     * Format: int32
     * @description 出库单主表ID
     */
    Id?: number | null;
    /** @description 存货名称 */
    cInvName?: string;
    /** @description 存货代码 */
    cInvAddCode?: string;
    /** @description 规格型号 */
    cInvStd?: string;
    /** @description 发货单号 */
    cDLCode?: string;
    /** @description 仓库编码 */
    cWhCode?: string;
    /** @description 仓库名称 */
    cWhName?: string;
    /** @description 是否启用货位 */
    bWhPos?: boolean;
    /** @description 是否启用批次 */
    bInvBatch?: boolean;
    /**
     * Format: int32
     * @description 表体ID
     */
    AutoId?: number | null;
    /** @description 存货编码 */
    cInvCode?: string;
    /**
     * Format: double
     * @description 出库数量
     */
    iQuantity?: number | null;
    /** @description 货位编码 */
    cPosition?: string;
    /** @description 批号 */
    cBatch?: string;
  };
  /** @description 排班日历保存请求Dto */
  ShiftCalendarSaveReqDto: {
    /** @description 是否批量排班 */
    BBlukShift?: boolean;
    /** @description 开始日期-格式：yyyy-MM-dd */
    StartDate?: string;
    /** @description 结束日期-格式：yyyy-MM-dd */
    EndDate?: string;
    /** @description 排班日期-格式：yyyy-MM-dd */
    ShiftDate?: string;
    /** @description 班次ID */
    ShiftId: string;
    /** @description 班组ID集合 */
    TeamIds: string[];
    /** @description 备注 */
    Remark?: string;
  };
  /** @description 查询班次日历明细 */
  QueryCalendarInfoReqDto: {
    /** @description 排班日期 */
    shiftDate?: string;
    /** @description ID */
    Id?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[ShiftCalendarInfoDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['ShiftCalendarInfoDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 班次日历信息Dto */
  ShiftCalendarInfoDto: {
    /**
     * Format: date-time
     * @description 排班日期
     */
    ShiftDate?: string;
    /** @description 排班日期字符串 */
    ShiftDateStr?: string;
    /** @description 班次信息 */
    ShiftDtos?: definitions['TeamShiftDto'][];
  };
  /** @description 班次信息Dto */
  TeamShiftDto: {
    /** @description 所排班次ID */
    ShiftId?: string;
    /** @description 班次编码 */
    ShiftCode?: string;
    /** @description 班次名称 */
    ShiftName?: string;
    /** @description 开始工作时间 */
    WorkStartTime?: string;
    /** @description 结束工作时间 */
    WorkEndTime?: string;
    /** @description 休息开始时间 */
    RestStartTime?: string;
    /** @description 休息结束时间 */
    RestEndTime?: string;
    /** @description 班组列表 */
    TeamDtos?: definitions['BaseSelectDto'][];
  };
  /** @description 班次日历列表参数Dto */
  QueryShiftCalendarListReqDto: {
    /** @description 开始日期-格式：yyyy-MM-dd */
    StartDate?: string;
    /** @description 结束日期-格式：yyyy-MM-dd */
    EndDate?: string;
    /** @description 班次ID */
    ShiftId?: string;
    /** @description 班组ID */
    TeamId?: string;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[ShiftCalendarListDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['ShiftCalendarListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 班次日历列表Dto */
  ShiftCalendarListDto: {
    /**
     * Format: date-time
     * @description 排班日期
     */
    ShiftDate?: string;
    /** @description 排班日期字符串 */
    ShiftDateStr?: string;
    /** @description 所排班次ID */
    ShiftId?: string;
    /** @description 班次编码 */
    ShiftCode?: string;
    /** @description 班次名称 */
    ShiftName?: string;
    /** @description 开始工作时间 */
    WorkStartTime?: string;
    /** @description 结束工作时间 */
    WorkEndTime?: string;
    /** @description 休息开始时间 */
    RestStartTime?: string;
    /** @description 休息结束时间 */
    RestEndTime?: string;
    /** @description 班次ID */
    TeamId?: string;
    /** @description 班组编码 */
    TeamCode?: string;
    /** @description 班组名称 */
    TeamName?: string;
    /** @description 备注/说明 */
    Remark?: string;
    /** @description ID */
    Id?: string;
    /** @description 是否启用 */
    IsEnabled?: boolean;
    /** @description 排班人 */
    CreatedUserName?: string;
    /**
     * Format: date-time
     * @description 创建时间
     */
    CreatedTime?: string;
  };
  /** @description 工位档案保存参数实体 */
  StationSaveReqDto: {
    /** @description ID修改需传 */
    Id?: string;
    /** @description 工位编码 */
    Code?: string;
    /** @description 工位名称 */
    Name: string;
    /** @description 所属工作中心编码 */
    WcCode?: string;
    /** @description 备注/说明 */
    Remark?: string;
    /** @description 是否启用 */
    IsEnabled?: boolean;
  };
  /** @description 查询工位分页参数 */
  QueryStationPageReqDto: {
    /** @description 工作中心 */
    WcCode?: string;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[StationInfoDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['StationInfoDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 工位明细信息实体 */
  StationInfoDto: {
    /** @description ID */
    Id?: string;
    /** @description 创建人 */
    CreatedUserName?: string;
    /**
     * Format: date-time
     * @description 创建时间
     */
    CreatedTime?: string;
    /** @description 工作中心 */
    WcName?: string;
    /** @description 工位编码 */
    Code?: string;
    /** @description 工位名称 */
    Name: string;
    /** @description 所属工作中心编码 */
    WcCode?: string;
    /** @description 备注/说明 */
    Remark?: string;
    /** @description 是否启用 */
    IsEnabled?: boolean;
  };
  /** @description 系统应用实体 */
  SysAppBaseDto: {
    /** @description ID */
    Id?: string;
    /** @description 编码 */
    Code: string;
    /** @description 名称 */
    Name: string;
    /** @description 是否默认 */
    IsDefault?: boolean;
    /**
     * Format: int32
     * @description 排序码
     */
    SortCode?: number | null;
    /** @description 是否外链 */
    IsUrl?: boolean;
    /** @description 外链地址 */
    UrlLink?: string;
    /** @description 是否启用 */
    IsEnabled?: boolean;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[SysAppBaseDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['SysAppBaseDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 查询角色列表的参数实体 */
  QueryRoleListReqDto: {
    /**
     * Format: int32
     * @description 权限类型<br/>
     * 1 = PERSON，人员<br/>
     * 2 = AUTHORITY，权限
     * @enum {number}
     */
    AuthType?: number | null;
    /** @description 查询关键字 */
    KeyWord?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[SysRoleBaseDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['SysRoleBaseDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 角色基础实体 */
  SysRoleBaseDto: {
    /** @description ID */
    Id?: string;
    /** @description 角色编码 */
    Code: string;
    /** @description 角色名称 */
    Name: string;
    /**
     * Format: int32
     * @description 排序码
     */
    Sort?: number | null;
    /** @description 备注 */
    Remark?: string;
    /** @description 是否启用 */
    IsEnabled?: boolean;
  };
  /** @description 查询角色下的用户列表参数 */
  QueryRoleUserListReqDto: {
    /** @description 角色ID */
    RoleId: string;
    /** @description 关键字 */
    KeyWord?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[OpUserDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['OpUserDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 操作员实体 */
  OpUserDto: {
    /** @description 人员编码 */
    cPersonCode?: string;
    /** @description 人员名称 */
    cPersonName?: string;
    /** @description 部门名称 */
    cDepName?: string;
    /** @description 邮箱 */
    cUserEmail?: string;
    /** @description 手机号 */
    cUserHand?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[TreeMenuDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['TreeMenuDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 菜单树实体 */
  TreeMenuDto: {
    /** @description 菜单编码 */
    code?: string;
    /** @description 图标 */
    icon?: string;
    /** @description 页面地址/链接 */
    path?: string;
    /** @description 是否是目录 */
    isDir?: boolean;
    /** @description 是否是按钮 */
    isBtn?: boolean;
    /** @description 是否隐藏 */
    isHid?: boolean;
    /** @description 所属应用ID */
    appId?: string;
    id?: string;
    title?: string;
    parentId?: string;
    hasChildren?: boolean;
    children?: definitions['TreeMenuDto'][];
  };
  /** @description 系统权限删除 */
  SysAuthDelReqDto: {
    /**
     * Format: int32
     * @description 权限类型<br/>
     * 1 = PERSON，人员<br/>
     * 2 = AUTHORITY，权限
     * @enum {number}
     */
    AuthType?: number | null;
    /** @description 删除的对象ID集合（人员即编码集合/权限即ID集合） */
    ObjIds?: string[];
  };
  /** @description 添加字典分类参数实体 */
  AddDicTypeDto: {
    /** @description 名称 */
    Name: string;
    /**
     * Format: int64
     * @description 所属父级
     */
    ParenntId?: string;
    /** @description 编码 */
    Code?: string;
    /**
     * Format: int32
     * @description 排序
     */
    Sort?: number | null;
    /** @description 备注 */
    Remark?: string;
    /** @description 是否启用 */
    IsEnabled?: boolean;
  };
  /** @description 修改字典分类参数实体 */
  UpdateDicTypeDto: {
    /** @description ID */
    Id: string;
    /** @description 名称 */
    Name: string;
    /**
     * Format: int64
     * @description 所属父级
     */
    ParenntId?: string;
    /** @description 编码 */
    Code?: string;
    /**
     * Format: int32
     * @description 排序
     */
    Sort?: number | null;
    /** @description 备注 */
    Remark?: string;
    /** @description 是否启用 */
    IsEnabled?: boolean;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[DicTypeInfoDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['DicTypeInfoDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 字典分类返回实体 */
  DicTypeInfoDto: {
    /** @description 分类ID */
    Id?: string;
    /** @description 创建人 */
    CreatedUserName?: string;
    /**
     * Format: date-time
     * @description 创建时间
     */
    CreatedTime?: string;
    /** @description 名称 */
    Name: string;
    /**
     * Format: int64
     * @description 所属父级
     */
    ParenntId?: string;
    /** @description 编码 */
    Code?: string;
    /**
     * Format: int32
     * @description 排序
     */
    Sort?: number | null;
    /** @description 备注 */
    Remark?: string;
    /** @description 是否启用 */
    IsEnabled?: boolean;
  };
  /** @description 字典数据保存参数 */
  SaveDicDataDto: {
    /** @description 字典数据ID(修改时必传) */
    Id?: string;
    /** @description 字典类型Id */
    TypeId: string;
    /** @description 值 */
    Value: string;
    /** @description 编码 */
    Code: string;
    /**
     * Format: int32
     * @description 排序
     */
    Sort?: number | null;
    /** @description 备注 */
    Remark?: string;
  };
  /** @description 查询字典的分页参数实体 */
  QueryDicDataPageReqDto: {
    /** @description 字典分类ID */
    TypeId?: string;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[DicDataInfoDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['DicDataInfoDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  DicDataInfoDto: {
    /** @description 字典数据ID */
    Id?: string;
    /** @description 分类名称 */
    TypeName?: string;
    /** @description 创建人 */
    CreatedUserName?: string;
    /**
     * Format: date-time
     * @description 创建时间
     */
    CreatedTime?: string;
    /** @description 字典类型Id */
    TypeId: string;
    /** @description 值 */
    Value: string;
    /** @description 编码 */
    Code: string;
    /**
     * Format: int32
     * @description 排序
     */
    Sort?: number | null;
    /** @description 备注 */
    Remark?: string;
  };
  /** @description IP白名单基础实体 */
  SysIpWhiteBaseDto: {
    /** @description ID 修改需要传递 */
    Id?: string;
    /** @description 内网IP */
    InnerIp?: string;
    /** @description 外网IP */
    OutIp?: string;
    /** @description 备注 */
    Remark?: string;
    /** @description 是否启用 */
    IsEnabled?: boolean;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[SysIpWhiteListDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['SysIpWhiteListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description IP白名单列表实体 */
  SysIpWhiteListDto: {
    /**
     * Format: date-time
     * @description 创建时间
     */
    CreatedTime?: string;
    /**
     * Format: date-time
     * @description 更新时间
     */
    UpdatedTime?: string;
    /** @description 创建者名称 */
    CreatedUserName?: string;
    /** @description 修改者名称 */
    UpdatedUserName?: string;
    /** @description ID 修改需要传递 */
    Id?: string;
    /** @description 内网IP */
    InnerIp?: string;
    /** @description 外网IP */
    OutIp?: string;
    /** @description 备注 */
    Remark?: string;
    /** @description 是否启用 */
    IsEnabled?: boolean;
  };
  /** @description 菜单基础实体 */
  SysMenuBaseDto: {
    /** @description 菜单ID */
    Id?: string;
    /** @description 应用ID */
    AppId: string;
    /** @description 所属父级ID */
    ParentId?: string;
    /** @description 编码 */
    Code: string;
    /** @description 名称 */
    Name: string;
    /** @description 图标 */
    Icon?: string;
    /** @description 页面地址/链接 */
    Path?: string;
    /**
     * Format: int32
     * @description 排序码
     */
    SortCode?: number | null;
    /** @description 备注 */
    Remark?: string;
    /** @description 是否是目录 */
    IsDir?: boolean;
    /** @description 是否是按钮 */
    IsBtn?: boolean;
    /** @description 是否隐藏 */
    IsHid?: boolean;
    /** @description 是否启用 */
    IsEnabled?: boolean;
  };
  /** @description 查询系统菜单分页参数 */
  QuerySysMenuPageReqDto: {
    /** @description 所属父级 */
    ParentId?: string;
    /** @description 应用ID */
    AppId?: string;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[SysMenuInfoDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['SysMenuInfoDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 菜单明细实体 */
  SysMenuInfoDto: {
    /** @description 上级菜单 */
    ParentName?: string;
    /**
     * Format: date-time
     * @description 创建时间
     */
    CreatedTime?: string;
    /** @description 创建者名称 */
    CreatedUserName?: string;
    /** @description 菜单ID */
    Id?: string;
    /** @description 应用ID */
    AppId: string;
    /** @description 所属父级ID */
    ParentId?: string;
    /** @description 编码 */
    Code: string;
    /** @description 名称 */
    Name: string;
    /** @description 图标 */
    Icon?: string;
    /** @description 页面地址/链接 */
    Path?: string;
    /**
     * Format: int32
     * @description 排序码
     */
    SortCode?: number | null;
    /** @description 备注 */
    Remark?: string;
    /** @description 是否是目录 */
    IsDir?: boolean;
    /** @description 是否是按钮 */
    IsBtn?: boolean;
    /** @description 是否隐藏 */
    IsHid?: boolean;
    /** @description 是否启用 */
    IsEnabled?: boolean;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[SysMenuTreeListDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['SysMenuTreeListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 系统菜单树表格返回实体 */
  SysMenuTreeListDto: {
    /** @description 编码 */
    Code: string;
    /** @description 名称 */
    Name: string;
    /** @description 图标 */
    Icon?: string;
    /** @description 页面地址/链接 */
    Path?: string;
    /**
     * Format: int32
     * @description 排序码
     */
    SortCode?: number | null;
    /** @description 备注 */
    Remark?: string;
    /** @description 是否是目录 */
    IsDir?: boolean;
    /** @description 是否是按钮 */
    IsBtn?: boolean;
    /** @description 是否隐藏 */
    IsHid?: boolean;
    /** @description 是否启用 */
    IsEnabled?: boolean;
    /** @description 上级菜单 */
    ParentName?: string;
    /**
     * Format: date-time
     * @description 创建时间
     */
    CreatedTime?: string;
    /** @description 创建者名称 */
    CreatedUserName?: string;
    /** @description 应用ID */
    AppId?: string;
    id?: string;
    title?: string;
    parentId?: string;
    hasChildren?: boolean;
    children?: definitions['SysMenuTreeListDto'][];
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[SysRoleInfoDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['SysRoleInfoDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 角色明细实体 */
  SysRoleInfoDto: {
    /**
     * Format: date-time
     * @description 创建时间
     */
    CreatedTime?: string;
    /** @description 创建者名称 */
    CreatedUserName?: string;
    /** @description ID */
    Id?: string;
    /** @description 角色编码 */
    Code: string;
    /** @description 角色名称 */
    Name: string;
    /**
     * Format: int32
     * @description 排序码
     */
    Sort?: number | null;
    /** @description 备注 */
    Remark?: string;
    /** @description 是否启用 */
    IsEnabled?: boolean;
  };
  /** @description 角色人员分配参数 */
  SysRolePersonAssReqDto: {
    /** @description 角色ID集合 */
    RoleIds?: string[];
    /** @description 人员编码集合 */
    PersonCodes?: string[];
  };
  /** @description 角色授权参数 */
  SysRoleAuthorityReqDto: {
    /** @description 角色ID */
    RoleId: string;
    /** @description 权限明细ID集合(包含父级) */
    ItemIds?: string[];
  };
  /** @description 查询人员档案分页数据 */
  QueryPersonPageReqDto: {
    /** @description 部门编码 */
    cDepCode?: string;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[UserInfoDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['UserInfoDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 人员档案明细实体 */
  UserInfoDto: {
    /** @description 角色ID集合 */
    RoleIds?: string[];
    /** @description 角色名称列表 */
    RoleNames?: string[];
    /** @description 人员编码 */
    cPersonCode?: string;
    /** @description 人员名称 */
    cPersonName?: string;
    /** @description 部门名称 */
    cDepName?: string;
    /** @description 邮箱 */
    cUserEmail?: string;
    /** @description 手机号 */
    cUserHand?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[SysUserAuthDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['SysUserAuthDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 用户权限实体 */
  SysUserAuthDto: {
    /** @description 有权限的APP列表 */
    Apps?: definitions['BaseSelectDto'][];
    /** @description 有权限的菜单列表 */
    Menus?: definitions['TreeMenuDto'][];
  };
  /** @description 查询任务列表参数 */
  QueryTaskListReqDto: {
    /** @description 查询关键字 */
    KeyWord?: string;
    /**
     * Format: int32
     * @description 任务状态（默认待接收）<br/>
     * 0 = PENDING，待接收<br/>
     * 1 = NORMAL，正常<br/>
     * 2 = SUSPEND，挂起
     * @enum {number}
     */
    TaskState?: number | null;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[TaskBaseDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['TaskBaseDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 任务基础实体 */
  TaskBaseDto: {
    /** @description 派工单号 */
    MSCode?: string;
    /** @description 任务ID */
    TaskId?: string;
    /** @description 生产订单号 */
    MoCode?: string;
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 存货代码 */
    cInvAddCode?: string;
    /** @description 存货名称 */
    cInvName?: string;
    /** @description 计划代号 */
    PlanCode?: string;
    /** @description 计划ID */
    PlanId?: string;
    /**
     * Format: double
     * @description 计划下达数量
     */
    IssQty?: number | null;
    /**
     * Format: double
     * @description 关闭后计划量
     */
    dCloseIssueQty?: number | null;
    /**
     * Format: double
     * @description 派工数量
     */
    ShiftQty?: number | null;
    /** @description 工序组ID */
    OpGroupId?: string;
    /** @description 工序组名称 */
    OpGroup?: string;
    /** @description 工序ID */
    OpId?: string;
    /**
     * Format: int32
     * @description 工序行号
     */
    OpSeq?: number | null;
    /** @description 工序名称 */
    OpName?: string;
    /** @description 工序计划ID */
    RoutingDId?: string;
    /**
     * Format: int32
     * @description 任务状态<br/>
     * 0 = PENDING，待接收<br/>
     * 1 = RECEIVED，已接收<br/>
     * 2 = SUSPEND，挂起<br/>
     * 3 = RECOVERY，已恢复<br/>
     * 4 = STARTED，已开工<br/>
     * 5 = FINISHED，已完工<br/>
     * 6 = TRANSED，已转单<br/>
     * 7 = CLOSED，已关闭<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    TaskState?: number | null;
    /** @description 任务状态说明 */
    TaskStateStr?: string;
    /** @description 设备ID */
    DeviceId?: string;
    /** @description 设备编码 */
    DeviceCode?: string;
    /** @description 设备名称 */
    DeviceName?: string;
    /** @description 磨具ID */
    MoldId?: string;
    /** @description 磨具编码 */
    MoldCode?: string;
    /** @description 模具名称 */
    MoldName?: string;
    /** @description 班组ID */
    TeamId?: string;
    /** @description 是否多人报工 */
    BMultiOper?: boolean;
    /** @description 开工日期 */
    StartDate?: string;
    /** @description 完工日期 */
    DueDate?: string;
  };
  /** @description 任务状态操作参数 */
  TaskActionReqDto: {
    /** @description 任务ID */
    TaskId?: string;
    /**
     * Format: int32
     * @description 操作<br/>
     * 1 = RECEIVED，已接收<br/>
     * 2 = SUSPEND，挂起<br/>
     * 3 = RECOVERY，恢复<br/>
     * 4 = STARTED，开工<br/>
     * 5 = FINISHED，完工<br/>
     * 6 = CLOSED，关闭<br/>
     * 7 = OPENED，打开
     * @enum {number}
     */
    Action?: number | null;
    /** @description 备注/原因/说明-挂起时最好需要传一下 */
    Remark?: string;
    /** @description 操作工编码集合 */
    cOperatorCodes?: string[];
  };
  /** @description 班组档案保存参数实体 */
  TeamGroupSaveReqDto: {
    /** @description ID修改需传 */
    Id?: string;
    /** @description 班组长人员编码集合 */
    ForemanCodes?: string[];
    /** @description 上班时间列表 */
    WorkTimes?: string[];
    /** @description 是否强制更新班组长 */
    BForceUpdForeman?: boolean;
    /** @description 是否维修保养班组 */
    BWxBy?: boolean;
    /** @description 班组编码 */
    Code?: string;
    /** @description 班组名称 */
    Name: string;
    /** @description 所属车间ID */
    WorkShopId?: string;
    /** @description 所属工作中心编码 */
    WcCode?: string;
    /** @description 所属部门编码 */
    cDepCode?: string;
    /** @description 备注/说明 */
    Remark?: string;
    /** @description 班组休息时间 08:00-20:00 这种样式 */
    WorkTimme?: string;
    /** @description 是否启用 */
    IsEnabled?: boolean;
    /** @description 是否启用 */
    IsEnabledStr?: string;
  };
  /** @description 查询班组分页参数 */
  QueryTeamGroupPageReqDto: {
    /** @description 工作中心 */
    WcCode?: string;
    /** @description 所属部门 */
    cDepCode?: string;
    /** @description 所属车间ID */
    WorkShopId?: string;
    /** @description 是否只查维修保养班组 null：全部 true：维修保养班组 false：非维修保养班组 */
    BWxBy?: boolean;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[TeamGroupInfoDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['TeamGroupInfoDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 班组明细信息实体 */
  TeamGroupInfoDto: {
    /** @description 工作中心 */
    WcName?: string;
    /** @description 部门名称 */
    cDepName?: string;
    /** @description 班组长姓名列表 */
    ForemanNames?: string[];
    /** @description 班组长 */
    ForemanNameStr?: string;
    /** @description 所属车间名称 */
    WorkShop?: string;
    /** @description 创建人 */
    CreatedUserName?: string;
    /**
     * Format: date-time
     * @description 创建时间
     */
    CreatedTime?: string;
    /** @description ID修改需传 */
    Id?: string;
    /** @description 班组长人员编码集合 */
    ForemanCodes?: string[];
    /** @description 上班时间列表 */
    WorkTimes?: string[];
    /** @description 是否强制更新班组长 */
    BForceUpdForeman?: boolean;
    /** @description 是否维修保养班组 */
    BWxBy?: boolean;
    /** @description 班组编码 */
    Code?: string;
    /** @description 班组名称 */
    Name: string;
    /** @description 所属车间ID */
    WorkShopId?: string;
    /** @description 所属工作中心编码 */
    WcCode?: string;
    /** @description 所属部门编码 */
    cDepCode?: string;
    /** @description 备注/说明 */
    Remark?: string;
    /** @description 班组休息时间 08:00-20:00 这种样式 */
    WorkTimme?: string;
    /** @description 是否启用 */
    IsEnabled?: boolean;
    /** @description 是否启用 */
    IsEnabledStr?: string;
  };
  /** @description 人员分配 */
  PersonAllotmentReqDto: {
    /** @description 班组ID */
    Id: string;
    /** @description 人员编码列表 */
    cPersonCode: string[];
  };
  /** @description 查询班组下人员列表 */
  QueryTeamPersonReqDto: {
    /** @description 班组ID */
    Id?: string;
    /** @description 关键字 */
    keyWord?: string;
    /** @description 是否过滤请假和借调人员 */
    BFilterQJJD?: boolean;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[TeamPersonDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['TeamPersonDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 班组人员实体 */
  TeamPersonDto: {
    /** @description 是否班组长 */
    IsForeman?: boolean;
    /** @description 班组ID */
    TeamId?: string;
    /** @description 人员编码 */
    cPersonCode?: string;
    /** @description 人员名称 */
    cPersonName?: string;
    /** @description 部门编码 */
    cDepCode?: string;
    /** @description 部门名称 */
    cDepName?: string;
  };
  /** @description 删除班组人员配置 */
  DeleteTeamPersonReqDto: {
    /** @description 班组ID集合 */
    Ids?: string[];
    /** @description 人员编码列表 */
    cPersonCodes?: string[];
    /**
     * Format: int32
     * @description 删除对象 1：班组 2：人员<br/>
     * 1 = TEAM，班组<br/>
     * 2 = PERSON，人员<br/>
     * 101 = MENUDIR，菜单目录<br/>
     * 102 = MENU，菜单<br/>
     * 103 = BUTTON，按钮
     * @enum {number}
     */
    ObjType?: number | null;
  };
  /** @description 班次档案保存参数实体 */
  TeamShiftSaveReqDto: {
    /** @description ID修改需传 */
    Id?: string;
    /** @description 班次编码 */
    Code?: string;
    /** @description 班次名称 */
    Name: string;
    /** @description 开始工作时间 */
    WorkStartTime?: string;
    /** @description 结束工作时间 */
    WorkEndTime?: string;
    /** @description 休息开始时间 */
    RestStartTime?: string;
    /** @description 休息结束时间 */
    RestEndTime?: string;
    /** @description 备注/说明 */
    Remark?: string;
    /** @description 是否启用 */
    IsEnabled?: boolean;
    /** @description 是否启用 */
    IsEnabledStr?: string;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[TeamShiftInfoDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['TeamShiftInfoDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 班次明细信息实体 */
  TeamShiftInfoDto: {
    /** @description ID */
    Id?: string;
    /** @description 创建人 */
    CreatedUserName?: string;
    /**
     * Format: date-time
     * @description 创建时间
     */
    CreatedTime?: string;
    /** @description 班次编码 */
    Code?: string;
    /** @description 班次名称 */
    Name: string;
    /** @description 开始工作时间 */
    WorkStartTime?: string;
    /** @description 结束工作时间 */
    WorkEndTime?: string;
    /** @description 休息开始时间 */
    RestStartTime?: string;
    /** @description 休息结束时间 */
    RestEndTime?: string;
    /** @description 备注/说明 */
    Remark?: string;
    /** @description 是否启用 */
    IsEnabled?: boolean;
    /** @description 是否启用 */
    IsEnabledStr?: string;
  };
  /** @description 查询请假单分页Dto */
  QueryTemTransferDocPageReqDto: {
    /** @description 是否跨车间借调 */
    bCrossWorkShop?: boolean;
    /** @description 来源车间Id */
    sWorkShopId?: string;
    /** @description 来源班组ID */
    sTeamGroupId?: string;
    /** @description 目的车间Id */
    tWorkShopId?: string;
    /** @description 目的班组ID */
    tTeamGroupId?: string;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[TemTransferDocInfoDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['TemTransferDocInfoDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 请假单明细Dto */
  TemTransferDocInfoDto: {
    /** @description 来源车间名称 */
    sWorkShop?: string;
    /** @description 目的车间名称 */
    tWorkShop?: string;
    /** @description 来源班组名称 */
    sTeamGroup?: string;
    /** @description 目的班组名称 */
    tTeamGroup?: string;
    /** @description 制单人 */
    CreatedUserName?: string;
    /** @description 制单日期 */
    CreatedTime?: string;
    /** @description 生效状态 */
    IsEnabled?: boolean;
    /** @description 生效状态 */
    IsEnabledStr?: string;
    /** @description 修改时需要传 */
    Id: string;
    /** @description 单号 */
    DocCode?: string;
    /** @description 是否跨车间借调 */
    bCrossWorkShop?: boolean;
    /** @description 是否跨车间借调 */
    bCrossWorkShopStr?: string;
    /** @description 来源车间Id */
    sWorkShopId: string;
    /** @description 目的车间Id */
    tWorkShopId: string;
    /** @description 来源班组Id */
    sTeamGroupId: string;
    /** @description 目的班组Id */
    tTeamGroupId: string;
    /** @description 借调人员编码 */
    cPersonCode: string;
    /** @description 借调人员名称 */
    cPerson?: string;
    /** @description 开始时间 */
    StartTime: string;
    /** @description 结束时间 */
    EndTime: string;
    /** @description 借调原因 */
    Reason?: string;
  };
  /** @description 借调单保存Dto */
  TemTransferDocSaveReqDto: {
    /** @description 修改时需要传 */
    Id: string;
    /** @description 单号 */
    DocCode?: string;
    /** @description 是否跨车间借调 */
    bCrossWorkShop?: boolean;
    /** @description 是否跨车间借调 */
    bCrossWorkShopStr?: string;
    /** @description 来源车间Id */
    sWorkShopId: string;
    /** @description 目的车间Id */
    tWorkShopId: string;
    /** @description 来源班组Id */
    sTeamGroupId: string;
    /** @description 目的班组Id */
    tTeamGroupId: string;
    /** @description 借调人员编码 */
    cPersonCode: string;
    /** @description 借调人员名称 */
    cPerson?: string;
    /** @description 开始时间 */
    StartTime: string;
    /** @description 结束时间 */
    EndTime: string;
    /** @description 借调原因 */
    Reason?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[WHListResDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['WHListResDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 仓库列表返回实体 */
  WHListResDto: {
    /** @description 仓库名字 */
    cWhName?: string;
    /** @description 仓库编码 */
    cWhCode?: string;
    /** @description 是否启用货位 */
    bWhPos?: boolean;
    /** @description 仓库类型 */
    iWHProperty?: string;
    /** @description 仓库算法 */
    cWhValueStyle?: string;
  };
  /** @description 调拨时扫码查询仓库货位存量信息参数 */
  QueryWhInvPosStockReqDto: {
    /** @description 仓库编码 */
    cWhCode: string;
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 货位编码(当货位编码为空时，查询仓库存量) */
    cPosCode?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[WhInvPosStockDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['WhInvPosStockDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 仓库货位库存实体 */
  WhInvPosStockDto: {
    /** @description 仓库编码 */
    cWhCode?: string;
    /** @description 仓库名称 */
    cWhName?: string;
    /** @description 货位编码 */
    cPosCode?: string;
    /** @description 货位名称 */
    cPosName?: string;
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 批次 */
    cBatch?: string;
    /**
     * Format: double
     * @description 现存量
     */
    Qty?: number | null;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[PositionListResDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['PositionListResDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 获取仓库列表返回实体 */
  PositionListResDto: {
    /** @description 货位编码 */
    cPosCode?: string;
    /** @description 货位名称 */
    cPosName?: string;
    /**
     * Format: double
     * @description 货位存量
     */
    iQuantity?: number | null;
  };
  /** @description 调拨单保存参数 */
  TransVouchSaveReqDto: {
    /**
     * Format: int32
     * @description 调拨单ID
     */
    Id?: number | null;
    /** @description 调拨日期-不穿的话默认当天 */
    dTVDate?: string;
    /** @description 调出仓库编码 */
    cOWhCode: string;
    /** @description 出库类别编码 */
    cORdCode?: string;
    /** @description 调入仓库编码 */
    cIWhCode: string;
    /** @description 入库类别编码 */
    cIRdCode?: string;
    /** @description 转出部门编码 */
    cODepCode?: string;
    /** @description 转入部门编码 */
    cIDepCode?: string;
    /** @description 调拨备注 */
    cTVMemo?: string;
    /** @description 调拨明细 */
    InvDtos?: definitions['TransInvDto'][];
    /** @description 是否保存并审核 */
    bSaveAndAudit?: boolean;
  };
  /** @description 调拨存货明细实体 */
  TransInvDto: {
    /**
     * Format: int32
     * @description 子表ID
     */
    AutoId?: number | null;
    /** @description 存货编码 */
    cInvCode: string;
    /**
     * Format: double
     * @description 调拨数量
     */
    iTVQuantity?: number | null;
    /** @description 调拨批次 */
    cTVBatch?: string;
    /** @description 调出货位编码 */
    coutposcode?: string;
    /** @description 调入货位编码 */
    cinposcode?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[WaitAuditTransVouchDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['WaitAuditTransVouchDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 待审核调拨单列表实体 */
  WaitAuditTransVouchDto: {
    /**
     * Format: int32
     * @description 调拨单ID
     */
    Id?: number | null;
    /** @description 调拨单号 */
    cTVCode?: string;
    /** @description 单据日期 */
    dTVDate?: string;
    /** @description 调出仓库编码 */
    cOWhCode?: string;
    /** @description 调出仓库是否启用货位 */
    bOWhPos?: boolean;
    /** @description 调入仓库是否启用货位 */
    bIWhPos?: boolean;
    /** @description 调出仓库名称 */
    cOWhName?: string;
    /** @description 调入仓库编码 */
    cIWhCode?: string;
    /** @description 调入仓库名称 */
    cIWhName?: string;
    /** @description 调出类别编码 */
    cORdCode?: string;
    /** @description 调出类别名称 */
    cORdName?: string;
    /** @description 调入类别编码 */
    cIRdCode?: string;
    /** @description 调入部门编码 */
    cIDepCode?: string;
    /** @description 调出部门编码 */
    cODepCode?: string;
    /** @description 调入类别名称 */
    cIRdName?: string;
    /** @description 备注 */
    cTVMemo?: string;
    /** @description 单据条码 */
    csysbarcode?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[TransVouchInfoDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['TransVouchInfoDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 调拨单明细返回实体 */
  TransVouchInfoDto: {
    /** @description 调拨单号 */
    cTVCode?: string;
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 存货代码 */
    cInvAddCode?: string;
    /** @description 存货名称 */
    cInvName?: string;
    /** @description 规格型号 */
    cInvStd?: string;
    /** @description 是否启用批次 */
    bInvBatch?: boolean;
    /**
     * Format: double
     * @description 数量
     */
    iTVQuantity?: number | null;
    /** @description 调拨批次 */
    cTVBatch?: string;
    /**
     * Format: int32
     * @description 子表ID
     */
    autoId?: number | null;
    /**
     * Format: int32
     * @description 主表ID
     */
    ID?: number | null;
    /** @description 调出货位 */
    coutposcode?: string;
    /** @description 调出货位名称 */
    coutposname?: string;
    /** @description 调入货位 */
    cinposcode?: string;
    /** @description 调入货位名称 */
    cinposname?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[WorkCenterDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['WorkCenterDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 工作中心实体 */
  WorkCenterDto: {
    /**
     * Format: int32
     * @description 工作中心ID
     */
    WcId?: number | null;
    /** @description 工作中心编码 */
    WcCode?: string;
    /** @description 工作中心名称 */
    WcDesc?: string;
    /** @description 部门编码 */
    DeptCode?: string;
    /** @description 部门名称 */
    DeptName?: string;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[PersonDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['PersonDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 人员档案实体 */
  PersonDto: {
    /** @description 人员编码 */
    cPersonCode?: string;
    /** @description 人员名称 */
    cPersonName?: string;
    /** @description 部门编码 */
    cDepCode?: string;
    /** @description 部门名称 */
    cDepName?: string;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[OpUserDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['OpUserDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[InvClassTreeDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['InvClassTreeDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 存货分类树实体 */
  InvClassTreeDto: {
    /** @description 存货分类编码 */
    cInvCCode?: string;
    /** @description 存货分类名称 */
    cInvCName?: string;
    id?: string;
    title?: string;
    parentId?: string;
    hasChildren?: boolean;
    children?: definitions['InvClassTreeDto'][];
  };
  /** @description 查询存货分页参数 */
  QueryInvPageReqDto: {
    /** @description 存货分类编码 */
    cInvCCode?: string;
    /** @description 供应商编码 */
    cVenCode?: string;
    /** @description 是否生产耗用 */
    bComsume?: boolean;
    /** @description 是否是BOM查询 */
    bBomQuery?: boolean;
    /** @description 是否只查委外的存货 */
    bProxyForeign?: boolean;
    /** @description 是否允许生产订单 */
    bProductBill?: boolean;
    /** @description 是否查询已生码的数据 */
    bFilterRawCode?: boolean;
    /** @description 是否过滤自制件 */
    bSelf?: boolean;
    /** @description 是否只查采购 */
    bPurQuery?: boolean;
    /** @description 是否允许BOM子件 */
    bBomSub?: boolean;
    /** @description 是否允许BOM子件 */
    bBomMain?: boolean;
    /** @description 存货编码集合 */
    cInvCodes?: string[];
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[InventoryDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['InventoryDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 存货档案返回实体 */
  InventoryDto: {
    /** @description 存货分类编码 */
    cInvCCode?: string;
    /** @description 存货分类名称 */
    cInvCName?: string;
    /** @description 计量单位编码 */
    cComUnitCode?: string;
    /** @description 计量单位名称 */
    cComUnitName?: string;
    /** @description 存货是否启用批次 */
    bInvBatch?: boolean;
    /** @description 是否启用一品多点 */
    bInvFree?: boolean;
    /** @description 是否保质期管理 */
    bInvQuality?: boolean;
    /**
     * Format: int32
     * @description 保质期
     */
    iMassDate?: number | null;
    /**
     * Format: int32
     * @description 保质期单位
     */
    cMissUnit?: number | null;
    /**
     * Format: int32
     * @description 保质期单位<br/>
     * 1 = YEAR，年<br/>
     * 2 = MONTH，月<br/>
     * 3 = DAY，日
     * @enum {number}
     */
    MissUnit?: number | null;
    /** @description 颜色 */
    cInvDefine1?: string;
    /** @description 版本号 */
    cInvDefine2?: string;
    /** @description 穴号 */
    cInvDefine3?: string;
    /** @description 模具编码 */
    cInvDefine4?: string;
    /** @description 项目负责人 */
    cInvDefine5?: string;
    /** @description 机器吨位 */
    cInvDefine6?: string;
    /** @description 工艺流程 */
    cInvDefine7?: string;
    /** @description 对应客户编码 */
    cInvDefine8?: string;
    /** @description 默认项目编码 */
    cDefItemCode?: string;
    /** @description 默认仓库编码 */
    cDefWareHouse?: string;
    /** @description 默认仓库名称 */
    cDefWareHouseName?: string;
    /** @description 默认货位 */
    cPosCode?: string;
    /** @description 工艺路线ID */
    PRoutingId?: string;
    /** @description 是否允许生产订单 */
    bProductBill?: boolean;
    /** @description 生产单位 */
    cProductUnit?: string;
    /**
     * Format: double
     * @description 原币单价
     */
    iUnitPrice?: number | null;
    /**
     * Format: double
     * @description 原币含税单价
     */
    iTaxUnitPrice?: number | null;
    /**
     * Format: double
     * @description 税率
     */
    iTaxRate?: number | null;
    /**
     * Format: double
     * @description 供应倍数-包装数
     */
    fSupplyMulti?: number | null;
    /** @description BOMID(最新生效的) */
    BomId?: string;
    /** @description PartId */
    PartId?: string;
    /** @description 存货属性 */
    cInvAtrr?: string;
    /** @description 默认部门编码 */
    cDefDepCode?: string;
    /** @description 默认部门名称 */
    cDefDepName?: string;
    /**
     * Format: int32
     * @description 供应类型
     */
    iSupplyType?: number | null;
    /** @description 供应类型名称 */
    SupplyType?: string;
    /** @description 是否自制 */
    bSelf?: boolean;
    /** @description 是否采购 */
    bPurchase?: boolean;
    /** @description 是否委外 */
    bProxyForeign?: boolean;
    /** @description 是否生产耗用 */
    bComsume?: boolean;
    /** @description 是否应税劳务 */
    bService?: boolean;
    /** @description 是否内销 */
    bSale?: boolean;
    /**
     * Format: double
     * @description 入库超额上限
     */
    fInExcess?: number | null;
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 存货代码 */
    cInvAddCode?: string;
    /** @description 存货名称 */
    cInvName?: string;
    /** @description 规格型号 */
    cInvStd?: string;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[CusBaseDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['CusBaseDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 客户基础实体 */
  CusBaseDto: {
    /** @description 客户编码 */
    cCusCode?: string;
    /** @description 客户名称 */
    cCusName?: string;
    /** @description 客户简称 */
    cCusAbbName?: string;
    /** @description 客户分类编码 */
    cCCCode?: string;
    /** @description 客户分类名称 */
    cCCName?: string;
    /** @description 客户地址 */
    cCusAddress?: string;
    /** @description 客户联系人 */
    cCusPerson?: string;
    /** @description 联系人邮箱 */
    cCusEmail?: string;
    /** @description 联系人手机 */
    cCusPhone?: string;
  };
  /** @description 查询仓库分页数据 */
  QueryWhListReqDto: {
    /** @description 是否代管仓 */
    bProxyWh?: boolean;
    /** @description 是否资产仓 */
    bWhAsset?: boolean;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[WarehouseBaseDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['WarehouseBaseDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 查询货位档案分页数据参数 */
  QueryPositionPageReqDto: {
    /** @description 仓库编码 */
    WhCode?: string;
    /** @description 是否查询已生码的数据 */
    bFilterRawCode?: boolean;
    /** @description 货位编码开始 */
    posCodeBegin?: string;
    /** @description 货位编码结束 */
    posCodeEnd?: string;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[PositionDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['PositionDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 货位实体 */
  PositionDto: {
    /** @description 货位编码 */
    cPosCode?: string;
    /** @description 货位名称 */
    cPosName?: string;
    /** @description 是否末级 */
    bPosEnd?: boolean;
    /** @description 仓库编码 */
    cWhCode?: string;
    /** @description 仓库名称 */
    cWhName?: string;
    /** @description 备注 */
    cMemo?: string;
  };
  /** @description 查询供应商分页参数列表 */
  QueryVenPageReqDto: {
    /** @description 是否过滤只查采购 */
    BPurchase?: boolean;
    /** @description 是否过滤只查委外 */
    bProxyForeign?: boolean;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[VendorDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['VendorDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 供应商档案返回实体 */
  VendorDto: {
    /** @description 供应商编码 */
    cVenCode?: string;
    /** @description 供应商名称 */
    cVenName?: string;
    /** @description 供应商简称 */
    cVenAbbName?: string;
    /** @description 供应商分类编码 */
    cVCCode?: string;
    /** @description 供应商分类名称 */
    cVCName?: string;
    /** @description 开发日期 */
    dVenDevDate?: string;
    /** @description 联系人 */
    cVenPerson?: string;
    /** @description 供应商总公司编码 */
    cVenHeadCode?: string;
    /** @description 币种 */
    cVenExch_name?: string;
    /** @description 税率 */
    iVenTaxRate?: string;
    /** @description 是否货物（采购） */
    bVenCargo?: boolean;
    /** @description 是否委外 */
    bProxyForeign?: boolean;
    /** @description 是否服务 */
    bVenService?: boolean;
  };
  /** @description 查询产成品入库单分页数据 */
  QueryMomRdPageReqDto: {
    /** @description 是否只查询MES创建的入库单 */
    BQueryMesCreate?: boolean;
    /** @description 存货编码开始 */
    cInvCodeStart?: string;
    /** @description 存货编码结束 */
    cInvCodeEnd?: string;
    /** @description 单据日期开始 */
    dDateBegin?: string;
    /** @description 单据日期结束 */
    dDateEnd?: string;
    /** @description 是否查询已生码的数据 */
    bFilterRawCode?: boolean;
    /** @description 入库单号 */
    cCode?: string;
    /** @description 部门编码 */
    cDepCode?: string;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[MomRdListDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['MomRdListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 产成品入库单列表返回实体 */
  MomRdListDto: {
    /**
     * Format: int32
     * @description 主表ID
     */
    ID?: number | null;
    /** @description 入库单号 */
    cCode?: string;
    /** @description 入库仓库编码 */
    cWhCode?: string;
    /** @description 入库仓库 */
    cWhName?: string;
    /** @description 入库日期 */
    dDate?: string;
    /** @description 部门编码 */
    cDepCode?: string;
    /** @description 部门名称 */
    cDepName?: string;
    /** @description 制单人 */
    cMaker?: string;
    /**
     * Format: int32
     * @description 入库单子表ID
     */
    AutoID?: number | null;
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 存货代码 */
    cInvAddCode?: string;
    /** @description 存货名称 */
    cInvName?: string;
    /** @description 规格型号 */
    cInvStd?: string;
    /** @description 计量单位编码 */
    cComUnitCode?: string;
    /** @description 计量单位名称 */
    cComUnitName?: string;
    /**
     * Format: double
     * @description 入库数量
     */
    iQuantity?: number | null;
    /** @description 批次 */
    cBatch?: string;
    /**
     * Format: int32
     * @description 生产订单子表ID
     */
    iMPoIds?: number | null;
    /** @description 生产订单号 */
    cmocode?: string;
    /** @description 来源 */
    cDefine1?: string;
  };
  /** @description 查询采购到货单列表 */
  QueryPuArrPageReqDto: {
    /** @description 存货编码开始 */
    cInvCodeStart?: string;
    /** @description 存货编码结束 */
    cInvCodeEnd?: string;
    /** @description 单据日期开始 */
    dDateBegin?: string;
    /** @description 单据日期结束 */
    dDateEnd?: string;
    /** @description 是否查询已生码的数据 */
    bFilterRawCode?: boolean;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[PuArrListDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['PuArrListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 采购到货单列表返回实体 */
  PuArrListDto: {
    /**
     * Format: int32
     * @description 主表ID
     */
    ID?: number | null;
    /** @description 业务类型 */
    cBusType?: string;
    /** @description 到货单号 */
    cCode?: string;
    /** @description 单据日期 */
    dDate?: string;
    /** @description 供应商编码 */
    cVenCode?: string;
    /** @description 供应商名称 */
    cVenName?: string;
    /** @description 部门编码 */
    cDepCode?: string;
    /** @description 部门名称 */
    cDepName?: string;
    /** @description 制单人 */
    cMaker?: string;
    /**
     * Format: date-time
     * @description 制单时间
     */
    cMakeTime?: string;
    /**
     * Format: int32
     * @description 到货单子表ID
     */
    AutoID?: number | null;
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 存货代码 */
    cInvAddCode?: string;
    /** @description 存货名称 */
    cInvName?: string;
    /** @description 规格型号 */
    cInvStd?: string;
    /** @description 计量单位编码 */
    cComUnitCode?: string;
    /** @description 计量单位名称 */
    cComUnitName?: string;
    /**
     * Format: double
     * @description 入库数量
     */
    iQuantity?: number | null;
    /** @description 到货仓库编码 */
    cWhCode?: string;
    /** @description 批次 */
    cBatch?: string;
    /**
     * Format: int32
     * @description 行号
     */
    ivouchrowno?: number | null;
  };
  /** @description 查询存货仓库货位批次存量信息参数 */
  QueryWhPosBatchStockReqDto: {
    /** @description 存货编码 */
    cInvCode: string;
    /** @description 仓库编码 */
    cWhCode?: string;
    /** @description 货位编码 */
    cPosCode?: string;
    /** @description 批号 */
    cBatch?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[InvWhPosBatchStockDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['InvWhPosBatchStockDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 存货仓库货位批次储存量信息实体 */
  InvWhPosBatchStockDto: {
    /** @description 仓库编码 */
    cWhCode?: string;
    /** @description 仓库名称 */
    cWhName?: string;
    /** @description 货位编码 */
    cPosCode?: string;
    /** @description 批次 */
    cBatch?: string;
    /**
     * Format: double
     * @description 存量
     */
    Qty?: number | null;
    /** @description 存货编码 */
    cInvCode?: string;
  };
  /** @description 查询仓库现存量参数实体 */
  QueryWhStockSumReqDto: {
    /** @description 仓库编码 */
    cWhCode?: string;
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 批号 */
    cBatch?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[WHStockSumDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['WHStockSumDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 仓库现存量返回实体 */
  WHStockSumDto: {
    /** @description 仓库编码 */
    cWhCode?: string;
    /** @description 仓库名称 */
    cWhName?: string;
    /** @description 存货编码 */
    cInvCode?: string;
    /**
     * Format: double
     * @description 现存量
     */
    Qty?: number | null;
    /** @description 批号 */
    cBatch?: string;
    /** @description 是否启用货位 */
    bWhPos?: boolean;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[RdStyleDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['RdStyleDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 出入库类别返回实体 */
  RdStyleDto: {
    /** @description 类别编码 */
    cRdCode?: string;
    /** @description 类别名称 */
    cRdName?: string;
  };
  /** @description 查询U8工序档案列表参数 */
  QuerySfcOperationListReqDto: {
    /** @description 工作中心ID */
    WcId?: string;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[SfcOperationDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['SfcOperationDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description U8工序档案实体 */
  SfcOperationDto: {
    /**
     * Format: int32
     * @description 工序ID
     */
    OperationId?: number | null;
    /** @description 工序编码 */
    OpCode?: string;
    /** @description 工序名称 */
    Description?: string;
    /**
     * Format: int32
     * @description 工序中心ID
     */
    WcId?: number | null;
    /** @description 工作中心名称 */
    WcName?: string;
    /** @description 是否是计划委外工序 */
    PlanSubFlag?: boolean;
    /** @description 是否是委外工序 */
    SubFlag?: boolean;
    /** @description 是否是倒冲工序 */
    BFFlag?: boolean;
    /** @description 是否是报告点 */
    ReportFlag?: boolean;
    /** @description 是否是计费点 */
    FeeFlag?: boolean;
  };
  /** @description 查询U8工艺路线参数 */
  QuerySfcPRoutingListReqDto: {
    /** @description 料品编码开始 */
    cInvCodeBegin?: string;
    /** @description 料品编码结束 */
    cInvCodeEnd?: string;
    /** @description 存货编码 */
    cInvCodes?: string[];
    /** @description 工艺路线ID */
    ProutingIds?: (number | null)[];
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[SfcPRoutingDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['SfcPRoutingDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 料品工艺路线实体 */
  SfcPRoutingDto: {
    /** @description 唯一ID */
    UId?: string;
    /**
     * Format: int32
     * @description 料品工艺路线ID
     */
    PRoutingId?: number | null;
    /**
     * Format: int32
     * @description 工艺路线类型 1：主要 2：替代
     */
    RountingType?: number | null;
    /** @description 版本号 */
    Version?: string;
    /** @description 版本说明 */
    VersionDesc?: string;
    /** @description 版本生效日期 */
    VersionEffDate?: string;
    /** @description 版本失效日期 */
    VersionEndDate?: string;
    /**
     * Format: int32
     * @description 料品ID
     */
    PartId?: number | null;
    /** @description 料品编码 */
    cInvCode?: string;
    /** @description 料品名称 */
    cInvName?: string;
    /** @description 规格型号 */
    cInvStd?: string;
    /** @description 存货代码 */
    cInvAddCode?: string;
    /** @description 计量单位编码 */
    cComUnitCode?: string;
    /** @description 计量单位名称 */
    cComUnitName?: string;
  };
  /** @description 不带分页的JSON泛型LIST返回类型 */
  'LLJsonResult[SfcPRoutingDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['SfcPRoutingDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[SfcPRoutingDetailDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['SfcPRoutingDetailDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 料品工艺路线明细实体 */
  SfcPRoutingDetailDto: {
    /**
     * Format: int32
     * @description 工艺路线字表ID
     */
    PRoutingDId?: number | null;
    /**
     * Format: int32
     * @description 工艺路线ID
     */
    PRoutingId?: number | null;
    /** @description 工序行号 */
    OpSeq?: string;
    /** @description 生效日期 */
    EffBegDate?: string;
    /** @description 失效日期 */
    EffEndDate?: string;
    /** @description 是否末道工序 */
    LastFlag?: boolean;
    /** @description MES里工序ID */
    OpId?: string;
    /** @description 检验方式 */
    Define22?: string;
    /**
     * Format: int32
     * @description 检验方式<br/>
     * 1 = NONE，无<br/>
     * 2 = SIMPLE，简单模式<br/>
     * 3 = INDEX，指标模式<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    QcWay?: number | null;
    /** @description 检验方式描述 */
    QcWayDesc?: string;
    /**
     * Format: int32
     * @description 工序ID
     */
    OperationId?: number | null;
    /** @description 工序编码 */
    OpCode?: string;
    /** @description 工序名称 */
    Description?: string;
    /**
     * Format: int32
     * @description 工序中心ID
     */
    WcId?: number | null;
    /** @description 工作中心名称 */
    WcName?: string;
    /** @description 是否是计划委外工序 */
    PlanSubFlag?: boolean;
    /** @description 是否是委外工序 */
    SubFlag?: boolean;
    /** @description 是否是倒冲工序 */
    BFFlag?: boolean;
    /** @description 是否是报告点 */
    ReportFlag?: boolean;
    /** @description 是否是计费点 */
    FeeFlag?: boolean;
  };
  /** @description 查询存货的BOM版本列表 */
  QueryInvBomListReqDto: {
    /** @description 存货编码 */
    cInvCode: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[InvBomVersionDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['InvBomVersionDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 存货BOM版本返回实体 */
  InvBomVersionDto: {
    /**
     * Format: int32
     * @description 版本号
     */
    Version?: number | null;
    /** @description 版本说明 */
    VersionDesc?: string;
    /** @description 生效日期 */
    VersionEffDate?: string;
    /**
     * Format: int32
     * @description BOMID
     */
    BomId?: number | null;
  };
  /** @description 查询BOM左侧树的参数 */
  QueryBomRootReqDto: {
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 母件多阶查询时版本号 */
    Version?: string;
    /** @description 物料ID */
    PartId?: string;
    /** @description 母件多阶查询时必传 */
    BomId?: string;
    /**
     * Format: int32
     * @description BOM查询方式<br/>
     * 0 = PARENT，母件全阶<br/>
     * 1 = COMPONENT，子件全阶
     * @enum {number}
     */
    QueryWay?: number | null;
    /** @description 是否查询根节点 */
    BQueryRoot?: boolean;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[BomLeftListDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['BomLeftListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description BOM左边树列表返回实体 */
  BomLeftListDto: {
    /** @description 物料编码 */
    cInvCode?: string;
    /** @description 物料代码 */
    cInvAddCode?: string;
    /** @description 物料名称 */
    cInvName?: string;
    /** @description 规格型号 */
    cInvStd?: string;
    /**
     * Format: int32
     * @description BOMID
     */
    BomId?: number | null;
    /**
     * Format: int32
     * @description 物料ID
     */
    PartId?: number | null;
    /** @description 是否末级 */
    BLevelEnd?: boolean;
    /**
     * Format: int32
     * @description 版本
     */
    Version?: number | null;
    /** @description 子件查询时用 */
    BomIds?: (number | null)[];
  };
  /** @description 查询BOM明细参数 */
  QueryBomInfoReqDto: {
    /**
     * Format: int32
     * @description 物料ID
     */
    PartId: number | null;
    /**
     * Format: int32
     * @description BOM ID
     */
    BomId: number | null;
    /** @description 母件多阶查询时版本号 */
    Version?: string;
    /**
     * Format: int32
     * @description BOM 查询方式<br/>
     * 0 = PARENT，母件全阶<br/>
     * 1 = COMPONENT，子件全阶
     * @enum {number}
     */
    QueryWay?: number | null;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[BomInfoDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['BomInfoDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description BOM明细实体 */
  BomInfoDto: {
    /** @description 存货编码 */
    InvCode?: string;
    /** @description 存货代码 */
    InvAddCode?: string;
    /** @description 存货名称 */
    InvName?: string;
    /** @description 规格型号 */
    InvStd?: string;
    /** @description 物料属性 */
    InvAttr?: string;
    /** @description 计量单位 */
    UnitName?: string;
    /** @description 版本代号 */
    Version?: string;
    /** @description 版本说明 */
    VersionDesc?: string;
    /** @description 版本日期 */
    VersionEffDate?: string;
    /**
     * Format: double
     * @description 母件损耗率
     */
    ParentScrap?: number | null;
    /** @description BOMID */
    BomId?: string;
    /** @description BOM表体数据 */
    Bodys?: definitions['BomBodyDto'][];
  };
  /** @description BOM表体集合 */
  BomBodyDto: {
    /**
     * Format: int32
     * @description 行号
     */
    SortSeq?: number | null;
    /** @description 存货编码 */
    DInvCode?: string;
    /** @description 存货代码 */
    DInvAddCode?: string;
    /** @description 存货名称 */
    DInvName?: string;
    /** @description 规格型号 */
    DInvStd?: string;
    /** @description 物料属性 */
    DPartAttr?: string;
    /** @description 计量单位 */
    DUnitName?: string;
    /** @description 版本代号 */
    Version?: string;
    /** @description 版本说明 */
    VersionDesc?: string;
    /** @description 版本日期 */
    VersionEffDate?: string;
    /**
     * Format: double
     * @description 基本用量
     */
    BaseQtyN?: number | null;
    /**
     * Format: double
     * @description 基础用量
     */
    BaseQtyD?: number | null;
    /** @description 供应类型 */
    WIPType?: string;
    /** @description 供应类型 */
    DWIPType?: string;
    /** @description 生效日期 */
    EffBegDate?: string;
    /** @description 失效日期 */
    EffEndDate?: string;
    /** @description 仓库代号 */
    WhCode?: string;
    /** @description 仓库名称 */
    WhName?: string;
    /** @description 图号 */
    DInvDefine_1?: string;
    /** @description 图纸版本 */
    DInvDefine_2?: string;
    /** @description 图面材质 */
    DInvDefine_3?: string;
    /** @description 项目编码 */
    DInvDefine_5?: string;
  };
  /** @description 供应商修改密码参数 */
  VendorUpdatePassReqDto: {
    /** @description 老密码 */
    OldPass: string;
    /** @description 新密码 */
    NewPass: string;
  };
  /** @description 重置供应商密码参数 */
  VenResetPassReqDto: {
    /** @description 供应商编码 */
    cVenCode: string;
    /** @description 重置后的密码（不传就重置为默认密码） */
    Pass?: string;
  };
  /** @description 供应商订单列表查询参数 */
  QueryVenOrderPageReqDto: {
    /** @description 订单日期开始 */
    dPoDateBegin?: string;
    /** @description 订单日期结束 */
    dPoDateEnd?: string;
    /** @description 订单号开始 */
    cPoIdBegin?: string;
    /** @description 订单号结束 */
    cPoIdEnd?: string;
    /** @description 存货编码开始 */
    cInvCodeBegin?: string;
    /** @description 存货编码结束 */
    cInvCodeEnd?: string;
    /**
     * Format: int32
     * @description 供应商接收状态<br/>
     * 0 = UNREVICE，未接收<br/>
     * 1 = PARTREVICE，部分接收<br/>
     * 2 = REVICED，已全部接收<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    ReviceState?: number | null;
    /**
     * Format: int32
     * @description 订单类型<br/>
     * 0 = POORDER，采购订单<br/>
     * 1 = OMORDER，委外订单<br/>
     * 1 = OMORDER，委外订单<br/>
     * 2 = OtherRd，其他入库单<br/>
     * 3 = RdRecord，采购入库单<br/>
     * 4 = PuArr，采购到货单<br/>
     * 5 = QM05，产品不良品处理单<br/>
     * 6 = QMCheckVoucher，来料检验单<br/>
     * 12 = TransVouch，调拨单<br/>
     * 16 = QM16，工序不良品处理单<br/>
     * 17 = SoMain，销售订单<br/>
     * 18 = QM18，发退货不良品处理单<br/>
     * 19 = QM19，其他不良品处理单<br/>
     * 21 = MomOrder，生产订单<br/>
     * 26 = SaleBillZVouch，销售专用发票<br/>
     * 27 = SaleBillVouch，销售发票<br/>
     * 31 = FC31，生产订单工序转移单<br/>
     * 48 = RR，收款单<br/>
     * 49 = RP，付款单<br/>
     * 64 = MaterialAppVouch，领料申请<br/>
     * 71 = Dispatch，销售发货单<br/>
     * 90 = MomReport，订单报工<br/>
     * 111 = PurBillVouch，采购发票<br/>
     * 112 = PurBillZVouch，采购专用发票<br/>
     * 121 = HYMomOrder，委外加工单<br/>
     * 303 = SaleOut，销售出库单<br/>
     * 313 = Adjust，货位调整单<br/>
     * 314 = ScrapVoucher，不合格品记录单<br/>
     * 411 = MomInWare，产成品入库单<br/>
     * 411 = MomInWare，产成品入库单<br/>
     * 412 = MaterialOutStock，材料出库单
     * @enum {number}
     */
    OrderType?: number | null;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[VenPoOrderListDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['VenPoOrderListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 采购订单列表实体 */
  VenPoOrderListDto: {
    /** @description 业务类型（中文名称） */
    cbustype?: string;
    /** @description 采购订单号 */
    cpoid?: string;
    /** @description 主表ID */
    poid?: string;
    /** @description 订单日期 */
    dpodate?: string;
    /** @description 部门编码 */
    cdepcode?: string;
    /** @description 部门名称 */
    cdepname?: string;
    /** @description 人员编码 */
    cpersoncode?: string;
    /** @description 业务员名称 */
    cpersonname?: string;
    /** @description 币种名称 */
    cexch_name?: string;
    /** @description 采购类型编码 */
    cptcode?: string;
    /** @description 采购类型 */
    cptname?: string;
    /** @description 备注 */
    cmemo?: string;
    /** @description 子表ID */
    id?: string;
    /** @description 存货编码 */
    cinvcode?: string;
    /** @description 存货代码 */
    cinvaddcode?: string;
    /** @description 存货名称 */
    cinvname?: string;
    /** @description 规格型号 */
    cinvstd?: string;
    /** @description 主计量 */
    cinvm_unit?: string;
    /**
     * Format: double
     * @description 数量
     */
    iquantity?: number | null;
    /** @description 计划到货时间 */
    darrivedate?: string;
    /** @description 图号 */
    cinvdefine1?: string;
    /** @description 图纸版本 */
    cinvdefine2?: string;
    /** @description 图面材质 */
    cinvdefine3?: string;
    /**
     * Format: int32
     * @description 供应商接收状态<br/>
     * 0 = UNREVICE，未接收<br/>
     * 1 = PARTREVICE，部分接收<br/>
     * 2 = REVICED，已全部接收<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    reviceState?: number | null;
    /**
     * Format: double
     * @description 供应商接收数量
     */
    reviceQty?: number | null;
    /**
     * Format: double
     * @description 剩余可接收数量
     */
    syReviceQty?: number | null;
  };
  /** @description 供应商订单接收参 */
  VenOrderReviceReqDto: {
    /** @description 接收明细集合 */
    ReviceDtos: definitions['VenOrderReviceDto'][];
    /**
     * Format: int32
     * @description 订单类型<br/>
     * 0 = POORDER，采购订单<br/>
     * 1 = OMORDER，委外订单<br/>
     * 1 = OMORDER，委外订单<br/>
     * 2 = OtherRd，其他入库单<br/>
     * 3 = RdRecord，采购入库单<br/>
     * 4 = PuArr，采购到货单<br/>
     * 5 = QM05，产品不良品处理单<br/>
     * 6 = QMCheckVoucher，来料检验单<br/>
     * 12 = TransVouch，调拨单<br/>
     * 16 = QM16，工序不良品处理单<br/>
     * 17 = SoMain，销售订单<br/>
     * 18 = QM18，发退货不良品处理单<br/>
     * 19 = QM19，其他不良品处理单<br/>
     * 21 = MomOrder，生产订单<br/>
     * 26 = SaleBillZVouch，销售专用发票<br/>
     * 27 = SaleBillVouch，销售发票<br/>
     * 31 = FC31，生产订单工序转移单<br/>
     * 48 = RR，收款单<br/>
     * 49 = RP，付款单<br/>
     * 64 = MaterialAppVouch，领料申请<br/>
     * 71 = Dispatch，销售发货单<br/>
     * 90 = MomReport，订单报工<br/>
     * 111 = PurBillVouch，采购发票<br/>
     * 112 = PurBillZVouch，采购专用发票<br/>
     * 121 = HYMomOrder，委外加工单<br/>
     * 303 = SaleOut，销售出库单<br/>
     * 313 = Adjust，货位调整单<br/>
     * 314 = ScrapVoucher，不合格品记录单<br/>
     * 411 = MomInWare，产成品入库单<br/>
     * 411 = MomInWare，产成品入库单<br/>
     * 412 = MaterialOutStock，材料出库单
     * @enum {number}
     */
    OrderType?: number | null;
  };
  /** @description 供应商接收明细 */
  VenOrderReviceDto: {
    /** @description 订单子表ID */
    IPOSID: string;
    /**
     * Format: double
     * @description 接收数量
     */
    RQty?: number | null;
    /** @description 备注说明 */
    Remark?: string;
  };
  /** @description 查询可发货的采购订单列表参数 */
  QueryVenDeliveryOrderReqDto: {
    /** @description 订单日期开始 */
    dPoDateBegin?: string;
    /** @description 订单日期结束 */
    dPoDateEnd?: string;
    /** @description 订单号开始 */
    cPoIdBegin?: string;
    /** @description 订单号结束 */
    cPoIdEnd?: string;
    /** @description 存货编码开始 */
    cInvCodeBegin?: string;
    /** @description 存货编码结束 */
    cInvCodeEnd?: string;
    /**
     * Format: int32
     * @description 订单类型<br/>
     * 0 = POORDER，采购订单<br/>
     * 1 = OMORDER，委外订单<br/>
     * 1 = OMORDER，委外订单<br/>
     * 2 = OtherRd，其他入库单<br/>
     * 3 = RdRecord，采购入库单<br/>
     * 4 = PuArr，采购到货单<br/>
     * 5 = QM05，产品不良品处理单<br/>
     * 6 = QMCheckVoucher，来料检验单<br/>
     * 12 = TransVouch，调拨单<br/>
     * 16 = QM16，工序不良品处理单<br/>
     * 17 = SoMain，销售订单<br/>
     * 18 = QM18，发退货不良品处理单<br/>
     * 19 = QM19，其他不良品处理单<br/>
     * 21 = MomOrder，生产订单<br/>
     * 26 = SaleBillZVouch，销售专用发票<br/>
     * 27 = SaleBillVouch，销售发票<br/>
     * 31 = FC31，生产订单工序转移单<br/>
     * 48 = RR，收款单<br/>
     * 49 = RP，付款单<br/>
     * 64 = MaterialAppVouch，领料申请<br/>
     * 71 = Dispatch，销售发货单<br/>
     * 90 = MomReport，订单报工<br/>
     * 111 = PurBillVouch，采购发票<br/>
     * 112 = PurBillZVouch，采购专用发票<br/>
     * 121 = HYMomOrder，委外加工单<br/>
     * 303 = SaleOut，销售出库单<br/>
     * 313 = Adjust，货位调整单<br/>
     * 314 = ScrapVoucher，不合格品记录单<br/>
     * 411 = MomInWare，产成品入库单<br/>
     * 411 = MomInWare，产成品入库单<br/>
     * 412 = MaterialOutStock，材料出库单
     * @enum {number}
     */
    OrderType?: number | null;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[VenDeliveryPoOrderListDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['VenDeliveryPoOrderListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 可发货的采购订单列表实体 */
  VenDeliveryPoOrderListDto: {
    /** @description 业务类型（中文名称） */
    cbustype?: string;
    /** @description 采购订单号 */
    cpoid?: string;
    /** @description 主表ID */
    poid?: string;
    /** @description 订单日期 */
    dpodate?: string;
    /** @description 部门编码 */
    cdepcode?: string;
    /** @description 部门名称 */
    cdepname?: string;
    /** @description 人员编码 */
    cpersoncode?: string;
    /** @description 业务员名称 */
    cpersonname?: string;
    /** @description 币种名称 */
    cexch_name?: string;
    /** @description 采购类型编码 */
    cptcode?: string;
    /** @description 采购类型 */
    cptname?: string;
    /** @description 备注 */
    cmemo?: string;
    /** @description 子表ID */
    id?: string;
    /** @description 存货编码 */
    cinvcode?: string;
    /** @description 存货代码 */
    cinvaddcode?: string;
    /** @description 存货名称 */
    cinvname?: string;
    /** @description 规格型号 */
    cinvstd?: string;
    /** @description 主计量 */
    cinvm_unit?: string;
    /**
     * Format: double
     * @description 数量
     */
    iquantity?: number | null;
    /** @description 计划到货时间 */
    darrivedate?: string;
    /** @description 图号 */
    cinvdefine1?: string;
    /** @description 图纸版本 */
    cinvdefine2?: string;
    /** @description 图面材质 */
    cinvdefine3?: string;
    /** @description 是否启用批次 */
    bInvBatch?: boolean;
    /**
     * Format: double
     * @description 接收总数量
     */
    reviceQty?: number | null;
    /**
     * Format: double
     * @description 已发货数量
     */
    deliveryQty?: number | null;
    /**
     * Format: double
     * @description 剩余可发货数量
     */
    syDeliveryQty?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[VenOMOrderListDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['VenOMOrderListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 委外订单列表实体 */
  VenOMOrderListDto: {
    /** @description 业务类型（中文名称） */
    cbustype?: string;
    /** @description 委外订单号 */
    ccode?: string;
    /** @description 主表ID */
    moid?: string;
    /** @description 订单日期 */
    ddate?: string;
    /** @description 部门编码 */
    cdepcode?: string;
    /** @description 部门名称 */
    cdepname?: string;
    /** @description 人员编码 */
    cpersoncode?: string;
    /** @description 业务员名称 */
    cpersonname?: string;
    /** @description 币种名称 */
    cexch_name?: string;
    /** @description 委外类型编码 */
    cptcode?: string;
    /** @description 委外类型 */
    cptname?: string;
    /** @description 备注 */
    cmemo?: string;
    /** @description 子表ID */
    modetailsid?: string;
    /** @description 存货编码 */
    cinvcode?: string;
    /** @description 存货代码 */
    cinvaddcode?: string;
    /** @description 存货名称 */
    cinvname?: string;
    /** @description 规格型号 */
    cinvstd?: string;
    /** @description 主计量 */
    cinvm_unit?: string;
    /**
     * Format: double
     * @description 数量
     */
    iquantity?: number | null;
    /** @description 计划到货时间 */
    darrivedate?: string;
    /** @description 图号 */
    cinvdefine1?: string;
    /** @description 图纸版本 */
    cinvdefine2?: string;
    /** @description 图面材质 */
    cinvdefine3?: string;
    /**
     * Format: int32
     * @description 供应商接收状态<br/>
     * 0 = UNREVICE，未接收<br/>
     * 1 = PARTREVICE，部分接收<br/>
     * 2 = REVICED，已全部接收<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    reviceState?: number | null;
    /**
     * Format: double
     * @description 供应商接收数量
     */
    reviceQty?: number | null;
    /**
     * Format: double
     * @description 剩余可接收数量
     */
    syReviceQty?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[VenDeliveryOMOrderListDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['VenDeliveryOMOrderListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 可发货的委外订单列表实体 */
  VenDeliveryOMOrderListDto: {
    /** @description 业务类型（中文名称） */
    cbustype?: string;
    /** @description 委外订单号 */
    ccode?: string;
    /** @description 主表ID */
    moid?: string;
    /** @description 订单日期 */
    ddate?: string;
    /** @description 部门编码 */
    cdepcode?: string;
    /** @description 部门名称 */
    cdepname?: string;
    /** @description 人员编码 */
    cpersoncode?: string;
    /** @description 业务员名称 */
    cpersonname?: string;
    /** @description 币种名称 */
    cexch_name?: string;
    /** @description 委外类型编码 */
    cptcode?: string;
    /** @description 委外类型 */
    cptname?: string;
    /** @description 备注 */
    cmemo?: string;
    /** @description 子表ID */
    modetailsid?: string;
    /** @description 存货编码 */
    cinvcode?: string;
    /** @description 存货代码 */
    cinvaddcode?: string;
    /** @description 存货名称 */
    cinvname?: string;
    /** @description 规格型号 */
    cinvstd?: string;
    /** @description 主计量 */
    cinvm_unit?: string;
    /**
     * Format: double
     * @description 数量
     */
    iquantity?: number | null;
    /** @description 计划到货时间 */
    darrivedate?: string;
    /** @description 图号 */
    cinvdefine1?: string;
    /** @description 图纸版本 */
    cinvdefine2?: string;
    /** @description 图面材质 */
    cinvdefine3?: string;
    /** @description 是否启用批次 */
    bInvBatch?: boolean;
    /**
     * Format: double
     * @description 接收总数量
     */
    reviceQty?: number | null;
    /**
     * Format: double
     * @description 已发货数量
     */
    deliveryQty?: number | null;
    /**
     * Format: double
     * @description 剩余可发货数量
     */
    syDeliveryQty?: number | null;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[List[OpGroupIconDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['OpGroupIconDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 工序组图标实体 */
  OpGroupIconDto: {
    /** @description ID */
    Id?: string;
    /** @description 名称 */
    Name?: string;
    /** @description 图标 */
    Icon?: string;
  };
  /** @description 查询报工信息参数 */
  QueryReportInfoReqDto: {
    /** @description 工序组ID */
    OpGroupId?: string;
    /** @description 条码/或搜索关键字 */
    BarCode?: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[MomOpReportDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['MomOpReportDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 生产订单工序报工明细 */
  MomOpReportDto: {
    /** @description 生产订单号 */
    MoCode?: string;
    /** @description 存货编码 */
    InvCode?: string;
    /** @description 存货代码 */
    InvAddCode?: string;
    /** @description 规格型号 */
    InvStd?: string;
    /** @description 预入仓库编码 */
    cWhCode?: string;
    /** @description 预入仓库名称 */
    cWhName?: string;
    /** @description 预入仓库是否启用货位 */
    bWhPos?: boolean;
    /** @description 预入货位编码 */
    cPosCode?: string;
    /** @description 预入货位名称 */
    cPosName?: string;
    /** @description 是否启用批次 */
    BInvBatch?: boolean;
    /** @description 是否需要检验 */
    BGsp?: boolean;
    /** @description 是否启用一品多点 */
    BInvFree?: boolean;
    /** @description 存货名称 */
    InvName?: string;
    /** @description 开工日期 */
    StartDate?: string;
    /** @description 完工日期 */
    DueDate?: string;
    /**
     * Format: double
     * @description 生产订单数量
     */
    MoQty?: number | null;
    /**
     * Format: double
     * @description 计划下达数量
     */
    IssQty?: number | null;
    /**
     * Format: double
     * @description 关闭后计划量
     */
    dCloseIssueQty?: number | null;
    /**
     * Format: double
     * @description 派工数量
     */
    ShiftQty?: number | null;
    /** @description 是否是平行工序组 */
    BParallel?: boolean;
    /** @description 工序组下面对应所有工序进度列表 */
    AllOpList?: definitions['OpProcessDto'][];
    /** @description 可报工的工序列表 */
    OpList?: definitions['OpProcessBaseDto'][];
    /** @description 完工进度 */
    ComRateDtos?: definitions['MomOpComRateDto'][];
    /** @description 计划ID */
    PlanId?: string;
    /**
     * Format: double
     * @description 当前条码数量
     */
    BarCodeQty?: number | null;
    /** @description 工序批号 */
    OpBatch?: string;
  };
  /** @description 工序进度实体 */
  OpProcessDto: {
    /**
     * Format: double
     * @description 完工数量
     */
    ComQty?: number | null;
    /**
     * Format: double
     * @description 完工比例
     */
    ComRate?: number | null;
    /**
     * Format: double
     * @description 总的派工数量
     */
    ShiftQty?: number | null;
    /** @description 任务ID */
    TaskId?: string;
    /** @description 班组ID */
    TeamId?: string;
    /** @description 派工单明细ID */
    ShiftDetailId?: string;
    /** @description 派工人员编码集合 */
    PersonCodeList?: string[];
    /** @description 派工单ID */
    ShiftId?: string;
    /** @description 工序ID */
    OpId?: string;
    /** @description 工序名称 */
    OpName?: string;
    /**
     * Format: int32
     * @description 工序行号
     */
    OpSeq?: number | null;
    /** @description 工序编码 */
    OpCode?: string;
    /**
     * Format: double
     * @description 剩余可报工数量
     */
    SyQty?: number | null;
    /**
     * Format: double
     * @description 剩余可报工数量最大值
     */
    SyMaxQty?: number | null;
    /** @description 是否末道工序-(末道工序前端提示是否入库) */
    BLastFlag?: boolean;
    /** @description 是否首道工序组 */
    BFirstFlag?: boolean;
    /** @description 是否领料完成是否可报工 */
    BReport?: boolean;
    /** @description 是否多人制作 */
    BMultiOper?: boolean;
    /** @description 操作员编码集合 */
    cOpCodes?: string[];
    /** @description 操作员名称集合 */
    cOpNames?: string[];
    /** @description 工序组ID */
    OpGroupId?: string;
    /** @description 工序组名称 */
    OpGroup?: string;
    /**
     * Format: int32
     * @description 工序组排序
     */
    OpGroupSeq?: number | null;
    /** @description 工序领料情况 */
    PickDtos?: definitions['OpPickProcessDto'][];
    /** @description 工序计划子表ID */
    RoutingDId?: string;
    /**
     * Format: int32
     * @description 检验方式<br/>
     * 1 = NONE，无<br/>
     * 2 = SIMPLE，简单模式<br/>
     * 3 = INDEX，指标模式<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    QcWay?: number | null;
  };
  /** @description 工序进度基本实体 */
  OpProcessBaseDto: {
    /** @description 任务ID */
    TaskId?: string;
    /** @description 班组ID */
    TeamId?: string;
    /** @description 派工单明细ID */
    ShiftDetailId?: string;
    /** @description 派工人员编码集合 */
    PersonCodeList?: string[];
    /** @description 派工单ID */
    ShiftId?: string;
    /** @description 工序ID */
    OpId?: string;
    /** @description 工序名称 */
    OpName?: string;
    /**
     * Format: int32
     * @description 工序行号
     */
    OpSeq?: number | null;
    /** @description 工序编码 */
    OpCode?: string;
    /**
     * Format: double
     * @description 剩余可报工数量
     */
    SyQty?: number | null;
    /**
     * Format: double
     * @description 剩余可报工数量最大值
     */
    SyMaxQty?: number | null;
    /** @description 是否末道工序-(末道工序前端提示是否入库) */
    BLastFlag?: boolean;
    /** @description 是否首道工序组 */
    BFirstFlag?: boolean;
    /** @description 是否领料完成是否可报工 */
    BReport?: boolean;
    /** @description 是否多人制作 */
    BMultiOper?: boolean;
    /** @description 操作员编码集合 */
    cOpCodes?: string[];
    /** @description 操作员名称集合 */
    cOpNames?: string[];
    /** @description 工序组ID */
    OpGroupId?: string;
    /** @description 工序组名称 */
    OpGroup?: string;
    /**
     * Format: int32
     * @description 工序组排序
     */
    OpGroupSeq?: number | null;
    /** @description 工序领料情况 */
    PickDtos?: definitions['OpPickProcessDto'][];
    /** @description 工序计划子表ID */
    RoutingDId?: string;
    /**
     * Format: int32
     * @description 检验方式<br/>
     * 1 = NONE，无<br/>
     * 2 = SIMPLE，简单模式<br/>
     * 3 = INDEX，指标模式<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    QcWay?: number | null;
  };
  /** @description 生产计划工序进度实体 */
  MomOpComRateDto: {
    /**
     * Format: double
     * @description 完工数量
     */
    ComQty?: number | null;
    /**
     * Format: double
     * @description 完工比例
     */
    ComRate?: number | null;
    /**
     * Format: double
     * @description 计划下达数量
     */
    IssueQty?: number | null;
    /** @description 工序ID */
    OpId?: string;
    /** @description 工序名称 */
    OpName?: string;
    /**
     * Format: int32
     * @description 工序行号
     */
    OpSeq?: number | null;
    /** @description 工序编码 */
    OpCode?: string;
  };
  /** @description 产品领料进度返回实体 */
  OpPickProcessDto: {
    /** @description 工序ID */
    OpId?: string;
    /** @description 工序编码 */
    OpCode?: string;
    /** @description 工序名称 */
    OpName?: string;
    /**
     * Format: int32
     * @description 工序排序
     */
    OpSeq?: number | null;
    /** @description 材料编码 */
    cInvCode?: string;
    /** @description 材料名称 */
    cInvName?: string;
    /**
     * Format: double
     * @description 基础用量分子
     */
    BaseQtyN?: number | null;
    /**
     * Format: double
     * @description 基础用量分母
     */
    BaseQtyD?: number | null;
    /**
     * Format: double
     * @description 应领数量
     */
    Qty?: number | null;
    /**
     * Format: double
     * @description 已领数量
     */
    IssQty?: number | null;
    /**
     * Format: double
     * @description 领用比例
     */
    IssRate?: number | null;
  };
  /** @description 报工参数实体 */
  MoRoutingSaveReqDto: {
    /** @description 工序组ID */
    OpGroupId: string;
    /** @description 计划ID */
    PlanId: string;
    /** @description 工序集合 */
    OpDtos?: definitions['MoRoutingOpInfoDto'][];
    /** @description 是否有U8车间模块 */
    BHasFc?: boolean;
  };
  /** @description 报工明细实体 */
  MoRoutingOpInfoDto: {
    /** @description 所属工人 */
    cPersonCode?: string;
    /** @description 所属工人列表 */
    cPersonCodes?: string[];
    /**
     * Format: double
     * @description 良品数量
     */
    QualifiedQty?: number | null;
    /**
     * Format: double
     * @description 不良总数
     */
    ScrapQty?: number | null;
    /**
     * Format: double
     * @description 总的报工数量（良+不良）
     */
    ReportQty?: number | null;
    /** @description 工序计划子表ID */
    RoutingDId: string;
    /** @description 工序ID */
    OpId: string;
    /** @description 任务ID */
    TaskId: string;
    /** @description 工序批号 */
    OpBatch: string;
    /**
     * Format: int32
     * @description 检验方式<br/>
     * 1 = NONE，无<br/>
     * 2 = SIMPLE，简单模式<br/>
     * 3 = INDEX，指标模式<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    QcWay?: number | null;
    /** @description 不良原因列表 */
    ScrapDtos?: definitions['MoRoutingBillScrapDto'][];
    /** @description 入库参数(末道工序或不良) */
    InWareDto?: definitions['MoRoutingBillInWareBaseDto'];
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[MoRoutingResDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['MoRoutingResDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 工序报工返回实体 */
  MoRoutingResDto: {
    /** @description 报工单号 */
    FcVouchCode?: string;
    /** @description 报工单ID */
    FcVouchId?: string;
    /** @description 不良入库单号 */
    ScrapRdCodes?: string[];
    /** @description 良品入库单号 */
    RdCodes?: string[];
    /** @description 返回数据 */
    Data?: { [key: string]: unknown };
    /** @description 返回消息 */
    Msg?: string;
    /** @description 处理状态 */
    State?: boolean;
  };
  /** @description 查询工时记录分页列表 */
  QueryWorkHourListReqDto: {
    /** @description 班组ID */
    TeamId?: string;
    /** @description 工序ID */
    OpId?: string;
    /** @description 人员编码 */
    cPersonCode?: string;
    /** @description 存货编码 */
    cInvCode?: string;
    /** @description 开始日期 */
    BeginDate?: string;
    /** @description 结束日期 */
    EndDate?: string;
    /**
     * Format: int32
     * @description 审核状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = PENDING，待审核<br/>
     * 2 = AUDITED，已审核<br/>
     * 3 = REJECT，驳回
     * @enum {number}
     */
    AuditState?: number | null;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[WorkHourListDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['WorkHourListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 工时记录列表返回实体 */
  WorkHourListDto: {
    /** @description 主键 */
    Id?: string;
    /** @description 班组ID */
    TeamId?: string;
    /** @description 班组名称 */
    TeamName?: string;
    /** @description 产品编码 */
    cInvCode?: string;
    /** @description 产品名称 */
    cInvName?: string;
    /** @description 人员编码 */
    cPersonCode?: string;
    /** @description 人员名称 */
    cPersonName?: string;
    /** @description 工序ID */
    OpId?: string;
    /** @description 工序名称 */
    OpName?: string;
    /**
     * Format: date-time
     * @description 开工时间
     */
    StartTime?: string;
    /**
     * Format: date-time
     * @description 完工时间
     */
    DueTime?: string;
    /**
     * Format: double
     * @description 总计工时
     */
    TotalWHours?: number | null;
    /**
     * Format: double
     * @description 有效工时
     */
    EffectWHours?: number | null;
    /**
     * Format: double
     * @description 无效工时
     */
    InvaildWHours?: number | null;
    /**
     * Format: double
     * @description 实际总计工时
     */
    SJTotalWHours?: number | null;
    /**
     * Format: double
     * @description 实际有效工时
     */
    SJEffectWHours?: number | null;
    /**
     * Format: double
     * @description 实际无效工时
     */
    SJInvaildWHours?: number | null;
    /** @description 审核意见 */
    AuditRmind?: string;
    /**
     * Format: int32
     * @description 审核状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = PENDING，待审核<br/>
     * 2 = AUDITED，已审核<br/>
     * 3 = REJECT，驳回
     * @enum {number}
     */
    AuditState?: number | null;
    /** @description 审核人名称 */
    AuditorName?: string;
    /**
     * Format: date-time
     * @description 审核时间
     */
    AuditTime?: string;
  };
  /** @description 修改工时记录 */
  WorkHourUpdateReqDto: {
    /**
     * Format: int32
     * @description 记录ID
     */
    Id?: number | null;
    /**
     * Format: double
     * @description 实际有效工时
     */
    SJEffectWHours?: number | null;
    /**
     * Format: double
     * @description 实际无效工时
     */
    SJInvaildWHours?: number | null;
  };
  /** @description 工时记录审核参数 */
  WorkHourAuditReqDto: {
    /**
     * Format: int32
     * @description 审核状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = PENDING，待审核<br/>
     * 2 = AUDITED，已审核<br/>
     * 3 = REJECT，驳回
     * @enum {number}
     */
    AuditStatus?: number | null;
    /** @description 审核意见 */
    AuditRmind?: string;
    /** @description 删除的ID集合 */
    Ids: string[];
  };
  /** @description 作业保存参数 */
  WorkJobSaveReqDto: {
    /** @description 单据ID 修改时需传 */
    Id?: string;
    /** @description 单号 */
    DocNo?: string;
    /**
     * Format: int32
     * @description 作业对象类型<br/>
     * 1 = MOLD，模具<br/>
     * 2 = DEVICE，设备<br/>
     * -1 = ALL，全部
     * @enum {number}
     */
    ObjType: number | null;
    /** @description 作业对象ID */
    ObjId: string;
    /** @description 所属车间ID */
    WorkShopId?: string;
    /** @description 派工单主表ID */
    ShiftId?: string;
    /** @description 备注 */
    Remark?: string;
    /**
     * Format: int32
     * @description 作业单状态<br/>
     * 1 = WAITING，待开工<br/>
     * 2 = SUSPEND，暂停<br/>
     * 3 = RECOVERY，已恢复<br/>
     * 4 = STARTED，已开工<br/>
     * 5 = FINISHED，已完工<br/>
     * 7 = CLOSED，已关闭<br/>
     * 8 = UPKEEP，保养<br/>
     * 9 = REPAIR，维修<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    State?: number | null;
    /** @description 派工单明细ID */
    ShiftDetailId?: string;
    /**
     * Format: date-time
     * @description 计划开工时间
     */
    StartTime: string;
    /**
     * Format: date-time
     * @description 计划完工时间
     */
    DueTime: string;
    /** @description 加工产品编码 */
    cInvCode: string;
    /** @description 加工工序ID */
    OpId: string;
    /**
     * Format: double
     * @description 加工数量
     */
    Qty?: number | null;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[WorkJobInfoDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['WorkJobInfoDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 作业单明细实体 */
  WorkJobInfoDto: {
    /** @description 作业单ID */
    Id?: string;
    /** @description 单号 */
    DocNo?: string;
    /**
     * Format: int32
     * @description 作业对象类型<br/>
     * 1 = MOLD，模具<br/>
     * 2 = DEVICE，设备<br/>
     * -1 = ALL，全部
     * @enum {number}
     */
    ObjType?: number | null;
    /** @description 对象类型 */
    ObjTypeName?: string;
    /** @description 作业对象ID */
    ObjId?: string;
    /** @description 对象编码 */
    ObjCode?: string;
    /** @description 对象名称 */
    ObjName?: string;
    /** @description 所属车间ID */
    WorkShopId?: string;
    /** @description 作业车间 */
    WorkShop?: string;
    /** @description 派工单主表ID */
    ShiftId?: string;
    /** @description 派工单号 */
    ShiftNo?: string;
    /** @description 备注 */
    Remark?: string;
    /**
     * Format: int32
     * @description 作业单状态<br/>
     * 1 = WAITING，待开工<br/>
     * 2 = SUSPEND，暂停<br/>
     * 3 = RECOVERY，已恢复<br/>
     * 4 = STARTED，已开工<br/>
     * 5 = FINISHED，已完工<br/>
     * 7 = CLOSED，已关闭<br/>
     * 8 = UPKEEP，保养<br/>
     * 9 = REPAIR，维修<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    State?: number | null;
    /** @description 状态 */
    StateDesc?: string;
    /** @description 派工单明细ID */
    ShiftDetailId?: string;
    /**
     * Format: date-time
     * @description 计划开工时间
     */
    StartTime?: string;
    /**
     * Format: date-time
     * @description 计划完工时间
     */
    DueTime?: string;
    /** @description 加工产品编码 */
    cInvCode?: string;
    /** @description 加工产品代码 */
    cInvAddCode?: string;
    /** @description 加工产品名称 */
    cInvName?: string;
    /** @description 规格型号 */
    cInvStd?: string;
    /** @description 计量单位 */
    cUnitName?: string;
    /** @description 工艺路线ID */
    PRoutingId?: string;
    /** @description 加工工序ID */
    OpId?: string;
    /** @description 工序编码 */
    OpCode?: string;
    /** @description 工序名称 */
    OpName?: string;
    /**
     * Format: double
     * @description 加工数量
     */
    Qty?: number | null;
    /**
     * Format: date-time
     * @description 制单时间
     */
    CreatedTime?: string;
    /** @description 制单人 */
    CreatedUserName?: string;
    /** @description 子表集合 */
    ActionRecordEntities?: definitions['JobActionRecordEntity'][];
    /** @description 申请单信息 */
    ApplyDto?: definitions['JobToApplyDto'];
  };
  /** @description 作业单操作记录表 */
  JobActionRecordEntity: {
    /**
     * Format: int64
     * @description 作业单ID
     */
    JobId?: string;
    /**
     * Format: int32
     * @description 操作类型<br/>
     * 2 = SUSPEND，挂起<br/>
     * 3 = RECOVERY，恢复<br/>
     * 4 = STARTED，开工<br/>
     * 5 = FINISHED，完工
     * @enum {number}
     */
    Action?: number | null;
    /** @description 备注说明 */
    Remark?: string;
    /**
     * Format: date-time
     * @description 创建时间
     */
    CreatedTime?: string;
    /**
     * Format: date-time
     * @description 更新时间
     */
    UpdatedTime?: string;
    /** @description 创建者Id */
    CreatedUserId?: string;
    /** @description 创建者名称 */
    CreatedUserName?: string;
    /** @description 修改者Id */
    UpdatedUserId?: string;
    /** @description 修改者名称 */
    UpdatedUserName?: string;
    /** @description 软删除 */
    IsDeleted?: boolean;
    /** @description 是否启用 */
    IsEnabled?: boolean;
    /** @description U8账套号 */
    AccId?: string;
    /**
     * Format: int64
     * @description 主键Id
     */
    Id?: string;
  };
  /** @description 作业单赚申请单实体 */
  JobToApplyDto: {
    /** @description 申请单ID */
    Id?: string;
    /**
     * Format: int32
     * @description 申请单类型<br/>
     * 1 = REPAIR，维修<br/>
     * 2 = KEEP，保养<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    DocType?: number | null;
    /** @description 申请单号 */
    DocNo?: string;
    /** @description 申请人 */
    ApplyUser?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 1 = WAIT_DISPATCH，待派工<br/>
     * 2 = WAIT_REPAIR，待维修<br/>
     * 3 = REPAIRING，维修中<br/>
     * 4 = REPAIR_FINISH，维修完成<br/>
     * 5 = WAIT_KEEP，待保养<br/>
     * 6 = KEEPING，保养中<br/>
     * 7 = KEEP_FINISH，保养完成<br/>
     * 8 = CLOSED，已关闭<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    DocState?: number | null;
    /** @description 是否停线 */
    BStopLine?: boolean;
    /**
     * Format: date-time
     * @description 制单时间
     */
    CreatedTime?: string;
    /** @description 制单人 */
    CreatedUserName?: string;
  };
  /** @description 作业单分页查询请求实体 */
  QueryWorkJobPageReqDto: {
    /**
     * Format: int32
     * @description 作业对象类型<br/>
     * 1 = MOLD，模具<br/>
     * 2 = DEVICE，设备<br/>
     * -1 = ALL，全部
     * @enum {number}
     */
    ObjType?: number | null;
    /** @description 作业车间ID */
    WorkShopId?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 1 = WAITING，待开工<br/>
     * 2 = SUSPEND，暂停<br/>
     * 3 = RECOVERY，已恢复<br/>
     * 4 = STARTED，已开工<br/>
     * 5 = FINISHED，已完工<br/>
     * 7 = CLOSED，已关闭<br/>
     * 8 = UPKEEP，保养<br/>
     * 9 = REPAIR，维修<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    State?: number | null;
    /** @description 开始时间 */
    StartDate?: string;
    /** @description 结束时间 */
    EndDate?: string;
    /** @description 存货编码开始 */
    cInvCodeStart?: string;
    /** @description 存货编码结束 */
    cInvCodeEnd?: string;
    /** @description 是否查询未完工 */
    BQueryUnFinish?: boolean;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[WorkJobInfoDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['WorkJobInfoDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 作业单状态修改 */
  WorkJobUpdateStateReqDto: {
    /** @description 单据ID */
    Id: string;
    /**
     * Format: int32
     * @description 操作<br/>
     * 2 = SUSPEND，挂起<br/>
     * 3 = RECOVERY，恢复<br/>
     * 4 = STARTED，开工<br/>
     * 5 = FINISHED，完工
     * @enum {number}
     */
    Action: number | null;
    /** @description 备注说明 */
    Remark?: string;
  };
  /** @description 不带分页的JSON泛型LIST返回类型 */
  'LLJsonResult[BaseSelectDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['BaseSelectDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 维修保养工单保存请求参数（空白自建工单） */
  WorkOrderSaveReqDto: {
    /** @description 工单ID */
    Id?: string;
    /** @description 派工班组ID */
    ShiftTeamId: string;
    /** @description 是否需要检查 */
    BNeedCheck?: boolean;
    /** @description 检查人编码 */
    CheckPerson?: string;
    /** @description 维修保养人员编码 */
    SolvePerson: string;
    /** @description 异常类型编码-来源数据字典 */
    ExTypeCode: string;
    /** @description 故障分类ID */
    FaultClassId: string;
    /** @description 故障简述 */
    FaultDesc?: string;
    /** @description 故障情况拍照 */
    FaultPicList?: string[];
    /** @description 紧急程度编码-来源数据字典 */
    UrgencyLevelCode: string;
    /** @description 单号 */
    DocNo?: string;
    /**
     * Format: int32
     * @description 单据类型<br/>
     * 1 = REPAIR，维修<br/>
     * 2 = KEEP，保养<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    DocType: number | null;
    /**
     * Format: int32
     * @description 对象类型<br/>
     * 1 = MOLD，模具<br/>
     * 2 = DEVICE，设备<br/>
     * -1 = ALL，全部
     * @enum {number}
     */
    ObjType: number | null;
    /** @description 对象ID */
    ObjId: string;
    /** @description 所属车间ID */
    WorkShopId: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[Int32]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 获取 返回数据
     */
    data: number | null;
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 开始维修保养请求参数 */
  WorkOrderHandleReqDto: {
    /** @description 工单ID */
    Id: string;
  };
  /** @description 工单完工请求参数 */
  WorkOrderDoneReqDto: {
    /** @description 检查说明 */
    CheckDesc?: string;
    /** @description 维修保养方法 */
    SolveMethod?: string;
    /** @description 维修保养说明 */
    SolveDesc?: string;
    /** @description 实际维修保养人员 */
    SolvePersons?: string[];
    /** @description 维修保养情况拍照（多个竖线分割） */
    SolvePicList?: string[];
    /** @description 备件耗用列表 */
    PartDtos?: definitions['WorkOrderPartBaseDto'][];
    /** @description 维修保养单项明细 */
    ItemDtos?: definitions['WxByItemDetailDto'][];
    /** @description 是否彻底完工 */
    BFinished?: boolean;
    /** @description 工单ID */
    Id: string;
  };
  /** @description 维修保养工单备件基础信息 */
  WorkOrderPartBaseDto: {
    /** @description 备件编码 */
    cInvCode?: string;
    /** @description 备件名称 */
    cInvName?: string;
    /** @description 备件规格 */
    cInvStd?: string;
    /** @description 计量单位 */
    UnitName?: string;
    /**
     * Format: double
     * @description 数量
     */
    Qty?: number | null;
    /** @description 备注/说明 */
    Remark?: string;
    /** @description 备件情况拍照 */
    SolvePicList?: string[];
  };
  /** @description 维修保养项目详细Dto */
  WxByItemDetailDto: {
    /** @description ID */
    Id?: string;
    /** @description 项目编码 */
    ItemCode?: string;
    /** @description 项目名称 */
    ItemName?: string;
    /** @description 备注/说明 */
    Remark?: string;
    /** @description 图片列表多个|隔开 */
    Pics?: string;
    /** @description 图片列表 */
    PicList?: string[];
    /**
     * Format: int32
     * @description 来源<br/>
     * 1 = ORDER，工单<br/>
     * 2 = WXBYITEM，计划
     * @enum {number}
     */
    Source?: number | null;
    /** @description 是否完成 */
    BComplete?: boolean;
  };
  /** @description 查询设备模具信息请求Dto */
  QueryDeviceAndMoldInfoReqDto: {
    /**
     * Format: int32
     * @description 单据类型<br/>
     * 1 = REPAIR，维修<br/>
     * 2 = KEEP，保养<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    DocType?: number | null;
    /**
     * Format: int32
     * @description 对象类型<br/>
     * 1 = MOLD，模具<br/>
     * 2 = DEVICE，设备<br/>
     * -1 = ALL，全部
     * @enum {number}
     */
    ObjType?: number | null;
    /** @description 是否通知单 */
    BNoticeDoc?: boolean;
    /** @description 单据ID */
    Id?: string;
    /**
     * Format: int32
     * @description 查询方式<br/>
     * 0 = ALL，默认<br/>
     * 1 = FIRST，第一张<br/>
     * 2 = PREVIOUS，上一页<br/>
     * 3 = NEXT，下一页<br/>
     * 4 = FINAL，最后一页
     * @enum {number}
     */
    Way?: number | null;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[WorkOrderInfoDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['WorkOrderInfoDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 维修保养工单信息 */
  WorkOrderInfoDto: {
    /** @description ID */
    Id?: string;
    /** @description 单号 */
    DocNo?: string;
    /**
     * Format: int32
     * @description 单据类型<br/>
     * 1 = REPAIR，维修<br/>
     * 2 = KEEP，保养<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    DocType?: number | null;
    /**
     * Format: int32
     * @description 对象类型<br/>
     * 1 = MOLD，模具<br/>
     * 2 = DEVICE，设备<br/>
     * -1 = ALL，全部
     * @enum {number}
     */
    ObjType?: number | null;
    /** @description 对象ID */
    ObjId?: string;
    /** @description 对象编码 */
    ObjCode?: string;
    /** @description 对象名称 */
    ObjName?: string;
    /** @description 所属车间ID */
    WorkShopId?: string;
    /** @description 所在车间 */
    WorkShop?: string;
    /** @description 班组ID */
    ShiftTeamId?: string;
    /** @description 班组 */
    ShiftTeam?: string;
    /** @description 维修保养申请单ID */
    ApplyDocId?: string;
    /** @description 申请单号 */
    ApplyDocNo?: string;
    /** @description 异常类型编码-来源数据字典 */
    ExTypeCode?: string;
    /** @description 异常类型 */
    ExType?: string;
    /** @description 故障分类ID */
    FaultClassId?: string;
    /** @description 异常分类 */
    FaultClass?: string;
    /** @description 故障简述 */
    FaultDesc?: string;
    /** @description 故障情况拍照 */
    FaultPicList?: string[];
    /** @description 紧急程度编码-来源数据字典 */
    UrgencyLevelCode?: string;
    /** @description 紧急程度 */
    UrgencyLevel?: string;
    /** @description 申请人 */
    ApplyUser?: string;
    /** @description 检查人编码 */
    CheckPerson?: string;
    /** @description 维修保养人员编码 */
    SolvePerson?: string;
    /** @description 维修保养人 */
    SolvePersonName?: string;
    /** @description 检查说明 */
    CheckDesc?: string;
    /** @description 维修保养方法 */
    SolveMethod?: string;
    /** @description 维修保养说明 */
    SolveDesc?: string;
    /** @description 维修保养情况拍照 */
    SolvePicList?: string[];
    /** @description 开始维修保养时间 */
    SolveStartTimeStr?: string;
    /** @description 维修保养完成时间 */
    SolveDueTimeStr?: string;
    /**
     * Format: int32
     * @description 单据状态<br/>
     * 1 = WaitHandle，待处理<br/>
     * 2 = Handling，处理中<br/>
     * 3 = Finished，已完成<br/>
     * 4 = Closed，已关闭<br/>
     * 5 = Confirm，待确认<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    DocState?: number | null;
    /** @description 单据状态描述 */
    DocStateDesc?: string;
    /** @description 计划单号 */
    PlanCode?: string;
    /** @description 计划名称 */
    PlanName?: string;
    /** @description 项目 */
    ItemDtos?: definitions['WxByItemDetailDto'][];
    /** @description 子表集合 */
    PartDtos?: definitions['WorkOrderPartBaseDto'][];
    /** @description 是否最后一张单据 */
    bLast?: boolean;
    /** @description 是否第一张单据 */
    bFirst?: boolean;
    /** @description 是否中间单据 */
    bCenter?: boolean;
  };
  /** @description 查询工单分页请求参数实体 */
  QueryWorkOrderPageReqDto: {
    /**
     * Format: int32
     * @description 作业对象类型<br/>
     * 1 = MOLD，模具<br/>
     * 2 = DEVICE，设备<br/>
     * -1 = ALL，全部
     * @enum {number}
     */
    ObjType?: number | null;
    /** @description 作业车间ID */
    WorkShopId?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 1 = WaitHandle，待处理<br/>
     * 2 = Handling，处理中<br/>
     * 3 = Finished，已完成<br/>
     * 4 = Closed，已关闭<br/>
     * 5 = Confirm，待确认<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    DocState?: number | null;
    /**
     * Format: int32
     * @description 单据类型<br/>
     * 1 = REPAIR，维修<br/>
     * 2 = KEEP，保养<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    DocType?: number | null;
    /** @description 开始时间 */
    StartDate?: string;
    /** @description 结束时间 */
    EndDate?: string;
    /** @description 故障分类ID */
    FaultClassId?: string;
    /** @description 维修保养人编码 */
    SolvePerson?: string;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[WorkOrderListDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['WorkOrderListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 维修保养工单列表实体 */
  WorkOrderListDto: {
    /** @description ID */
    Id?: string;
    /** @description 工单号 */
    DocNo?: string;
    /**
     * Format: int32
     * @description 单据类型<br/>
     * 1 = REPAIR，维修<br/>
     * 2 = KEEP，保养<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    DocType?: number | null;
    /** @description 单据类型 */
    DocTypeDesc?: string;
    /**
     * Format: int32
     * @description 对象类型<br/>
     * 1 = MOLD，模具<br/>
     * 2 = DEVICE，设备<br/>
     * -1 = ALL，全部
     * @enum {number}
     */
    ObjType?: number | null;
    /** @description 对象类型 */
    ObjTypeDesc?: string;
    /** @description 对象ID */
    ObjId?: string;
    /** @description 对象编码 */
    ObjCode?: string;
    /** @description 对象名称 */
    ObjName?: string;
    /** @description 所属车间ID */
    WorkShopId?: string;
    /** @description 所在车间 */
    WorkShop?: string;
    /** @description 维修保养申请单ID */
    ApplyDocId?: string;
    /** @description 申请单号 */
    ApplyDocNo?: string;
    /** @description 异常类型编码-来源数据字典 */
    ExTypeCode?: string;
    /** @description 异常类型 */
    ExType?: string;
    /** @description 故障分类ID */
    FaultClassId?: string;
    /** @description 异常分类 */
    FaultClass?: string;
    /** @description 故障简述 */
    FaultDesc?: string;
    /** @description 故障情况拍照 */
    FaultPicList?: string[];
    /** @description 紧急程度编码-来源数据字典 */
    UrgencyLevelCode?: string;
    /** @description 紧急程度 */
    UrgencyLevel?: string;
    /** @description 申请人 */
    ApplyUser?: string;
    /** @description 检查人编码 */
    CheckPerson?: string;
    /** @description 检查人名字 */
    CheckPersonName?: string;
    /** @description 维修保养人员编码 */
    SolvePerson?: string;
    /** @description 维修保养人 */
    SolvePersonName?: string;
    /** @description 检查说明 */
    CheckDesc?: string;
    /** @description 维修保养方法 */
    SolveMethod?: string;
    /** @description 维修保养说明 */
    SolveDesc?: string;
    /** @description 维修保养情况拍照 */
    SolvePicList?: string[];
    /** @description 开始维修保养时间 */
    SolveStartTimeStr?: string;
    /** @description 维修保养完成时间 */
    SolveDueTimeStr?: string;
    /**
     * Format: int32
     * @description 单据状态<br/>
     * 1 = WaitHandle，待处理<br/>
     * 2 = Handling，处理中<br/>
     * 3 = Finished，已完成<br/>
     * 4 = Closed，已关闭<br/>
     * 5 = Confirm，待确认<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    DocState?: number | null;
    /** @description 单据状态描述 */
    DocStateDesc?: string;
    /** @description 计划单号 */
    PlanCode?: string;
    /** @description 计划名称 */
    PlanName?: string;
  };
  /** @description 车间档案保存参数实体 */
  WorkShopSaveReqDto: {
    /** @description ID修改需传 */
    Id?: string;
    /** @description 车间编码 */
    Code?: string;
    /** @description 车间名称 */
    Name: string;
    /** @description 开始工作时间 */
    WorkStartTime: string;
    /** @description 结束工作时间 */
    WorkEndTime: string;
    /** @description 工作中心编码-来源U8工作中心 */
    WcCode?: string;
    /** @description 工作中心-来源U8工作中心 */
    WcName?: string;
    /** @description 关联部门编码 */
    DeptCode?: string;
    /** @description 关联部门名称 */
    DeptName?: string;
    /** @description 负责人名称-来源U8人员档案 */
    Principal?: string;
    /** @description 负责人编码-来源U8人员档案 */
    PrincipalCode?: string;
    /** @description 备注/说明 */
    Remark?: string;
    /** @description 是否启用 */
    IsEnabled?: boolean;
    /** @description 是否启用 */
    IsEnabledStr?: string;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[WorkShopInfoDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['WorkShopInfoDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 车间明细信息实体 */
  WorkShopInfoDto: {
    /** @description ID */
    Id?: string;
    /** @description 创建人 */
    CreatedUserName?: string;
    /**
     * Format: date-time
     * @description 创建时间
     */
    CreatedTime?: string;
    /** @description 车间编码 */
    Code?: string;
    /** @description 车间名称 */
    Name: string;
    /** @description 开始工作时间 */
    WorkStartTime: string;
    /** @description 结束工作时间 */
    WorkEndTime: string;
    /** @description 工作中心编码-来源U8工作中心 */
    WcCode?: string;
    /** @description 工作中心-来源U8工作中心 */
    WcName?: string;
    /** @description 关联部门编码 */
    DeptCode?: string;
    /** @description 关联部门名称 */
    DeptName?: string;
    /** @description 负责人名称-来源U8人员档案 */
    Principal?: string;
    /** @description 负责人编码-来源U8人员档案 */
    PrincipalCode?: string;
    /** @description 备注/说明 */
    Remark?: string;
    /** @description 是否启用 */
    IsEnabled?: boolean;
    /** @description 是否启用 */
    IsEnabledStr?: string;
  };
  /** @description 设备/模具维修申请记录保存请求Dto */
  WxByApplyDocSaveReqDto: {
    /** @description 修改时传入的ID */
    Id?: string;
    /** @description 作业单主表ID */
    JobId?: string;
    /** @description 异常类型编码-来源数据字典 */
    ExTypeCode: string;
    /** @description 故障分类ID */
    FaultClassId: string;
    /** @description 故障简述 */
    FaultDesc: string;
    /** @description 故障情况拍照集合 */
    FaultPicList?: string[];
    /** @description 紧急程度编码-来源数据字典 */
    UrgencyLevelCode: string;
    /** @description 申请人 */
    ApplyUser?: string;
    /** @description 是否停线 */
    BStopLine?: boolean;
    /** @description 是否需要派工 */
    BNeedShift?: boolean;
    /**
     * Format: int64
     * @description 派工班组ID
     */
    ShiftTeamId?: string;
    /** @description 单号 */
    DocNo?: string;
    /**
     * Format: int32
     * @description 单据类型<br/>
     * 1 = REPAIR，维修<br/>
     * 2 = KEEP，保养<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    DocType: number | null;
    /**
     * Format: int32
     * @description 对象类型<br/>
     * 1 = MOLD，模具<br/>
     * 2 = DEVICE，设备<br/>
     * -1 = ALL，全部
     * @enum {number}
     */
    ObjType: number | null;
    /** @description 对象ID */
    ObjId: string;
    /** @description 所属车间ID */
    WorkShopId: string;
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[WxByApplyDocInfoDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['WxByApplyDocInfoDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 申请单明细实体 */
  WxByApplyDocInfoDto: {
    /** @description 单据类型 */
    DocTypeName?: string;
    /** @description 单号 */
    DocNo?: string;
    /** @description 对象类型 */
    ObjTypeName?: string;
    /** @description 对象编码 */
    ObjCode?: string;
    /** @description 对象名称 */
    ObjName?: string;
    /** @description 申请车间 */
    WorkShop?: string;
    /** @description 作业单号 */
    JobDocNo?: string;
    /** @description 异常类型 */
    ExType?: string;
    /** @description 故障分类 */
    FaultClass?: string;
    /** @description 紧急程度 */
    UrgencyLevel?: string;
    /** @description 故障简述 */
    FaultDesc?: string;
    /** @description 申请人 */
    ApplyUser?: string;
    /** @description 产线状态 */
    StopLine?: string;
    /** @description 状态说明 */
    DocStateDesc?: string;
    /**
     * Format: date-time
     * @description 申报时间
     */
    CreatedTime?: string;
    /** @description 派单等待时长 */
    WaitShiftTime?: string;
    /** @description 开工等待时长 */
    WaitStartTime?: string;
    /** @description 开工处理时长 */
    WaitHandleTime?: string;
    /** @description 完工确认时长 */
    WaitDoneTime?: string;
    /** @description 制单人 */
    CreatedUserName?: string;
    /** @description 是否需要派工 */
    BNeedShiftStr?: string;
    /** @description 班组名称 */
    ShiftTeamName?: string;
    /** @description 申请单ID */
    Id?: string;
    /**
     * Format: int32
     * @description 单据类型<br/>
     * 1 = REPAIR，维修<br/>
     * 2 = KEEP，保养<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    DocType?: number | null;
    /**
     * Format: int32
     * @description 对象类型<br/>
     * 1 = MOLD，模具<br/>
     * 2 = DEVICE，设备<br/>
     * -1 = ALL，全部
     * @enum {number}
     */
    ObjType?: number | null;
    /** @description 对象ID */
    ObjId?: string;
    /** @description 所属车间ID */
    WorkShopId?: string;
    /** @description 作业单主表ID */
    JobId?: string;
    /** @description 异常类型编码-来源数据字典 */
    ExTypeCode?: string;
    /** @description 故障分类ID */
    FaultClassId?: string;
    /** @description 紧急程度编码-来源数据字典 */
    UrgencyLevelCode?: string;
    /** @description 是否停线 */
    BStopLine?: boolean;
    /** @description 故障图片集合 */
    FaultPicList?: string[];
    /**
     * Format: int32
     * @description 状态<br/>
     * 1 = WAIT_DISPATCH，待派工<br/>
     * 2 = WAIT_REPAIR，待维修<br/>
     * 3 = REPAIRING，维修中<br/>
     * 4 = REPAIR_FINISH，维修完成<br/>
     * 5 = WAIT_KEEP，待保养<br/>
     * 6 = KEEPING，保养中<br/>
     * 7 = KEEP_FINISH，保养完成<br/>
     * 8 = CLOSED，已关闭<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    DocState?: number | null;
    /**
     * Format: date-time
     * @description 派单时间
     */
    ShiftTime?: string;
    /**
     * Format: int64
     * @description 班组ID
     */
    ShiftTeamId?: string;
    /** @description 是否需要派工 */
    BNeedShift?: boolean;
    /** @description 是否最后一张单据 */
    bLast?: boolean;
    /** @description 是否第一张单据 */
    bFirst?: boolean;
    /** @description 是否中间单据 */
    bCenter?: boolean;
  };
  /** @description 查询设备/模具维修申请记录分页请求Dto */
  QueryWxByApplyDocPageReqDto: {
    /**
     * Format: int32
     * @description 作业对象类型<br/>
     * 1 = MOLD，模具<br/>
     * 2 = DEVICE，设备<br/>
     * -1 = ALL，全部
     * @enum {number}
     */
    ObjType?: number | null;
    /** @description 作业车间ID */
    WorkShopId?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 1 = WAIT_DISPATCH，待派工<br/>
     * 2 = WAIT_REPAIR，待维修<br/>
     * 3 = REPAIRING，维修中<br/>
     * 4 = REPAIR_FINISH，维修完成<br/>
     * 5 = WAIT_KEEP，待保养<br/>
     * 6 = KEEPING，保养中<br/>
     * 7 = KEEP_FINISH，保养完成<br/>
     * 8 = CLOSED，已关闭<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    DocState?: number | null;
    /**
     * Format: int32
     * @description 单据类型<br/>
     * 1 = REPAIR，维修<br/>
     * 2 = KEEP，保养<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    DocType?: number | null;
    /** @description 开始时间 */
    StartDate?: string;
    /** @description 结束时间 */
    EndDate?: string;
    /** @description 故障分类ID */
    FaultClassId?: string;
    /** @description 设备/模具Id */
    ObjId?: string;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[WxByApplyDocInfoDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['WxByApplyDocInfoDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 申请单派工请求参数 */
  ApplyShiftReqDto: {
    /** @description 申请单ID */
    Id: string;
    /** @description 派工班组ID */
    ShiftTeamId: string;
    /** @description 派工人编码 */
    ShiftPerson?: string;
    /**
     * Format: int32
     * @description 处理方式<br/>
     * 1 = NO_HANDLE，不予处理<br/>
     * 2 = IMMEDIATELY_HANDLE，立即处理<br/>
     * 3 = TURN_OUTSIDE，转委外<br/>
     * 4 = DELAY_HANDLE，延迟处理<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    HandleWay: number | null;
    /** @description 是否需要检查 */
    BNeedCheck?: boolean;
    /** @description 检查人编码 */
    CheckPerson?: string;
    /** @description 派工说明 */
    HandleDesc?: string;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LLPJsonResult[WxByNoticeDocListDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['WxByNoticeDocListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 维修保养通知单列表Dto */
  WxByNoticeDocListDto: {
    /** @description 通知单ID */
    Id?: string;
    /** @description 计划ID */
    PlanId?: string;
    /** @description 计划单号 */
    PlanCode?: string;
    /** @description 计划名称 */
    PlanName?: string;
    /** @description 单据类型 */
    DocTypeDesc?: string;
    /** @description 对象类型 */
    ObjTypeDesc?: string;
    /** @description 对象编码 */
    ObjCode?: string;
    /** @description 对象名称 */
    ObjName?: string;
    /** @description 所在车间 */
    WorkShop?: string;
    /**
     * Format: int32
     * @description 维修保养类型<br/>
     * 1 = PERIOD，周期性维修保养<br/>
     * 2 = USENUM，累计使用次数维修保养<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    HandleType?: number | null;
    /** @description 维修保养类型 */
    HandleTypeDesc?: string;
    /**
     * Format: int32
     * @description 周期单位<br/>
     * 0 = HOUR，小时<br/>
     * 1 = DAY，天<br/>
     * 2 = WEEK，周<br/>
     * 3 = MONTH，月<br/>
     * 4 = YEAR，年<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    PeriodUnit?: number | null;
    /** @description 周期单位名称 */
    PeriodUnitName?: string;
    /**
     * Format: int32
     * @description 周期
     */
    Period?: number | null;
    /**
     * Format: int32
     * @description 最大使用次数
     */
    MaxNum?: number | null;
    /**
     * Format: int32
     * @description 累计使用次数
     */
    UsedNum?: number | null;
    /**
     * Format: int32
     * @description 当前周期内使用次数
     */
    PeriodUsedNum?: number | null;
    /**
     * Format: int32
     * @description 状态<br/>
     * 1 = WAIT_DISPATCH，待派工<br/>
     * 2 = WAIT_REPAIR，待维修<br/>
     * 3 = REPAIRING，维修中<br/>
     * 4 = REPAIR_FINISH，维修完成<br/>
     * 5 = WAIT_KEEP，待保养<br/>
     * 6 = KEEPING，保养中<br/>
     * 7 = KEEP_FINISH，保养完成<br/>
     * 8 = CLOSED，已关闭<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    DocState?: number | null;
    /** @description 状态说明 */
    DocStateDesc?: string;
    /** @description 待处理时间 */
    WaitHandleTime?: string;
    /**
     * Format: date-time
     * @description 上次保养日期
     */
    PreHandleDate?: string;
    /**
     * Format: date-time
     * @description 制单时间
     */
    CreatedTime?: string;
    /** @description 单号 */
    DocNo?: string;
    /**
     * Format: int32
     * @description 单据类型<br/>
     * 1 = REPAIR，维修<br/>
     * 2 = KEEP，保养<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    DocType: number | null;
    /**
     * Format: int32
     * @description 对象类型<br/>
     * 1 = MOLD，模具<br/>
     * 2 = DEVICE，设备<br/>
     * -1 = ALL，全部
     * @enum {number}
     */
    ObjType: number | null;
    /** @description 对象ID */
    ObjId: string;
    /** @description 所属车间ID */
    WorkShopId: string;
  };
  /** @description 维修保养计划保存Dto */
  WxByPlanSaveDto: {
    /** @description 计划ID(修改) */
    Id?: string;
    /** @description 计划名称 */
    PlanName: string;
    /**
     * Format: int32
     * @description 维修保养类型<br/>
     * 1 = PERIOD，周期性维修保养<br/>
     * 2 = USENUM，累计使用次数维修保养<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    HandleType: number | null;
    /**
     * Format: int32
     * @description 周期单位<br/>
     * 0 = HOUR，小时<br/>
     * 1 = DAY，天<br/>
     * 2 = WEEK，周<br/>
     * 3 = MONTH，月<br/>
     * 4 = YEAR，年<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    PeriodUnit?: number | null;
    /**
     * Format: int32
     * @description 周期
     */
    Period?: number | null;
    /**
     * Format: int32
     * @description 提前通知天数
     */
    NoticeDays?: number | null;
    /** @description 是否按工作时间来计算 */
    BCalcByWorkTime?: boolean;
    /**
     * Format: int32
     * @description 最大使用次数
     */
    MaxNum?: number | null;
    /**
     * Format: int32
     * @description 提前通知次数
     */
    NoticeNum?: number | null;
    /**
     * Format: date-time
     * @description 上次保养日期
     */
    PreHandleDate: string;
    /** @description 备注 */
    Remark?: string;
    /** @description 维修保养项目列表 */
    ItemDtos?: definitions['WxByItemBaseDto'][];
    /** @description 单号 */
    DocNo?: string;
    /**
     * Format: int32
     * @description 单据类型<br/>
     * 1 = REPAIR，维修<br/>
     * 2 = KEEP，保养<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    DocType: number | null;
    /**
     * Format: int32
     * @description 对象类型<br/>
     * 1 = MOLD，模具<br/>
     * 2 = DEVICE，设备<br/>
     * -1 = ALL，全部
     * @enum {number}
     */
    ObjType: number | null;
    /** @description 对象ID */
    ObjId: string;
    /** @description 所属车间ID */
    WorkShopId: string;
  };
  /** @description 维修保养项目基础Dto */
  WxByItemBaseDto: {
    /** @description ID */
    Id?: string;
    /** @description 项目编码 */
    ItemCode: string;
    /** @description 项目名称 */
    ItemName: string;
    /** @description 备注/说明 */
    Remark?: string;
    /** @description 备件列表 */
    PartDtos?: definitions['WorkOrderPartBaseDto'][];
  };
  /** @description 不带分页的JSON泛型返回类型 */
  'LJsonResult[WxByPlanInfoDto]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['WxByPlanInfoDto'];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 维修保养计划明细实体 */
  WxByPlanInfoDto: {
    /** @description ID */
    Id?: string;
    /** @description 单号 */
    DocNo?: string;
    /** @description 计划名称 */
    PlanName?: string;
    /**
     * Format: int32
     * @description 单据类型<br/>
     * 1 = REPAIR，维修<br/>
     * 2 = KEEP，保养<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    DocType?: number | null;
    /**
     * Format: int32
     * @description 对象类型<br/>
     * 1 = MOLD，模具<br/>
     * 2 = DEVICE，设备<br/>
     * -1 = ALL，全部
     * @enum {number}
     */
    ObjType?: number | null;
    /** @description 对象ID */
    ObjId?: string;
    /** @description 对象编码 */
    ObjCode?: string;
    /** @description 对象名称 */
    ObjName?: string;
    /** @description 所属车间ID */
    WorkShopId?: string;
    /** @description 所在车间 */
    WorkShop?: string;
    /**
     * Format: int32
     * @description 维修保养类型<br/>
     * 1 = PERIOD，周期性维修保养<br/>
     * 2 = USENUM，累计使用次数维修保养<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    HandleType?: number | null;
    /**
     * Format: int32
     * @description 周期单位<br/>
     * 0 = HOUR，小时<br/>
     * 1 = DAY，天<br/>
     * 2 = WEEK，周<br/>
     * 3 = MONTH，月<br/>
     * 4 = YEAR，年<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    PeriodUnit?: number | null;
    /**
     * Format: int32
     * @description 周期
     */
    Period?: number | null;
    /**
     * Format: int32
     * @description 提前通知天数
     */
    NoticeDays?: number | null;
    /** @description 是否按工作时间来计算 */
    BCalcByWorkTime?: boolean;
    /**
     * Format: int32
     * @description 最大使用次数
     */
    MaxNum?: number | null;
    /**
     * Format: int32
     * @description 提前通知次数
     */
    NoticeNum?: number | null;
    /**
     * Format: int32
     * @description 累计使用次数
     */
    UsedNum?: number | null;
    /**
     * Format: int32
     * @description 当前周期内使用次数
     */
    PeriodUsedNum?: number | null;
    /** @description 审核意见 */
    AuditRmind?: string;
    /**
     * Format: int32
     * @description 审核状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = PENDING，待审核<br/>
     * 2 = AUDITED，已审核<br/>
     * 3 = REJECT，驳回
     * @enum {number}
     */
    AuditState?: number | null;
    /** @description 审核人名称 */
    AuditorName?: string;
    /**
     * Format: date-time
     * @description 审核时间
     */
    AuditTime?: string;
    /** @description 备注 */
    Remark?: string;
    /**
     * Format: date-time
     * @description 制单时间
     */
    CreatedTime?: string;
    /** @description 制单人 */
    CreatedUserName?: string;
    /**
     * Format: date-time
     * @description 上次保养日期
     */
    PreHandleDate?: string;
    /** @description 子表集合 */
    ItemDtos?: definitions['WxByItemBaseDto'][];
    /** @description 是否最后一张单据 */
    bLast?: boolean;
    /** @description 是否第一张单据 */
    bFirst?: boolean;
    /** @description 是否中间单据 */
    bCenter?: boolean;
  };
  /** @description 查询维修保养计划分页请求Dto */
  QueryWxByPlanPageReqDto: {
    /**
     * Format: int32
     * @description 对象类型<br/>
     * 1 = MOLD，模具<br/>
     * 2 = DEVICE，设备<br/>
     * -1 = ALL，全部
     * @enum {number}
     */
    ObjType?: number | null;
    /** @description 作业车间ID */
    WorkShopId?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = PENDING，待审核<br/>
     * 2 = AUDITED，已审核<br/>
     * 3 = REJECT，驳回
     * @enum {number}
     */
    DocState?: number | null;
    /**
     * Format: int32
     * @description 单据类型<br/>
     * 1 = REPAIR，维修<br/>
     * 2 = KEEP，保养<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    DocType?: number | null;
    /**
     * Format: int32
     * @description 维修保养类型<br/>
     * 1 = PERIOD，周期性维修保养<br/>
     * 2 = USENUM，累计使用次数维修保养<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    HandleType?: number | null;
    /** @description 开始时间 */
    StartDate?: string;
    /** @description 结束时间 */
    EndDate?: string;
    /**
     * Format: int32
     * @description 总记录数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /**
     * Format: int32
     * @description 每页条数
     */
    limit?: number | null;
    /**
     * Format: int32
     * @description 页码
     */
    page?: number | null;
    /** @description 查询关键字 */
    keyWord?: string;
    /**
     * Format: int32
     * @description 状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = ENABLE，启用<br/>
     * 2 = DISANLE，禁用
     * @enum {number}
     */
    state?: number | null;
  };
  /** @description 带分页的JSON返回泛型实体 */
  'LPJsonResult[List[WxByPlanListDto]]': {
    /**
     * Format: int32
     * @description 操作结果类型<br/>
     * 0 = success，<br/>
     * 200 = info，<br/>
     * 204 = empty，<br/>
     * 206 = alert，<br/>
     * 300 = warning，<br/>
     * 1001 = logout，<br/>
     * -403 = authlimit，<br/>
     * -401 = noauth，<br/>
     * -300 = error，
     * @enum {number}
     */
    code?: number | null;
    /**
     * Format: int32
     * @description 总数
     */
    count?: number | null;
    /**
     * Format: int32
     * @description 总页数
     */
    pages?: number | null;
    /** @description 获取 返回数据 */
    data: definitions['WxByPlanListDto'][];
    /** @description 获取 消息内容 */
    msg?: string;
  };
  /** @description 维修保养计划列表Dto */
  WxByPlanListDto: {
    /** @description 计划ID */
    Id?: string;
    /** @description 计划名称 */
    PlanName?: string;
    /** @description 单据类型 */
    DocTypeDesc?: string;
    /** @description 对象类型 */
    ObjTypeDesc?: string;
    /** @description 对象编码 */
    ObjCode?: string;
    /** @description 对象名称 */
    ObjName?: string;
    /** @description 所在车间 */
    WorkShop?: string;
    /**
     * Format: int32
     * @description 维修保养类型<br/>
     * 1 = PERIOD，周期性维修保养<br/>
     * 2 = USENUM，累计使用次数维修保养<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    HandleType?: number | null;
    /** @description 维修保养类型 */
    HandleTypeDesc?: string;
    /**
     * Format: int32
     * @description 周期单位<br/>
     * 0 = HOUR，小时<br/>
     * 1 = DAY，天<br/>
     * 2 = WEEK，周<br/>
     * 3 = MONTH，月<br/>
     * 4 = YEAR，年<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    PeriodUnit?: number | null;
    /** @description 周期单位名称 */
    PeriodUnitName?: string;
    /**
     * Format: int32
     * @description 周期
     */
    Period?: number | null;
    /**
     * Format: int32
     * @description 提前通知天数
     */
    NoticeDays?: number | null;
    /** @description 是否按工作时间来计算 */
    BCalcByWorkTime?: boolean;
    /** @description 是否按工作时间来计算 */
    BCalcByWorkTimeStr?: string;
    /**
     * Format: int32
     * @description 最大使用次数
     */
    MaxNum?: number | null;
    /**
     * Format: int32
     * @description 提前通知次数
     */
    NoticeNum?: number | null;
    /**
     * Format: int32
     * @description 累计使用次数
     */
    UsedNum?: number | null;
    /**
     * Format: int32
     * @description 当前周期内使用次数
     */
    PeriodUsedNum?: number | null;
    /**
     * Format: date-time
     * @description 上次保养日期
     */
    PreHandleDate?: string;
    /** @description 审核意见 */
    AuditRmind?: string;
    /**
     * Format: int32
     * @description 审核状态<br/>
     * 0 = ALL，全部<br/>
     * 1 = PENDING，待审核<br/>
     * 2 = AUDITED，已审核<br/>
     * 3 = REJECT，驳回
     * @enum {number}
     */
    AuditState?: number | null;
    /** @description 审核人名称 */
    AuditorName?: string;
    /**
     * Format: date-time
     * @description 审核时间
     */
    AuditTime?: string;
    /** @description 备注 */
    Remark?: string;
    /**
     * Format: date-time
     * @description 制单时间
     */
    CreatedTime?: string;
    /** @description 制单人 */
    CreatedUserName?: string;
    /** @description 单号 */
    DocNo?: string;
    /**
     * Format: int32
     * @description 单据类型<br/>
     * 1 = REPAIR，维修<br/>
     * 2 = KEEP，保养<br/>
     * 100 = ALL，全部
     * @enum {number}
     */
    DocType: number | null;
    /**
     * Format: int32
     * @description 对象类型<br/>
     * 1 = MOLD，模具<br/>
     * 2 = DEVICE，设备<br/>
     * -1 = ALL，全部
     * @enum {number}
     */
    ObjType: number | null;
    /** @description 对象ID */
    ObjId: string;
    /** @description 所属车间ID */
    WorkShopId: string;
  };
}

export interface operations {
  ASN_NewInit: {
    parameters: {
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[ASNHeadDto]'];
      };
    };
  };
  ASN_SaveOrder: {
    parameters: {
      body: {
        dto: definitions['ASNSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  ASN_DeleteOrder: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  ASN_AuditOrder: {
    parameters: {
      body: {
        dto: definitions['BaseAuditReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  ASN_QueryCodeSelect: {
    parameters: {
      query: {
        keyWord?: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[String]]'];
      };
    };
  };
  ASN_QueryInfo: {
    parameters: {
      body: {
        dto: definitions['QueryVouchInfoBaseReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[ASNInfoDto]'];
      };
    };
  };
  ASN_QueryPage: {
    parameters: {
      body: {
        dto: definitions['QueryASNListReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[ASNListDto]]'];
      };
    };
  };
  ASN_Confirm: {
    parameters: {
      body: {
        dto: definitions['ASNConfirmReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  ASN_DynamicSave: {
    parameters: {
      body: {
        dto: definitions['ASNDynamicSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  ASN_QueryASNDynamicDtos: {
    parameters: {
      query: {
        mainId: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[ASNDynamicDto]]'];
      };
    };
  };
  ASN_ASNDelivery: {
    parameters: {
      body: {
        dto: definitions['ASNDeliveryReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  ASN_ASNPrint: {
    parameters: {
      body: {
        dto: definitions['ASNPrintReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BaseFileResDto]'];
      };
    };
  };
  ASN_AsnBoxRawCode: {
    parameters: {
      body: {
        dto: definitions['ASNBoxRawCodeReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BarCodeFileResDto]'];
      };
    };
  };
  BarCode_Save: {
    parameters: {
      body: {
        dto: definitions['BarCodeSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  BarCode_UpdCodeQty: {
    parameters: {
      body: {
        dto: definitions['BarCodeUpdQtyReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BarCodeFileResDto]'];
      };
    };
  };
  BarCode_BarCodeCopy: {
    parameters: {
      body: {
        dto: definitions['BarCodeCopyReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BarCodeFileResDto]'];
      };
    };
  };
  BarCode_PrintCode: {
    parameters: {
      body: {
        dto: definitions['BarCodePrintReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BarCodeFileResDto]'];
      };
    };
  };
  BarCode_DataDel: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  BarCode_QueryPage: {
    parameters: {
      body: {
        dto: definitions['QueryBarCodePageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[BarCodeBaseDto]]'];
      };
    };
  };
  BarCode_QueryBarCodeInfo: {
    parameters: {
      query: {
        barCode: string;
        whCode?: string;
        posCode?: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BarCodeInfoDto]'];
      };
    };
  };
  BarCode_StockRawCode: {
    parameters: {
      body: {
        dto: definitions['StockBarCodeSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BarCodeFileResDto]'];
      };
    };
  };
  BarCode_QueryDataSourcePage: {
    parameters: {
      body: {
        dto: definitions['BasePageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[BarCodeDataSourceInfoDto]]'];
      };
    };
  };
  BarCode_DataSourceSave: {
    parameters: {
      body: {
        dto: definitions['BarCodeDataSourceSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  BarCode_SourceDel: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  CapacityCompare_Save: {
    parameters: {
      body: {
        dto: definitions['CapacityCompareSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  CapacityCompare_BlukDelete: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  CapacityCompare_QueryInfo: {
    parameters: {
      body: {
        dto: definitions['QueryCapacityCompareInfoReqDo'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[CapacityCompareInfoDto]'];
      };
    };
  };
  CapacityCompare_QueryDetail: {
    parameters: {
      body: {
        dto: definitions['QueryCapacityDetailReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[CapacityCompareInfoDto]'];
      };
    };
  };
  CapacityCompare_QueryCodes: {
    parameters: {
      query: {
        keyWord?: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[String]]'];
      };
    };
  };
  CapacityCompare_QueryPage: {
    parameters: {
      body: {
        dto: definitions['QueryCapacityComparePageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[CapacityCompareListDto]]'];
      };
    };
  };
  CapacityCompare_ExportData: {
    parameters: {
      body: {
        dto: definitions['QueryCapacityComparePageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BaseFileResDto]'];
      };
    };
  };
  CheckDetail_QueryCanCheckTaskNums: {
    parameters: {
      query: {
        keyWord?: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[BaseSelectDto]]'];
      };
    };
  };
  CheckDetail_TaskNumCheck: {
    parameters: {
      query: {
        taskNum: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  CheckDetail_LabelNumCheck: {
    parameters: {
      query: {
        /** 标签号 */
        labelNum: string;
        /** 盘点任务ID */
        taskId: string;
        /** 盘点明细ID */
        detailId?: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  CheckDetail_AddRecord: {
    parameters: {
      body: {
        dto: definitions['CheckDetailSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  CheckDetail_UpdRecord: {
    parameters: {
      body: {
        dto: definitions['CheckDetailUpdReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  CheckDetail_Delete: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  CheckDetail_QueryPdaPage: {
    parameters: {
      body: {
        dto: definitions['QueryCheckDetailPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[CheckDetailBaseDto]]'];
      };
    };
  };
  CheckDetail_QueryPage: {
    parameters: {
      body: {
        dto: definitions['QueryCheckDetailPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[CheckDetailListDto]]'];
      };
    };
  };
  CheckDetail_QueryImportTmp: {
    parameters: {
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BaseFileResDto]'];
      };
    };
  };
  CheckDetail_ImportData: {
    parameters: {
      query: {
        taskId: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  CheckDetail_ExportData: {
    parameters: {
      body: {
        dto: definitions['QueryCheckDetailPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BaseFileResDto]'];
      };
    };
  };
  CheckSummary_GetCode: {
    parameters: {
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  CheckSummary_DeleteData: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  CheckSummary_QueryTaskNumSelect: {
    parameters: {
      query: {
        keyWord?: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[BaseSelectDto]]'];
      };
    };
  };
  CheckSummary_QueryWhSelect: {
    parameters: {
      query: {
        taskId?: string;
        keyWord?: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[WarehouseBaseDto]]'];
      };
    };
  };
  CheckSummary_QueryPendingRecords: {
    parameters: {
      body: {
        dto: definitions['QueryPendingSummaryDetailReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[PendingSummaryDetailDto]]'];
      };
    };
  };
  CheckSummary_CalcSummaryList: {
    parameters: {
      body: {
        Ids: string[];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[CheckSummaryBodyDto]]'];
      };
    };
  };
  CheckSummary_SaveData: {
    parameters: {
      body: {
        dto: definitions['CheckSummaryAddReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  CheckSummary_UpdateData: {
    parameters: {
      body: {
        dto: definitions['CheckSummaryUpdDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  CheckSummary_QueryInfo: {
    parameters: {
      body: {
        dto: definitions['QueryVouchInfoBaseReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[CheckSummaryInfoDto]'];
      };
    };
  };
  CheckSummary_QueryPage: {
    parameters: {
      body: {
        dto: definitions['QueryCheckSummaryListReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[CheckSummaryListDto]]'];
      };
    };
  };
  CheckSummary_ExportData: {
    parameters: {
      body: {
        dto: definitions['QueryCheckSummaryListReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BaseFileResDto]'];
      };
    };
  };
  CheckSummary_WhCheck: {
    parameters: {
      query: {
        id: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  CheckSummary_DoAudit: {
    parameters: {
      body: {
        dto: definitions['BaseAuditReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  CheckSummary_QueryCodes: {
    parameters: {
      query: {
        keyWord?: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[BaseSelectDto]]'];
      };
    };
  };
  CheckTask_Save: {
    parameters: {
      body: {
        dto: definitions['CheckTaskSaveDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  CheckTask_UpdTaskState: {
    parameters: {
      body: {
        dto: definitions['CheckTaskActionDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  CheckTask_Delete: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  CheckTask_GetTaskNum: {
    parameters: {
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  CheckTask_QueryPage: {
    parameters: {
      body: {
        dto: definitions['QueryCheckTaskPageDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[CheckTaskListDto]]'];
      };
    };
  };
  CheckTask_QueryTaskNumsSelect: {
    parameters: {
      query: {
        keyWord?: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[BaseSelectDto]]'];
      };
    };
  };
  CheckVouch_QueryStagList: {
    parameters: {
      body: {
        dto: definitions['QueryCheckVouchStagDataReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[CheckVouchInvDto]]'];
      };
    };
  };
  CheckVouch_ClearStag: {
    parameters: {
      body: {
        dto: definitions['QueryCheckVouchStagDataReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  CheckVouch_VouchSave: {
    parameters: {
      body: {
        dto: definitions['CheckVouchSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  Dashboard_ConstIdxSaveJson: {
    parameters: {
      body: {
        dto: definitions['JsonSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  Dashboard_QueryBaoLuDashboardData: {
    parameters: {
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BaoLuDashboardResDto]'];
      };
    };
  };
  Device_Save: {
    parameters: {
      body: {
        dto: definitions['DeviceSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  Device_DicDataDel: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  Device_QueryInfo: {
    parameters: {
      query: {
        Id: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[DeviceInfoDto]'];
      };
    };
  };
  Device_QueryPage: {
    parameters: {
      body: {
        dto: definitions['QueryDevicePageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[DeviceInfoDto]]'];
      };
    };
  };
  Device_ExportData: {
    parameters: {
      body: {
        dto: definitions['QueryDevicePageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BaseFileResDto]'];
      };
    };
  };
  Device_QueryTree: {
    parameters: {
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[TreeSelectDto]]'];
      };
    };
  };
  Device_QueryWorkShopOpDevice: {
    parameters: {
      body: {
        dto: definitions['QueryDeviceByWorkShopAndOpReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LLJsonResult[WorkShopOpDeviceDto]'];
      };
    };
  };
  FaultClass_Save: {
    parameters: {
      body: {
        dto: definitions['FaultClassBaseDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  FaultClass_DicDataDel: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  FaultClass_QueryInfo: {
    parameters: {
      query: {
        Id: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[FaultClassInfoDto]'];
      };
    };
  };
  FaultClass_QueryPage: {
    parameters: {
      body: {
        dto: definitions['BasePageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[FaultClassInfoDto]]'];
      };
    };
  };
  FaultClass_QueryTypeTreeSelect: {
    parameters: {
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[TreeSelectDto]]'];
      };
    };
  };
  FaultClass_ExportData: {
    parameters: {
      body: {
        dto: definitions['BasePageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BaseFileResDto]'];
      };
    };
  };
  HyMoOrder_QueryHyMoIssueList: {
    parameters: {
      body: {
        dto: definitions['QueryHyMoIssueListReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[HyMoIssueListDto]]'];
      };
    };
  };
  HyMoOrder_QueryHyReviceList: {
    parameters: {
      body: {
        dto: definitions['QueryHyMoIssueListReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[HyMoReviceListDto]]'];
      };
    };
  };
  HyMoOrder_QueryHyMoOrderInfo: {
    parameters: {
      body: {
        dto: definitions['QueryHyMoOrderInfoReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[HyMoOrderInfoDto]'];
      };
    };
  };
  HyMoOrder_QueryHyReviceScanInfo: {
    parameters: {
      body: {
        dto: definitions['QueryHyMoOrderInfoReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[HyReviceScanInfoDto]'];
      };
    };
  };
  HyMoOrder_HyMoOrderSave: {
    parameters: {
      body: {
        dto: definitions['HyMoOrderSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  HyMoOrder_HyMoReviceSave: {
    parameters: {
      body: {
        dto: definitions['HyMoReviceSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  HyMoOrder_QueryReviceScrapPage: {
    parameters: {
      body: {
        dto: definitions['QueryHyMoReviceScrapReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[HyMoReviceScrapDto]]'];
      };
    };
  };
  LeaveDoc_QueryPage: {
    parameters: {
      body: {
        dto: definitions['QueryLeaveDocPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[LeaveDocInfoDto]]'];
      };
    };
  };
  LeaveDoc_LeaveDocSave: {
    parameters: {
      body: {
        dto: definitions['LeaveDocSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  LeaveDoc_LeaveDocDel: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  LeaveDoc_Init: {
    parameters: {
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  LeaveDoc_ExportData: {
    parameters: {
      body: {
        dto: definitions['QueryLeaveDocPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BaseFileResDto]'];
      };
    };
  };
  Login_GetAccList: {
    parameters: {
      body: {
        dto: definitions['QueryAccListReqDto'];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[UAccInfoRepDto]]'];
      };
    };
  };
  Login_DoLogin: {
    parameters: {
      body: {
        dto: definitions['LoginReqDto'];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[LoginResDto]'];
      };
    };
  };
  Login_DeviceAuth: {
    parameters: {
      body: {
        dto: definitions['AppDeviceLicenceBindReqDto'];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  Login_QueryPdaAuthList: {
    parameters: {
      query: {
        keyWord?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[BarCodeAuthDeviceEntity]]'];
      };
    };
  };
  Login_LicenceUnBind: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  Login_UpdatePdaRemark: {
    parameters: {
      query: {
        Id: string;
        Remark: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  Login_LogOut: {
    parameters: {
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  Login_KeepAlive: {
    parameters: {
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  Mold_Save: {
    parameters: {
      body: {
        dto: definitions['MoldSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  Mold_DicDataDel: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  Mold_QueryInfo: {
    parameters: {
      query: {
        Id: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[MoldInfoDto]'];
      };
    };
  };
  Mold_QueryPage: {
    parameters: {
      body: {
        dto: definitions['QueryMoldPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[MoldInfoDto]]'];
      };
    };
  };
  Mold_ExportData: {
    parameters: {
      body: {
        dto: definitions['QueryMoldPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BaseFileResDto]'];
      };
    };
  };
  Mold_RawCode: {
    parameters: {
      body: {
        dto: definitions['MoldBarCodeReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BarCodeFileResDto]'];
      };
    };
  };
  Mold_QueryTree: {
    parameters: {
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[TreeSelectDto]]'];
      };
    };
  };
  MomAPS_QueryNoComparePlanList: {
    parameters: {
      body: {
        dto: definitions['QueryAPSPlanListReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[APSPlanListDto]]'];
      };
    };
  };
  MomAPS_QueryAPSPlanList: {
    parameters: {
      body: {
        dto: definitions['QueryAPSPlanListReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[APSPlanListDto]]'];
      };
    };
  };
  MomAPS_QueryAPSWorkShopList: {
    parameters: {
      query: {
        keyWord?: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[APSWorkShopDto]]'];
      };
    };
  };
  MomAPS_QueryResList: {
    parameters: {
      body: {
        dto: definitions['QueryAPSResListReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[APSResDto]]'];
      };
    };
  };
  MomAPS_MomAutoAPS: {
    parameters: {
      body: {
        dto: definitions['PlanOpAutoAPSReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[PlanAPSInfoDto]'];
      };
    };
  };
  MomAPS_QueryResInfo: {
    parameters: {
      body: {
        dto: definitions['QueryResInfoReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[APSResInfoDto]'];
      };
    };
  };
  MomAPS_QueryMainList: {
    parameters: {
      body: {
        dto: definitions['QueryAPSMainPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[APSMainDto]]'];
      };
    };
  };
  MomAPS_QueryAPSInfoList: {
    parameters: {
      query: {
        apsId: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[PlanAPSInfoListDto]]'];
      };
    };
  };
  MomAPS_APSDelete: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  MomAPS_QueryDocInfo: {
    parameters: {
      body: {
        dto: definitions['QueryAPSDocInfoReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[PlanAPSInfoDto]'];
      };
    };
  };
  MomAPS_QueryCanShiftApsList: {
    parameters: {
      body: {
        dto: definitions['QueryCanShiftApsListReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[CanShiftApsListDto]]'];
      };
    };
  };
  MomAPS_ApsSave: {
    parameters: {
      body: {
        dto: definitions['MomAPSSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[PlanAPSInfoDto]'];
      };
    };
  };
  MomAPS_QueryInsertEffectList: {
    parameters: {
      body: {
        dto: definitions['QueryApsInsertEffectListReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[ApsInsertEffectListDto]]'];
      };
    };
  };
  MomPlanIssue_QueryMomIssueDetailList: {
    parameters: {
      body: {
        dto: definitions['QueryMomIssueDetailListReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[JHXDMomDetailDto]]'];
      };
    };
  };
  MomPlanIssue_Save: {
    parameters: {
      body: {
        dto: definitions['MomPlanIssueSaveDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  MomPlanIssue_QueryJHXDMrpList: {
    parameters: {
      body: {
        dto: definitions['QueryJHXDMrpListReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[JHXDMrpDetailDto]]'];
      };
    };
  };
  MomPlanIssue_DYPlanSave: {
    parameters: {
      body: {
        dto: definitions['MomPlanSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  MomPlanIssue_PlanEdit: {
    parameters: {
      body: {
        dto: definitions['MomPlanIssueEditDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  MomPlanIssue_DicDataDel: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  MomPlanIssue_QueryInfo: {
    parameters: {
      body: {
        dto: definitions['QueryInfoBaseReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[MomPlanIssueInfoDto]'];
      };
    };
  };
  MomPlanIssue_QueryPage: {
    parameters: {
      body: {
        dto: definitions['QueryMomPlanIssuePageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LLPJsonResult[MomPlanIssueInfoDto]'];
      };
    };
  };
  MomPlanIssue_RawCode: {
    parameters: {
      body: {
        dto: definitions['MomPlanIssueRawCodeReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BarCodeFileResDto]'];
      };
    };
  };
  MomPlanIssue_PlanClose: {
    parameters: {
      body: {
        dto: definitions['MomPlanIssueCloseReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  MomPlanIssue_PlanOpen: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  MomPlanIssue_ProSpect: {
    parameters: {
      body: {
        dto: definitions['MaterialProSpectReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[MaterialProSpectDto]]'];
      };
    };
  };
  MomPlanIssue_ProSpectExport: {
    parameters: {
      body: {
        dto: definitions['MaterialProSpectReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BaseFileResDto]'];
      };
    };
  };
  MomPlanIssue_PlanExport: {
    parameters: {
      body: {
        dto: definitions['QueryMomPlanIssuePageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BaseFileResDto]'];
      };
    };
  };
  MomPlanIssue_QueryMoAllocateIssueList: {
    parameters: {
      body: {
        dto: definitions['MaterialProSpectReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[MoAlloacteIssueDto]]'];
      };
    };
  };
  MomPlanIssue_PrintMaterialApp: {
    parameters: {
      body: {
        dto: definitions['MaterialAppPrintReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BaseFileListResDto]'];
      };
    };
  };
  MomRd_QueryMomRdInfo: {
    parameters: {
      query: {
        /** 入库单号/条码/ID */
        barCode: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LLJsonResult[MomRdInfoDto]'];
      };
    };
  };
  MomRd_QueryMomRdWaitAuditList: {
    parameters: {
      query: {
        keyWord?: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LLJsonResult[MomRdWaitAuditListDto]'];
      };
    };
  };
  MomRd_MomRdAudit: {
    parameters: {
      body: {
        dto: definitions['MomRdAuditReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  MomShift_QueryMomIssueDetailList: {
    parameters: {
      body: {
        dto: definitions['QueryMomShiftDetailPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[MomShiftDetailListDto]]'];
      };
    };
  };
  MomShift_Save: {
    parameters: {
      body: {
        dto: definitions['MomShiftSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  MomShift_ShiftDel: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  MomShift_QueryInfo: {
    parameters: {
      body: {
        dto: definitions['QueryVouchInfoBaseReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[MomShiftMainDto]'];
      };
    };
  };
  MomShift_QueryPage: {
    parameters: {
      body: {
        dto: definitions['QueryMomShiftPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[MomShiftListDto]]'];
      };
    };
  };
  MomShift_DoAudit: {
    parameters: {
      body: {
        dto: definitions['BaseAuditReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  MomShift_GetNewCode: {
    parameters: {
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  MomShift_MomShiftClose: {
    parameters: {
      body: {
        dto: definitions['MomShiftCloseReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  MomShift_QueryCodes: {
    parameters: {
      query: {
        keyWord?: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[BaseSelectDto]]'];
      };
    };
  };
  MomShift_QueryShiftTaskList: {
    parameters: {
      body: {
        dto: definitions['QueryShiftTaskPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[MoShiftTaskDto]]'];
      };
    };
  };
  MomShift_QueryShiftTransData: {
    parameters: {
      body: {
        dto: definitions['MomShiftTransReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[MomShiftMainDto]'];
      };
    };
  };
  MomShift_MomShiftPrint: {
    parameters: {
      body: {
        dto: definitions['MomShiftPrintReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BaseFileResDto]'];
      };
    };
  };
  MomShift_MomShiftFlowCardRawCode: {
    parameters: {
      body: {
        dto: definitions['BarCodeSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BarCodeFileResDto]'];
      };
    };
  };
  MoRoutingBill_QueryPage: {
    parameters: {
      body: {
        dto: definitions['QueryMoRoutingBillPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[MoRoutingBillListDto]]'];
      };
    };
  };
  MoRoutingBill_MoRoutingBillDel: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  MoRoutingBill_QueryInfo: {
    parameters: {
      body: {
        dto: definitions['QueryMoRoutingBillInfoReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[MoRoutingInfoDto]'];
      };
    };
  };
  MoRoutingBill_QueryCodes: {
    parameters: {
      query: {
        keyWord?: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[BaseSelectDto]]'];
      };
    };
  };
  MoRoutingBill_ExportData: {
    parameters: {
      body: {
        dto: definitions['QueryMoRoutingBillPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BaseFileResDto]'];
      };
    };
  };
  OMOrder_NewInit: {
    parameters: {
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[OMOrderHeadDto]'];
      };
    };
  };
  OMOrder_SaveOrder: {
    parameters: {
      body: {
        dto: definitions['OMOrderSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  OMOrder_DeleteOrder: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  OMOrder_AuditOrder: {
    parameters: {
      body: {
        dto: definitions['OMOrderAuditReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  OMOrder_QueryCodeSelect: {
    parameters: {
      query: {
        keyWord?: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[String]]'];
      };
    };
  };
  OMOrder_QueryInfo: {
    parameters: {
      body: {
        dto: definitions['QueryOMOrderInfoReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[OMOrderInfoDto]'];
      };
    };
  };
  OMOrder_QueryPage: {
    parameters: {
      body: {
        dto: definitions['QueryPoOrderPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[OMOrderListDto]]'];
      };
    };
  };
  Operation_Save: {
    parameters: {
      body: {
        dto: definitions['OperationSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  Operation_DicDataDel: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  Operation_QueryInfo: {
    parameters: {
      query: {
        Id: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[OperationInfoDto]'];
      };
    };
  };
  Operation_QueryPage: {
    parameters: {
      body: {
        dto: definitions['QueryOperationPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[OperationInfoDto]]'];
      };
    };
  };
  OpGroup_Save: {
    parameters: {
      body: {
        dto: definitions['OpGroupSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  OpGroup_DicDataDel: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  OpGroup_QueryInfo: {
    parameters: {
      body: {
        dto: definitions['QueryOpGroupInfoReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[OpGroupInfoDto]'];
      };
    };
  };
  OpGroup_QueryPage: {
    parameters: {
      body: {
        dto: definitions['BasePageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[OpGroupListDto]]'];
      };
    };
  };
  OpGroup_QueryDetailList: {
    parameters: {
      query: {
        mainId: string;
        keyWord?: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[OpGroupDetailDto]]'];
      };
    };
  };
  OpInspect_OpInspectQcAction: {
    parameters: {
      body: {
        dto: definitions['OpInspectQcAtionReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  OpInspect_QueryTaskPage: {
    parameters: {
      body: {
        dto: definitions['QueryOpInspectTaskListReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LLPJsonResult[OpInspectTaskListDto]'];
      };
    };
  };
  OpInspect_ExportTaskData: {
    parameters: {
      body: {
        dto: definitions['QueryOpInspectTaskListReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BaseFileResDto]'];
      };
    };
  };
  OtherOut_Save: {
    parameters: {
      body: {
        dto: definitions['OtherOutSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  OtherOut_QueryNoCheckList: {
    parameters: {
      query: {
        keyWord?: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[NoCheckOtherOutRdDto]]'];
      };
    };
  };
  OtherOut_QueryInfo: {
    parameters: {
      query: {
        id: number;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[OtherOutRdInfoDto]]'];
      };
    };
  };
  OtherOut_Check: {
    parameters: {
      body: {
        dto: definitions['SaleOutCheckReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  OtherRd_Save: {
    parameters: {
      body: {
        dto: definitions['OtherRdSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  OtherRd_QueryNoCheckList: {
    parameters: {
      query: {
        keyWord?: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[NoCheckOtherOutRdDto]]'];
      };
    };
  };
  OtherRd_QueryInfo: {
    parameters: {
      query: {
        id: number;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[OtherOutRdInfoDto]]'];
      };
    };
  };
  OtherRd_Check: {
    parameters: {
      body: {
        dto: definitions['SaleOutCheckReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  PieceQuote_QueryPieceQuoteImportTmp: {
    parameters: {
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BaseFileResDto]'];
      };
    };
  };
  PieceQuote_SaveData: {
    parameters: {
      body: {
        dto: definitions['PieceQuoteBaseDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  PieceQuote_Delete: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  PieceQuote_QueryInfo: {
    parameters: {
      query: {
        Id: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[PieceQuoteInfoDto]'];
      };
    };
  };
  PieceQuote_QueryPage: {
    parameters: {
      body: {
        dto: definitions['QueryPieceQuotePageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[PieceQuoteInfoDto]]'];
      };
    };
  };
  PieceQuote_ImportData: {
    parameters: {
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  PieceQuote_ExportData: {
    parameters: {
      body: {
        dto: definitions['QueryPieceQuotePageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BaseFileResDto]'];
      };
    };
  };
  PieceWage_PieceWageCalc: {
    parameters: {
      body: {
        dto: definitions['PieceWageCalcReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  PieceWage_PieceWageReCalc: {
    parameters: {
      body: {
        dto: definitions['PieceWageReCalcReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  PieceWage_PieceWageDel: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  PieceWage_DoAudit: {
    parameters: {
      body: {
        dto: definitions['BaseAuditReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  PieceWage_QueryMainList: {
    parameters: {
      body: {
        dto: definitions['QueryPieceWageMainListReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[PieceWageMainDto]]'];
      };
    };
  };
  PieceWage_DetailDel: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  PieceWage_QueryDetailList: {
    parameters: {
      body: {
        dto: definitions['QueryPieceWageDetailListReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[PieceWageDetailDto]]'];
      };
    };
  };
  PieceWage_PieceWageDetailUpdate: {
    parameters: {
      body: {
        dto: definitions['PieceWageDetailUpdateReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  PieceWage_QueryPieceWageReport: {
    parameters: {
      body: {
        dto: definitions['QueryPieceWageReqportReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[PieceWageReportDto]]'];
      };
    };
  };
  PlatConfig_Save: {
    parameters: {
      body: {
        dto: definitions['PlatConfigSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  PlatConfig_QueryInfo: {
    parameters: {
      body: {
        dto: definitions['QueryPlatConfigReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[PlatConfigDto]'];
      };
    };
  };
  PlatConfig_QueryList: {
    parameters: {
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LLJsonResult[PlatConfigDto]'];
      };
    };
  };
  PoOrder_NewInit: {
    parameters: {
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[PoOrderHeadDto]'];
      };
    };
  };
  PoOrder_SaveOrder: {
    parameters: {
      body: {
        dto: definitions['PoOrderSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  PoOrder_DeleteOrder: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  PoOrder_AuditOrder: {
    parameters: {
      body: {
        dto: definitions['PoOrderAuditReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  PoOrder_QueryCodeSelect: {
    parameters: {
      query: {
        keyWord?: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[String]]'];
      };
    };
  };
  PoOrder_QueryInfo: {
    parameters: {
      body: {
        dto: definitions['QueryPoOrderInfoReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[PoOrderInfoDto]'];
      };
    };
  };
  PoOrder_QueryPage: {
    parameters: {
      body: {
        dto: definitions['QueryPoOrderPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[PoOrderListDto]]'];
      };
    };
  };
  PoRd_QueryVenBarCodeInfo: {
    parameters: {
      query: {
        barCode: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[VenBarCodeInfoDto]'];
      };
    };
  };
  PoRd_OrderArrRdSave: {
    parameters: {
      body: {
        dto: definitions['OrderArrRdSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  PoRd_QueryArrInfo: {
    parameters: {
      body: {
        dto: definitions['QueryArrInfoReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[ArrInfoDto]'];
      };
    };
  };
  PoRd_PoRd: {
    parameters: {
      body: {
        dto: definitions['PoRdReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  PRouting_Save: {
    parameters: {
      body: {
        dto: definitions['PRoutingSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  PRouting_DicDataDel: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  PRouting_QueryInfo: {
    parameters: {
      body: {
        dto: definitions['QueryPRoutingInfoReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[PRoutingInfoDto]'];
      };
    };
  };
  PRouting_QueryPage: {
    parameters: {
      body: {
        dto: definitions['QueryPRoutingPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[PRoutingMainDto]]'];
      };
    };
  };
  PRouting_DoAudit: {
    parameters: {
      body: {
        dto: definitions['PRoutingAuditReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  PRouting_QueryPRoutingSelectDtos: {
    parameters: {
      query: {
        cInvCode: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[PRoutingSelectDto]]'];
      };
    };
  };
  Public_AppUpgrade: {
    parameters: {
      body: {
        dto: definitions['AppUpdateReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[AppUpdateResDto]'];
      };
    };
  };
  Public_TaskLicence: {
    parameters: {
      query: {
        sid: string;
        spwd: string;
        sqnum?: number | null;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: string;
      };
    };
  };
  Public_Test: {
    parameters: {
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  Public_TestU8Login: {
    parameters: {
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  Public_TestDomainAccLogin: {
    parameters: {
      query: {
        /** <example>u8test</example> */
        acc?: string;
        /** <example>Aa123456</example> */
        pwd?: string;
        /** <example>g.com</example> */
        domain?: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  Public_SCEntity: {
    parameters: {
      body: {
        tbNames: string[];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  Public_UploadFile: {
    parameters: {
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['BaseFileResDto'];
      };
    };
  };
  Public_Health: {
    parameters: {
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  QcIndex_Save: {
    parameters: {
      body: {
        dto: definitions['QcIndexSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  QcIndex_DicDataDel: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  QcIndex_QueryPage: {
    parameters: {
      body: {
        dto: definitions['BasePageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LLPJsonResult[QcIndexInfoDto]'];
      };
    };
  };
  QcIndex_ExportData: {
    parameters: {
      body: {
        dto: definitions['BasePageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BaseFileResDto]'];
      };
    };
  };
  QcInspect_QueryDeployPage: {
    parameters: {
      body: {
        dto: definitions['QueryQcInspectDelpoyPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LLPJsonResult[QcInspectDeployListDto]'];
      };
    };
  };
  QcInspect_SaveQcInspectDeploy: {
    parameters: {
      body: {
        dto: definitions['QcInspectDeploySaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  QcInspect_DeployDel: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  QcInspect_QueryTaskPage: {
    parameters: {
      body: {
        dto: definitions['QueryQcInspectTaskListReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LLPJsonResult[QcInspectTaskListDto]'];
      };
    };
  };
  QcInspect_SaveQcInspectTask: {
    parameters: {
      body: {
        dto: definitions['QcInspectTaskSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  QcInspect_TaskDel: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  QcInspect_TaskClose: {
    parameters: {
      body: {
        dto: definitions['QcInspectTaskCloseReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  QcInspect_TaskInspectFinlish: {
    parameters: {
      body: {
        dto: definitions['QcIspectFinlishReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  QcInspect_QueryPlanFlowCardInfo: {
    parameters: {
      query: {
        barCode: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[MomPlanFlowCardInfoDto]'];
      };
    };
  };
  QcInspect_QueryQcInspectTaskBarCodes: {
    parameters: {
      body: {
        dto: definitions['QueryQcInspectBarCodeListReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LLPJsonResult[QcInspectBarCodeInfoDto]'];
      };
    };
  };
  QcItem_Save: {
    parameters: {
      body: {
        dto: definitions['QcItemSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  QcItem_DicDataDel: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  QcItem_QueryPage: {
    parameters: {
      body: {
        dto: definitions['BasePageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LLPJsonResult[QcItemInfoDto]'];
      };
    };
  };
  QcItem_ExportData: {
    parameters: {
      body: {
        dto: definitions['BasePageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BaseFileResDto]'];
      };
    };
  };
  Report_QueryMoldReport: {
    parameters: {
      body: {
        dto: definitions['QueryMoldReportReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[MoldReportDto]]'];
      };
    };
  };
  Report_QueryDeviceReport: {
    parameters: {
      body: {
        dto: definitions['QueryMoldReportReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[DeviceReportDto]]'];
      };
    };
  };
  Report_QueryMoOpReport: {
    parameters: {
      body: {
        dto: definitions['QueryMoOpProcessReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[MoOpReportDto]]'];
      };
    };
  };
  Report_QueryMoAllcateLit: {
    parameters: {
      body: {
        dto: definitions['QueryMoPlanAllcatesReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[MoAllcateCollectDto]]'];
      };
    };
  };
  Report_QueryPlanReport: {
    parameters: {
      body: {
        dto: definitions['QueryMomPlanReportReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[MomPlanReportDto]]'];
      };
    };
  };
  SaleOut_QuerySaleOrderDisInfo: {
    parameters: {
      query: {
        barCode: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[SaleOrderDisInfoDto]'];
      };
    };
  };
  SaleOut_SaleOrderDisOut: {
    parameters: {
      body: {
        dto: definitions['SaleOrderDisOutSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  SaleOut_QueryDisInfo: {
    parameters: {
      body: {
        dto: definitions['QueryDispatchInfoReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[DispatchHeadDto]'];
      };
    };
  };
  SaleOut_QueryBarCodeInfo: {
    parameters: {
      query: {
        barCode: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BarCodeInfoDto]'];
      };
    };
  };
  SaleOut_SaleOut: {
    parameters: {
      body: {
        dto: definitions['SaleOutSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  SaleOut_QueryNoChecOutkList: {
    parameters: {
      query: {
        keyWord?: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[NoCheckSaleOutListDto]]'];
      };
    };
  };
  SaleOut_QuerySaleOutInfo: {
    parameters: {
      query: {
        id: number;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[SaleOutInfoDto]]'];
      };
    };
  };
  ShiftCalendar_Save: {
    parameters: {
      body: {
        dto: definitions['ShiftCalendarSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  ShiftCalendar_BlukDelete: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  ShiftCalendar_QueryInfo: {
    parameters: {
      body: {
        dto: definitions['QueryCalendarInfoReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[ShiftCalendarInfoDto]'];
      };
    };
  };
  ShiftCalendar_QueryPage: {
    parameters: {
      body: {
        dto: definitions['QueryShiftCalendarListReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[ShiftCalendarListDto]]'];
      };
    };
  };
  ShiftCalendar_ExportData: {
    parameters: {
      body: {
        dto: definitions['QueryShiftCalendarListReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BaseFileResDto]'];
      };
    };
  };
  Station_Save: {
    parameters: {
      body: {
        dto: definitions['StationSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  Station_DicDataDel: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  Station_QueryPage: {
    parameters: {
      body: {
        dto: definitions['QueryStationPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[StationInfoDto]]'];
      };
    };
  };
  SysApp_SaveData: {
    parameters: {
      body: {
        dto: definitions['SysAppBaseDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  SysApp_DeleteData: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  SysApp_QueryList: {
    parameters: {
      query: {
        keyWord?: string;
        /** 是否过滤只查启用的 */
        isEnabled?: boolean;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[SysAppBaseDto]]'];
      };
    };
  };
  SysAuth_QueryRoleList: {
    parameters: {
      body: {
        dto: definitions['QueryRoleListReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[SysRoleBaseDto]]'];
      };
    };
  };
  SysAuth_QueryUserAuthTree: {
    parameters: {
      body: {
        dto: definitions['QueryRoleUserListReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[OpUserDto]]'];
      };
    };
  };
  SysAuth_QueryRoleAuthTree: {
    parameters: {
      body: {
        dto: definitions['QueryRoleUserListReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[TreeMenuDto]]'];
      };
    };
  };
  SysAuth_AuthDel: {
    parameters: {
      body: {
        dto: definitions['SysAuthDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  SysDic_DicTypeAdd: {
    parameters: {
      body: {
        dto: definitions['AddDicTypeDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  SysDic_DicTypeUpdate: {
    parameters: {
      body: {
        dto: definitions['UpdateDicTypeDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  SysDic_DicTypePage: {
    parameters: {
      body: {
        dto: definitions['BasePageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[DicTypeInfoDto]]'];
      };
    };
  };
  SysDic_DicTypeDel: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  SysDic_QueryTypeTreeSelect: {
    parameters: {
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[TreeSelectDto]]'];
      };
    };
  };
  SysDic_Save: {
    parameters: {
      body: {
        dto: definitions['SaveDicDataDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  SysDic_DicDataDel: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  SysDic_QueryPage: {
    parameters: {
      body: {
        dto: definitions['QueryDicDataPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[DicDataInfoDto]]'];
      };
    };
  };
  SysDic_QuerySelect: {
    parameters: {
      query: {
        typeId?: string;
        typeCode?: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[BaseSelectDto]]'];
      };
    };
  };
  SysIpWhite_SaveData: {
    parameters: {
      body: {
        dto: definitions['SysIpWhiteBaseDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  SysIpWhite_DeleteData: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  SysIpWhite_QueryList: {
    parameters: {
      query: {
        keyWord?: string;
        /** 是否过滤只查启用的 */
        isEnabled?: boolean;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[SysIpWhiteListDto]]'];
      };
    };
  };
  SysMenu_Save: {
    parameters: {
      body: {
        dto: definitions['SysMenuBaseDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  SysMenu_DicDataDel: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  SysMenu_QueryPage: {
    parameters: {
      body: {
        dto: definitions['QuerySysMenuPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[SysMenuInfoDto]]'];
      };
    };
  };
  SysMenu_QueryMenuTreeList: {
    parameters: {
      body: {
        dto: definitions['QuerySysMenuPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[SysMenuTreeListDto]]'];
      };
    };
  };
  SysMenu_QueryTypeTreeSelect: {
    parameters: {
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[TreeSelectDto]]'];
      };
    };
  };
  SysRole_Save: {
    parameters: {
      body: {
        dto: definitions['SysRoleBaseDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  SysRole_DicDataDel: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  SysRole_QueryPage: {
    parameters: {
      body: {
        dto: definitions['BasePageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[SysRoleInfoDto]]'];
      };
    };
  };
  SysRole_QuerySelectDtos: {
    parameters: {
      query: {
        keyWord?: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[BaseSelectDto]]'];
      };
    };
  };
  SysRole_RolePersonAss: {
    parameters: {
      body: {
        dto: definitions['SysRolePersonAssReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  SysRole_QueryPersons: {
    parameters: {
      query: {
        roleId: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[OpUserDto]]'];
      };
    };
  };
  SysRole_RoleAuthority: {
    parameters: {
      body: {
        dto: definitions['SysRoleAuthorityReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  SysRole_QueryAuthTree: {
    parameters: {
      query: {
        roleId: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[TreeSelectDto]]'];
      };
    };
  };
  SysRole_QueryAuthMenuIds: {
    parameters: {
      query: {
        roleId: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[String]]'];
      };
    };
  };
  SysUser_QueryPage: {
    parameters: {
      body: {
        dto: definitions['QueryPersonPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[UserInfoDto]]'];
      };
    };
  };
  SysUser_QueryUserAuthTree: {
    parameters: {
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[TreeMenuDto]]'];
      };
    };
  };
  SysUser_QueryAuthDto: {
    parameters: {
      query: {
        appId?: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[SysUserAuthDto]'];
      };
    };
  };
  SysUser_QueryUserAuthBtns: {
    parameters: {
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[BaseSelectDto]]'];
      };
    };
  };
  Task_QueryTaskList: {
    parameters: {
      body: {
        dto: definitions['QueryTaskListReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[TaskBaseDto]]'];
      };
    };
  };
  Task_QueryOpGroupSelect: {
    parameters: {
      body: {
        dto: definitions['QueryTaskListReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[BaseSelectDto]]'];
      };
    };
  };
  Task_TaskAction: {
    parameters: {
      body: {
        dto: definitions['TaskActionReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  TeamGroup_Save: {
    parameters: {
      body: {
        dto: definitions['TeamGroupSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  TeamGroup_DicDataDel: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  TeamGroup_QueryPage: {
    parameters: {
      body: {
        dto: definitions['QueryTeamGroupPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[TeamGroupInfoDto]]'];
      };
    };
  };
  TeamGroup_ExportData: {
    parameters: {
      body: {
        dto: definitions['QueryTeamGroupPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BaseFileResDto]'];
      };
    };
  };
  TeamGroup_ExportPersonData: {
    parameters: {
      body: {
        dto: definitions['QueryTeamGroupPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BaseFileResDto]'];
      };
    };
  };
  TeamGroup_QueryTeamSelect: {
    parameters: {
      query: {
        keyWord?: string;
        workShopId?: string;
        BWxBy?: boolean;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[BaseSelectDto]]'];
      };
    };
  };
  TeamGroup_PersonAllotment: {
    parameters: {
      body: {
        dto: definitions['PersonAllotmentReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  TeamGroup_QueryTeamPersons: {
    parameters: {
      body: {
        dto: definitions['QueryTeamPersonReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[TeamPersonDto]]'];
      };
    };
  };
  TeamGroup_DeleteTeamPerson: {
    parameters: {
      body: {
        dto: definitions['DeleteTeamPersonReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  TeamShift_Save: {
    parameters: {
      body: {
        dto: definitions['TeamShiftSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  TeamShift_BlukDelete: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  TeamShift_QueryPage: {
    parameters: {
      body: {
        dto: definitions['BasePageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[TeamShiftInfoDto]]'];
      };
    };
  };
  TeamShift_ExportData: {
    parameters: {
      body: {
        dto: definitions['BasePageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BaseFileResDto]'];
      };
    };
  };
  TeamShift_QuerySelect: {
    parameters: {
      query: {
        keyWord?: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[BaseSelectDto]]'];
      };
    };
  };
  TemTransferDoc_QueryPage: {
    parameters: {
      body: {
        dto: definitions['QueryTemTransferDocPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[TemTransferDocInfoDto]]'];
      };
    };
  };
  TemTransferDoc_TemTransferDocSave: {
    parameters: {
      body: {
        dto: definitions['TemTransferDocSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  TemTransferDoc_TemTransferDocDel: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  TemTransferDoc_Init: {
    parameters: {
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  TemTransferDoc_ExportData: {
    parameters: {
      body: {
        dto: definitions['QueryTemTransferDocPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BaseFileResDto]'];
      };
    };
  };
  TransVouch_WHList: {
    parameters: {
      query: {
        /** 是否是调出查询 */
        bOut?: boolean;
        keyWord?: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[WHListResDto]]'];
      };
    };
  };
  TransVouch_QueryWhInvPosStock: {
    parameters: {
      body: {
        dto: definitions['QueryWhInvPosStockReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[WhInvPosStockDto]]'];
      };
    };
  };
  TransVouch_QueryPosList: {
    parameters: {
      query: {
        whCode?: string;
        bOutQuery?: boolean;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[PositionListResDto]]'];
      };
    };
  };
  TransVouch_TransVouchSave: {
    parameters: {
      body: {
        dto: definitions['TransVouchSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  TransVouch_TransVouchAudit: {
    parameters: {
      body: {
        dto: definitions['TransVouchSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  TransVouch_QueryWaitAuditList: {
    parameters: {
      query: {
        keyWord?: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[WaitAuditTransVouchDto]]'];
      };
    };
  };
  TransVouch_QueryTVInfo: {
    parameters: {
      query: {
        id: number;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[TransVouchInfoDto]]'];
      };
    };
  };
  UFManage_QueryWorkCenters: {
    parameters: {
      query: {
        /** 关键字 */
        keyWord?: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[WorkCenterDto]]'];
      };
    };
  };
  UFManage_QueryDepList: {
    parameters: {
      query: {
        /** 是否只查生产相关部门 */
        bMDept?: boolean;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[BaseSelectDto]]'];
      };
    };
  };
  UFManage_QueryPersonList: {
    parameters: {
      body: {
        dto: definitions['QueryPersonPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[PersonDto]]'];
      };
    };
  };
  UFManage_QueryOpUserList: {
    parameters: {
      body: {
        dto: definitions['QueryPersonPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[OpUserDto]]'];
      };
    };
  };
  UFManage_QueryExchList: {
    parameters: {
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[BaseSelectDto]]'];
      };
    };
  };
  UFManage_QueryInvTreeList: {
    parameters: {
      query: {
        keyWord?: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[InvClassTreeDto]]'];
      };
    };
  };
  UFManage_QueryInvList: {
    parameters: {
      body: {
        dto: definitions['QueryInvPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[InventoryDto]]'];
      };
    };
  };
  UFManage_InvbFreeList: {
    parameters: {
      query: {
        cInvCode: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[String]]'];
      };
    };
  };
  UFManage_QueryCusList: {
    parameters: {
      body: {
        dto: definitions['BasePageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[CusBaseDto]]'];
      };
    };
  };
  UFManage_QueryWHList: {
    parameters: {
      body: {
        dto: definitions['QueryWhListReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[WarehouseBaseDto]]'];
      };
    };
  };
  UFManage_QueryPosList: {
    parameters: {
      body: {
        dto: definitions['QueryVenPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[VendorDto]]'];
      };
    };
  };
  UFManage_QueryMomRdPage: {
    parameters: {
      body: {
        dto: definitions['QueryMomRdPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[MomRdListDto]]'];
      };
    };
  };
  UFManage_QueryPuArrPage: {
    parameters: {
      body: {
        dto: definitions['QueryPuArrPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[PuArrListDto]]'];
      };
    };
  };
  UFManage_QueryInvWhPosBatchStocks: {
    parameters: {
      body: {
        dto: definitions['QueryWhPosBatchStockReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[InvWhPosBatchStockDto]]'];
      };
    };
  };
  UFManage_QueryWhStockSum: {
    parameters: {
      body: {
        dto: definitions['QueryWhStockSumReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[WHStockSumDto]]'];
      };
    };
  };
  UFManage_QueryRdStyle: {
    parameters: {
      query: {
        bRdFlag?: boolean;
        vouchType?: number | null;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[RdStyleDto]]'];
      };
    };
  };
  UFManage_QueryOpList: {
    parameters: {
      body: {
        dto: definitions['QuerySfcOperationListReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[SfcOperationDto]]'];
      };
    };
  };
  UFManage_QueryPRoutingList: {
    parameters: {
      body: {
        dto: definitions['QuerySfcPRoutingListReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[SfcPRoutingDto]]'];
      };
    };
  };
  UFManage_QueryPRoutingListByInv: {
    parameters: {
      query: {
        InvCode: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LLJsonResult[SfcPRoutingDto]'];
      };
    };
  };
  UFManage_QueryPRoutingDetails: {
    parameters: {
      query: {
        proutingId: number;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[SfcPRoutingDetailDto]]'];
      };
    };
  };
  UFManage_UpdSfcPRoutingQcWay: {
    parameters: {
      query: {
        proutingDId: number;
        qcWay: number;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  UFManage_QueryInvBomVersionDtos: {
    parameters: {
      body: {
        dto: definitions['QueryInvBomListReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[InvBomVersionDto]]'];
      };
    };
  };
  UFManage_QueryBomLeftList: {
    parameters: {
      body: {
        dto: definitions['QueryBomRootReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[BomLeftListDto]]'];
      };
    };
  };
  UFManage_QueryBomInfo: {
    parameters: {
      body: {
        dto: definitions['QueryBomInfoReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BomInfoDto]'];
      };
    };
  };
  UFManage_QueryPUBusTypes: {
    parameters: {
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[String]]'];
      };
    };
  };
  UFManage_QueryPurTypes: {
    parameters: {
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[BaseSelectDto]]'];
      };
    };
  };
  UFManage_QueryItemList: {
    parameters: {
      query: {
        keyWord?: string;
        /** 弥富：00 */
        itemCls?: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[BaseSelectDto]]'];
      };
    };
  };
  Vendor_UpdatePass: {
    parameters: {
      body: {
        dto: definitions['VendorUpdatePassReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  Vendor_ResetVenPass: {
    parameters: {
      body: {
        dto: definitions['VenResetPassReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  VenOrder_QueryPoPage: {
    parameters: {
      body: {
        dto: definitions['QueryVenOrderPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[VenPoOrderListDto]]'];
      };
    };
  };
  VenOrder_VenPoOrderRevice: {
    parameters: {
      body: {
        dto: definitions['VenOrderReviceReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  VenOrder_VenDeliveryPoOrderList: {
    parameters: {
      body: {
        dto: definitions['QueryVenDeliveryOrderReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[VenDeliveryPoOrderListDto]]'];
      };
    };
  };
  VenOrder_QueryOMPage: {
    parameters: {
      body: {
        dto: definitions['QueryVenOrderPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[VenOMOrderListDto]]'];
      };
    };
  };
  VenOrder_VenOMOrderRevice: {
    parameters: {
      body: {
        dto: definitions['VenOrderReviceReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  VenOrder_VenDeliveryOMOrderList: {
    parameters: {
      body: {
        dto: definitions['QueryVenDeliveryOrderReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[VenDeliveryOMOrderListDto]]'];
      };
    };
  };
  WebSocket_Connect: {
    parameters: {};
    responses: {
      /** OK */
      200: {
        schema: { [key: string]: unknown };
      };
    };
  };
  WorkBench_QueryIconList: {
    parameters: {
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[OpGroupIconDto]]'];
      };
    };
  };
  WorkBench_QueryMomOpReport: {
    parameters: {
      body: {
        dto: definitions['QueryReportInfoReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[MomOpReportDto]'];
      };
    };
  };
  WorkBench_OpReport: {
    parameters: {
      body: {
        dto: definitions['MoRoutingSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[MoRoutingResDto]'];
      };
    };
  };
  WorkBench_QueryTeamPersons: {
    parameters: {
      query: {
        teamId?: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[TeamPersonDto]]'];
      };
    };
  };
  WorkHour_QueryWorkHours: {
    parameters: {
      body: {
        dto: definitions['QueryWorkHourListReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[WorkHourListDto]]'];
      };
    };
  };
  WorkHour_WorkHourUpdate: {
    parameters: {
      body: {
        dto: definitions['WorkHourUpdateReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  WorkHour_WorkHourDel: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  WorkHour_WorkHourAudit: {
    parameters: {
      body: {
        dto: definitions['WorkHourAuditReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  WorkJob_Save: {
    parameters: {
      body: {
        dto: definitions['WorkJobSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  WorkJob_ShiftDel: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  WorkJob_QueryInfo: {
    parameters: {
      query: {
        Id: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[WorkJobInfoDto]'];
      };
    };
  };
  WorkJob_QueryPage: {
    parameters: {
      body: {
        dto: definitions['QueryWorkJobPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[WorkJobInfoDto]]'];
      };
    };
  };
  WorkJob_GetNewCode: {
    parameters: {
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  WorkJob_TaskAction: {
    parameters: {
      body: {
        dto: definitions['WorkJobUpdateStateReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  WorkJob_ExportData: {
    parameters: {
      body: {
        dto: definitions['QueryWorkJobPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BaseFileResDto]'];
      };
    };
  };
  WorkOrder_GetNewCode: {
    parameters: {
      query: {
        docType?: number | null;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  WorkOrder_QueryCodes: {
    parameters: {
      query: {
        keyWord?: string;
        docType?: number | null;
        objType?: number | null;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LLJsonResult[BaseSelectDto]'];
      };
    };
  };
  WorkOrder_Save: {
    parameters: {
      body: {
        dto: definitions['WorkOrderSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  WorkOrder_QueryWaitHandleCount: {
    parameters: {
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[Int32]'];
      };
    };
  };
  WorkOrder_HandleOrder: {
    parameters: {
      body: {
        dto: definitions['WorkOrderHandleReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  WorkOrder_WorkOrderDone: {
    parameters: {
      body: {
        dto: definitions['WorkOrderDoneReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  WorkOrder_ShiftDel: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  WorkOrder_QueryInfo: {
    parameters: {
      body: {
        dto: definitions['QueryDeviceAndMoldInfoReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[WorkOrderInfoDto]'];
      };
    };
  };
  WorkOrder_QueryPage: {
    parameters: {
      body: {
        dto: definitions['QueryWorkOrderPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[WorkOrderListDto]]'];
      };
    };
  };
  WorkOrder_ExportData: {
    parameters: {
      body: {
        dto: definitions['QueryWorkOrderPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BaseFileResDto]'];
      };
    };
  };
  WorkShop_Save: {
    parameters: {
      body: {
        dto: definitions['WorkShopSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  WorkShop_BlukDelete: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  WorkShop_QueryPage: {
    parameters: {
      body: {
        dto: definitions['BasePageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[WorkShopInfoDto]]'];
      };
    };
  };
  WorkShop_ExportData: {
    parameters: {
      body: {
        dto: definitions['BasePageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BaseFileResDto]'];
      };
    };
  };
  WorkShop_QuerySelect: {
    parameters: {
      query: {
        keyWord?: string;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[List[BaseSelectDto]]'];
      };
    };
  };
  WxByApplyDoc_Save: {
    parameters: {
      body: {
        dto: definitions['WxByApplyDocSaveReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  WxByApplyDoc_ShiftDel: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  WxByApplyDoc_QueryInfo: {
    parameters: {
      body: {
        dto: definitions['QueryDeviceAndMoldInfoReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[WxByApplyDocInfoDto]'];
      };
    };
  };
  WxByApplyDoc_QueryPage: {
    parameters: {
      body: {
        dto: definitions['QueryWxByApplyDocPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[WxByApplyDocInfoDto]]'];
      };
    };
  };
  WxByApplyDoc_GetNewCode: {
    parameters: {
      query: {
        docType?: number | null;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  WxByApplyDoc_QueryCodes: {
    parameters: {
      query: {
        keyWord?: string;
        docType?: number | null;
        objType?: number | null;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LLJsonResult[BaseSelectDto]'];
      };
    };
  };
  WxByApplyDoc_ExportData: {
    parameters: {
      body: {
        dto: definitions['QueryWxByApplyDocPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BaseFileResDto]'];
      };
    };
  };
  WxByApplyDoc_ApplyShift: {
    parameters: {
      body: {
        dto: definitions['ApplyShiftReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  WxByApplyDoc_QueryNoticeDocPage: {
    parameters: {
      body: {
        dto: definitions['QueryWxByApplyDocPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LLPJsonResult[WxByNoticeDocListDto]'];
      };
    };
  };
  WxByApplyDoc_ExportNoticeData: {
    parameters: {
      body: {
        dto: definitions['QueryWxByApplyDocPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BaseFileResDto]'];
      };
    };
  };
  WxByPlan_GetNewCode: {
    parameters: {
      query: {
        docType?: number | null;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  WxByPlan_QueryCodes: {
    parameters: {
      query: {
        keyWord?: string;
        docType?: number | null;
        objType?: number | null;
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LLJsonResult[BaseSelectDto]'];
      };
    };
  };
  WxByPlan_Save: {
    parameters: {
      body: {
        dto: definitions['WxByPlanSaveDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  WxByPlan_ShiftDel: {
    parameters: {
      body: {
        dto: definitions['BaseDelReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  WxByPlan_DoAudit: {
    parameters: {
      body: {
        dto: definitions['BaseAuditReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult'];
      };
    };
  };
  WxByPlan_QueryInfo: {
    parameters: {
      body: {
        dto: definitions['QueryDeviceAndMoldInfoReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[WxByPlanInfoDto]'];
      };
    };
  };
  WxByPlan_QueryPage: {
    parameters: {
      body: {
        dto: definitions['QueryWxByPlanPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LPJsonResult[List[WxByPlanListDto]]'];
      };
    };
  };
  WxByPlan_ExportData: {
    parameters: {
      body: {
        dto: definitions['QueryWxByPlanPageReqDto'];
      };
      header: {
        /** 登录成功时返回的accessToken */
        access_token?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['LJsonResult[BaseFileResDto]'];
      };
    };
  };
}

export interface external {}
