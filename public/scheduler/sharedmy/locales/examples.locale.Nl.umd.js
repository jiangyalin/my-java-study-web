(function (s, i) { const l = typeof exports === 'object'; if (typeof define === 'function' && define.amd)define([], i); else if (typeof module === 'object' && module.exports)module.exports = i(); else { const c = i(); const g = l ? exports : s; for (const p in c)g[p] = c[p] } })(typeof self < 'u' ? self : this, () => { const s = {}; const i = { exports: s }; const l = Object.defineProperty; const c = Object.getOwnPropertyDescriptor; const g = Object.getOwnPropertyNames; const p = Object.prototype.hasOwnProperty; const u = (e, a, n) => a in e ? l(e, a, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[a] = n; const v = (e, a) => { for (const n in a)l(e, n, { get: a[n], enumerable: !0 }) }; const k = (e, a, n, t) => { if (a && typeof a === 'object' || typeof a === 'function') for (const r of g(a))!p.call(e, r) && r !== n && l(e, r, { get: () => a[r], enumerable: !(t = c(a, r)) || t.enumerable }); return e }; const h = e => k(l({}, '__esModule', { value: !0 }), e); const b = (e, a, n) => (u(e, typeof a !== 'symbol' ? a + '' : a, n), n); const m = {}; v(m, { default: () => S }), i.exports = h(m); var d = class {static mergeLocales (...e) { const a = {}; return e.forEach(n => { Object.keys(n).forEach(t => { typeof n[t] === 'object' ? a[t] = { ...a[t], ...n[t] } : a[t] = n[t] }) }), a } static trimLocale (e, a) { const n = (t, r) => { e[t] && (r ? e[t][r] && delete e[t][r] : delete e[t]) }; Object.keys(a).forEach(t => { Object.keys(a[t]).length > 0 ? Object.keys(a[t]).forEach(r => n(t, r)) : n(t) }) } static normalizeLocale (e, a) { if (!e) throw new Error('"nameOrConfig" parameter can not be empty'); if (typeof e === 'string') { if (!a) throw new Error('"config" parameter can not be empty'); a.locale ? a.name = e || a.name : a.localeName = e } else a = e; let n = {}; if (a.name || a.locale)n = Object.assign({ localeName: a.name }, a.locale), a.desc && (n.localeDesc = a.desc), a.code && (n.localeCode = a.code), a.path && (n.localePath = a.path); else { if (!a.localeName) throw new Error('"config" parameter doesn\'t have "localeName" property'); n = Object.assign({}, a) } for (const t of ['name', 'desc', 'code', 'path'])n[t] && delete n[t]; if (!n.localeName) throw new Error('Locale name can not be empty'); return n } static get locales () { return globalThis.bryntum.locales || {} } static set locales (e) { globalThis.bryntum.locales = e } static get localeName () { return globalThis.bryntum.locale || 'En' } static set localeName (e) { globalThis.bryntum.locale = e || d.localeName } static get locale () { return d.localeName && this.locales[d.localeName] || this.locales.En || Object.values(this.locales)[0] || { localeName: '', localeDesc: '', localeCoode: '' } } static publishLocale (e, a) { const { locales: n } = globalThis.bryntum; const t = d.normalizeLocale(e, a); const { localeName: r } = t; return !n[r] || a === !0 ? n[r] = t : n[r] = this.mergeLocales(n[r] || {}, t || {}), n[r] }}; const o = d; b(o, 'skipLocaleIntegrityCheck', !1), globalThis.bryntum = globalThis.bryntum || {}, globalThis.bryntum.locales = globalThis.bryntum.locales || {}, o._$name = 'LocaleHelper'; const f = { localeName: 'Nl', localeDesc: 'Nederlands', localeCode: 'nl', RemoveDependencyCycleEffectResolution: { descriptionTpl: 'Verwijder afhankelijkheid' }, DeactivateDependencyCycleEffectResolution: { descriptionTpl: 'Deactiveer afhankelijkheid' }, CycleEffectDescription: { descriptionTpl: 'Er is een oneindige lus gevonden. De volgende taken zijn de oorzaak: {0}' }, EmptyCalendarEffectDescription: { descriptionTpl: '"{0}" kalender geeft geen werktijden en dagen aan.' }, Use24hrsEmptyCalendarEffectResolution: { descriptionTpl: 'Gebruik een 24 uren kalender met vrije dagen op zaterdag en zondag.' }, Use8hrsEmptyCalendarEffectResolution: { descriptionTpl: 'Gebruik een 8 uren kalender (08:00-12:00, 13:00-17:00) met vrije dagen op zaterdag en zondag.' }, ConflictEffectDescription: { descriptionTpl: 'Er is een planning conflict gevonden: {0} conflicteert met {1}' }, ConstraintIntervalDescription: { dateFormat: 'LLL' }, ProjectConstraintIntervalDescription: { startDateDescriptionTpl: 'Project begin {0}', endDateDescriptionTpl: 'Project einde {0}' }, DependencyType: { long: ['Gelijk-Begin', 'Begin-na-Einde', 'Einde-na-Begin', 'Gelijk-Einde'] }, ManuallyScheduledParentConstraintIntervalDescription: { startDescriptionTpl: 'Handmatig geplande taak "{2}" forceert subtaken niet eerder te starten dan {0}', endDescriptionTpl: 'Handmatig geplande taak "{2}" forceert subtaken niet later te eindigen dan {1}' }, DisableManuallyScheduledConflictResolution: { descriptionTpl: 'Schakel handmatig plannen voor "{0}" uit' }, DependencyConstraintIntervalDescription: { descriptionTpl: 'Afhankelijkheid ({2}) van "{3}" paar "{4}"' }, RemoveDependencyResolution: { descriptionTpl: 'Verwijder afhankelijkheid van "{1}" paar "{2}"' }, DeactivateDependencyResolution: { descriptionTpl: 'Deactiveer afhankelijkheid van "{1}" paar "{2}"' }, DateConstraintIntervalDescription: { startDateDescriptionTpl: 'Taak "{2}" {3} {0} beperking', endDateDescriptionTpl: 'Taak "{2}" {3} {1} beperking', constraintTypeTpl: { startnoearlierthan: 'Moet-beginnen op', finishnoearlierthan: 'Niet-eerder-beginnen-dan', muststarton: 'Niet-eerder-eindigen-dan', mustfinishon: 'Niet-later-eindigen-dan', startnolaterthan: 'Moet-eindigen-op', finishnolaterthan: 'Niet-later-beginnen-dan' } }, RemoveDateConstraintConflictResolution: { descriptionTpl: 'Verwijder "{1}" beperking van taak "{0}"' } }; const A = o.publishLocale(f); const y = { localeName: 'Nl', localeDesc: 'Nederlands', localeCode: 'nl', Object: { Yes: 'Ja', No: 'Nee', Cancel: 'Annuleren', Ok: 'OK', Week: 'Week' }, ColorPicker: { noColor: 'Geen kleur' }, Combo: { noResults: 'Geen resultaten', recordNotCommitted: 'Record kan niet worden toegevoegd', addNewValue: e => `${e} toevoegen` }, FilePicker: { file: 'Vijl' }, Field: { badInput: 'Ongeldige veldwaarde', patternMismatch: 'Waarde moet overeenkomen met een specifiek patroon', rangeOverflow: e => `Waarde moet kleiner zijn dan of gelijk aan ${e.max}`, rangeUnderflow: e => `Waarde moet groter zijn dan of gelijk aan ${e.min}`, stepMismatch: 'Waarde moet bij de stap passen', tooLong: 'Waarde moet korter zijn', tooShort: 'Waarde moet langer zijn', typeMismatch: 'Waarde moet een speciaal formaat hebben', valueMissing: 'Dit veld is verplicht', invalidValue: 'Ongeldige veldwaarde', minimumValueViolation: 'Minimale waarde schending', maximumValueViolation: 'Maximale waarde schending', fieldRequired: 'Dit veld is verplicht', validateFilter: 'Waarde moet worden geselecteerd in de lijst' }, DateField: { invalidDate: 'Ongeldige datuminvoer' }, DatePicker: { gotoPrevYear: 'Ga naar vorig jaar', gotoPrevMonth: 'Ga naar vorige maand', gotoNextMonth: 'Ga naar volgende maand', gotoNextYear: 'Ga naar volgend jaar' }, NumberFormat: { locale: 'nl', currency: 'EUR' }, DurationField: { invalidUnit: 'Ongeldige eenheid' }, TimeField: { invalidTime: 'Ongeldige tijdsinvoer' }, TimePicker: { hour: 'Uur', minute: 'Minuut', second: 'Seconde' }, List: { loading: 'Laden...', selectAll: 'Alles selecteren' }, GridBase: { loadMask: 'Laden...', syncMask: 'Bezig met opslaan...' }, PagingToolbar: { firstPage: 'Ga naar de eerste pagina', prevPage: 'Ga naar de vorige pagina', page: 'Pagina', nextPage: 'Ga naar de volgende pagina', lastPage: 'Ga naar de laatste pagina', reload: 'Laad huidige pagina opnieuw', noRecords: 'Geen rijen om weer te geven', pageCountTemplate: e => `van ${e.lastPage}`, summaryTemplate: e => `Records ${e.start} - ${e.end} van ${e.allCount} worden weergegeven` }, PanelCollapser: { Collapse: 'Klap in', Expand: 'Klap uit' }, Popup: { close: 'Sluiten' }, UndoRedo: { Undo: 'Ongedaan maken', Redo: 'Opnieuw doen', UndoLastAction: 'Maak de laatste actie ongedaan', RedoLastAction: 'Herhaal de laatste ongedaan gemaakte actie', NoActions: 'Geen items om ongedaan te maken' }, FieldFilterPicker: { equals: 'gelijk', doesNotEqual: 'niet gelijk', isEmpty: 'is leeg', isNotEmpty: 'is niet leeg', contains: 'bevat', doesNotContain: 'bevat geen', startsWith: 'begint met', endsWith: 'eindigt met', isOneOf: 'is een van', isNotOneOf: 'is niet een van', isGreaterThan: 'is groter dan', isLessThan: 'is kleiner dan', isGreaterThanOrEqualTo: 'is groter of gelijk aan', isLessThanOrEqualTo: 'is kleiner of gelijk aan', isBetween: 'zit tussen', isNotBetween: 'zit niet tussen', isBefore: 'is voor', isAfter: 'is na', isToday: 'is vandaag', isTomorrow: 'is morgen', isYesterday: 'is gisteren', isThisWeek: 'is deze week', isNextWeek: 'is volgende week', isLastWeek: 'is afgelopen week', isThisMonth: 'is deze maand', isNextMonth: 'is volgende maand', isLastMonth: 'is vorige maand', isThisYear: 'is dit jaar', isNextYear: 'is volgend jaar', isLastYear: 'is vorige jaar', isYearToDate: 'is dit jaar tot vandaag', isTrue: 'is waar', isFalse: 'is niet waar', selectAProperty: 'Selecteer een veld', selectAnOperator: 'Selecteer een operator', caseSensitive: 'Hoofdletter gevoelig', and: 'en', dateFormat: 'D/M/YYYY', selectOneOrMoreValues: 'Selecteer een of meer waarden', enterAValue: 'Voer een waarde in', enterANumber: 'Voer een getal in', selectADate: 'Selecteer een datum' }, FieldFilterPickerGroup: { addFilter: 'Voeg filter toe' }, DateHelper: { locale: 'nl', weekStartDay: 1, nonWorkingDays: { 0: !0, 6: !0 }, weekends: { 0: !0, 6: !0 }, unitNames: [{ single: 'ms', plural: 'ms', abbrev: 'ms' }, { single: 'seconde', plural: 'seconden', abbrev: 's' }, { single: 'minuut', plural: 'minuten', abbrev: 'm' }, { single: 'uur', plural: 'uren', abbrev: 'u' }, { single: 'dag', plural: 'dagen', abbrev: 'd' }, { single: 'week', plural: 'weken', abbrev: 'w' }, { single: 'maand', plural: 'maanden', abbrev: 'ma' }, { single: 'kwartaal', plural: 'kwartalen', abbrev: 'kw' }, { single: 'jaar', plural: 'jaren', abbrev: 'j' }, { single: 'decennium', plural: 'decennia', abbrev: 'dec' }], unitAbbreviations: [['mil'], ['s', 'sec'], ['m', 'min'], ['u'], ['d'], ['w', 'wk'], ['ma', 'mnd', 'm'], ['k', 'kwar', 'kwt', 'kw'], ['j', 'jr'], ['dec']], parsers: { L: 'DD-MM-YYYY', LT: 'HH:mm', LTS: 'HH:mm:ss' }, ordinalSuffix: e => e } }; const M = o.publishLocale(y); const w = new String(); const j = { localeName: 'Nl', localeDesc: 'Nederlands', localeCode: 'nl', ColumnPicker: { column: 'Kolom', columnsMenu: 'Kolommen', hideColumn: 'Verberg Kolom', hideColumnShort: 'Verberg', newColumns: 'Nieuwe kolommen' }, Filter: { applyFilter: 'Pas filter toe', filter: 'Filter', editFilter: 'Wijzig filter', on: 'Aan', before: 'Voor', after: 'Na', equals: 'Is gelijk', lessThan: 'Minder dan', moreThan: 'Meer dan', removeFilter: 'Verwijder filter', disableFilter: 'Uitschakelen filter' }, FilterBar: { enableFilterBar: 'Maak filterbalk zichtbaar', disableFilterBar: 'Verberg filterbalk' }, Group: { group: 'Groepeer', groupAscending: 'Groepeer oplopend', groupDescending: 'Groepeer aflopend', groupAscendingShort: 'Oplopend', groupDescendingShort: 'Aflopend', stopGrouping: 'Maak groepering ongedaan', stopGroupingShort: 'Maak ongedaan' }, HeaderMenu: { moveBefore: e => `Verplaatsen naar voor "${e}"`, moveAfter: e => `Verplaatsen naar na "${e}"`, collapseColumn: 'Kolom inklappen', expandColumn: 'Kolom uitklappen' }, ColumnRename: { rename: 'Hernoemen' }, MergeCells: { mergeCells: 'Cellen samenvoegen', menuTooltip: 'Met deze kolom sortering cellen met dezelfde waarde samenvoegen' }, Search: { searchForValue: 'Zoek op term' }, Sort: { sort: 'Sorteer', sortAscending: 'Sorteer oplopend', sortDescending: 'Sorteer aflopend', multiSort: 'Meerdere sorteringen', removeSorter: 'Verwijder sortering', addSortAscending: 'Voeg oplopende sortering toe', addSortDescending: 'Voeg aflopende sortering toe', toggleSortAscending: 'Sorteer oplopend', toggleSortDescending: 'Sorteer aflopend', sortAscendingShort: 'Oplopend', sortDescendingShort: 'Aflopend', removeSorterShort: 'Verwijder', addSortAscendingShort: '+ Oplopend', addSortDescendingShort: '+ Aflopend' }, Split: { split: 'Gesplitst', unsplit: 'Ongeplitst', horizontally: 'Horizontaal', vertically: 'Verticaal', both: 'Beide' }, Column: { columnLabel: e => `${e.text ? `${e.text} kolom. ` : ''}SPATIEBALK voor contextmenu${e.sortable ? ', ENTER om te sorteren' : ''}`, cellLabel: w }, Checkbox: { toggleRowSelect: 'Rijselectie wisselen', toggleSelection: 'Toggle selectie van volledige dataset' }, RatingColumn: { cellLabel: e => { let a; return `${e.text ? e.text : ''} ${(a = e.location) != null && a.record ? `rating : ${e.location.record.get(e.field) || 0}` : ''}` } }, GridBase: { loadFailedMessage: 'Laden mislukt!', syncFailedMessage: 'Gegevenssynchronisatie is mislukt!', unspecifiedFailure: 'Niet-gespecificeerde fout', networkFailure: 'Netwerk fout', parseFailure: 'Kan server response niet parsen', serverResponse: 'Server reactie:', noRows: 'Geen rijen om weer te geven', moveColumnLeft: 'Plaats naar het linker kader', moveColumnRight: 'Plaats naar het rechter kader', moveColumnTo: e => `Kolom verplaatsen naar ${e}` }, CellMenu: { removeRow: 'Verwijder' }, RowCopyPaste: { copyRecord: 'Kopieer', cutRecord: 'Knip', pasteRecord: 'Plak', rows: 'rijen', row: 'row' }, CellCopyPaste: { copy: 'Kopieer', cut: 'Knip', paste: 'Plak' }, PdfExport: { 'Waiting for response from server': 'Wachten op antwoord van server...', 'Export failed': 'Export mislukt', 'Server error': 'Serverfout', 'Generating pages': "Pagina's genereren...", 'Click to abort': 'Annuleren' }, ExportDialog: { width: '40em', labelWidth: '12em', exportSettings: 'Instellingen exporteren', export: 'Exporteren', exporterType: 'Paginering beheren', cancel: 'Annuleren', fileFormat: 'Bestandsformaat', rows: 'Rijen', alignRows: 'Rijen uitlijnen', columns: 'Kolommen', paperFormat: 'Papier formaat', orientation: 'Oriëntatatie', repeatHeader: 'Herhaal koptekst' }, ExportRowsCombo: { all: 'Alle rijen', visible: 'Zichtbare rijen' }, ExportOrientationCombo: { portrait: 'Staand', landscape: 'Liggend' }, SinglePageExporter: { singlepage: 'Enkele pagina' }, MultiPageExporter: { multipage: "Meerdere pagina's", exportingPage: ({ currentPage: e, totalPages: a }) => `Exporteren van de pagina ${e}/${a}` }, MultiPageVerticalExporter: { multipagevertical: "Meerdere pagina's (verticaal)", exportingPage: ({ currentPage: e, totalPages: a }) => `Exporteren van de pagina ${e}/${a}` }, RowExpander: { loading: 'Bezig met laden', expand: 'Klap uit', collapse: 'Klap in' }, TreeGroup: { group: 'Groeperen op', stopGrouping: 'Stop groeperen', stopGroupingThisColumn: 'Groeperen opheffen voor deze kolom' } }; const P = o.publishLocale(j); const D = { localeName: 'Nl', localeDesc: 'Nederlands', localeCode: 'nl', Object: { newEvent: 'Nieuwe boeking' }, ResourceInfoColumn: { eventCountText: e => e + ' evenement' + (e !== 1 ? 'en' : '') }, Dependencies: { from: 'Van', to: 'Naar', valid: 'Geldig', invalid: 'Ongeldig' }, DependencyType: { SS: 'GB', SF: 'BE', FS: 'EB', FF: 'GE', StartToStart: 'Gelijk-Begin', StartToEnd: 'Begin-na-Einde', EndToStart: 'Einde-na-Begin', EndToEnd: 'Gelijk-Einde', short: ['GB', 'BE', 'EB', 'GE'], long: ['Gelijk-Begin', 'Begin-na-Einde', 'Einde-na-Begin', 'Gelijk-Einde'] }, DependencyEdit: { From: 'Van', To: 'Tot', Type: 'Type', Lag: 'Achterstand', 'Edit dependency': 'Afhankelijkheid bewerken', Save: 'Bewaar', Delete: 'Verwijder', Cancel: 'Annuleer', StartToStart: 'Begin-Tot-Begin', StartToEnd: 'Begin-Tot-Einde', EndToStart: 'Einde-Tot-Start', EndToEnd: 'Einde-Tot-Einde' }, EventEdit: { Name: 'Naam', Resource: 'Resource', Start: 'Start', End: 'Eind', Save: 'Bewaar', Delete: 'Verwijder', Cancel: 'Annuleer', 'Edit event': 'Wijzig item', Repeat: 'Herhaal' }, EventDrag: { eventOverlapsExisting: 'Gebeurtenis overlapt bestaande gebeurtenis voor deze bron', noDropOutsideTimeline: 'Evenement kan niet volledig buiten de tijdlijn worden verwijderd' }, SchedulerBase: { 'Add event': 'Voeg evenement toe', 'Delete event': 'Verwijder item', 'Unassign event': 'Gebeurtenis ongedaan maken', color: 'Kleur' }, TimeAxisHeaderMenu: { pickZoomLevel: 'Zoom in', activeDateRange: 'Datum bereik', startText: 'Start datum', endText: 'Eind datum', todayText: 'Vandaag' }, EventCopyPaste: { copyEvent: 'Kopieer item', cutEvent: 'Knip item', pasteEvent: 'Plak item' }, EventFilter: { filterEvents: 'Filter items', byName: 'Op naam' }, TimeRanges: { showCurrentTimeLine: 'Maak huidige tijdlijn zichtbaar' }, PresetManager: { secondAndMinute: { name: 'Seconden' }, minuteAndHour: { topDateFormat: 'ddd DD-MM, hh' }, hourAndDay: { topDateFormat: 'ddd DD-MM', name: 'Dag' }, day: { name: 'Dag/uren' }, week: { name: 'Week/uren' }, dayAndWeek: { displayDateFormat: 'll LST', name: 'Week/dagen' }, dayAndMonth: { name: 'Maand' }, weekAndDay: { displayDateFormat: 'hh:mm', name: 'Week' }, weekAndMonth: { name: 'Weken' }, weekAndDayLetter: { name: 'Weken/doordeweekse dagen' }, weekDateAndMonth: { name: 'Maanden/weken' }, monthAndYear: { name: 'Maanden' }, year: { name: 'Jaren' }, manyYears: { name: 'Несколько лет' } }, RecurrenceConfirmationPopup: { 'delete-title': 'U verwijdert een plan item', 'delete-all-message': 'Wilt u alle herhaalde afspraken van dit item verwijderen?', 'delete-further-message': 'Wilt u het geselecteerde en alle toekomstige gebeurtenissen van dit item verwijderen, of aleen het geselecteerde item?', 'delete-further-btn-text': 'Verwijder alleen de toekomstige gebeurtenissen', 'delete-only-this-btn-text': 'Verwijder alleen deze gebeurtenis', 'update-title': 'U verandert een herhaald item', 'update-all-message': 'Wilt u alle herhaalde afspraken van dit item verwijderen?', 'update-further-message': 'Wilt u het geselecteerde en alle toekomstige gebeurtenissen van dit item wijzigen, of aleen het geselecteerde item?', 'update-further-btn-text': 'Wijzig alle toekomstige items', 'update-only-this-btn-text': 'Wijzig alleen dit item', Yes: 'Ja', Cancel: 'Annuleer', width: 600 }, RecurrenceLegend: { ' and ': ' en ', Daily: 'Dagelijks', 'Weekly on {1}': ({ days: e }) => `Wekelijks op ${e}`, 'Monthly on {1}': ({ days: e }) => `Maandelijks op ${e}`, 'Yearly on {1} of {2}': ({ days: e, months: a }) => `Jaarlijks op ${e} ${a}`, 'Every {0} days': ({ interval: e }) => `Elke ${e} dagen`, 'Every {0} weeks on {1}': ({ interval: e, days: a }) => `Elke ${e} weken op ${a}`, 'Every {0} months on {1}': ({ interval: e, days: a }) => `Elke ${e} maanden in ${a}`, 'Every {0} years on {1} of {2}': ({ interval: e, days: a, months: n }) => `Elke ${e} jaar op ${a} ${n}`, position1: 'de eerste', position2: 'de tweede', position3: 'de derde', position4: 'de vierde', position5: 'de vijfde', 'position-1': 'laatste', day: 'dag', weekday: 'weekdag', 'weekend day': 'weekend dag', daysFormat: ({ position: e, days: a }) => `${e} ${a}` }, RecurrenceEditor: { 'Repeat event': 'Herhaal gebeurtenis', Cancel: 'Annuleer', Save: 'Bewaar', Frequency: 'Frequentie', Every: 'Elke', DAILYintervalUnit: 'dag(en)', WEEKLYintervalUnit: 'week(en)', MONTHLYintervalUnit: 'maand(en)', YEARLYintervalUnit: 'jaren(en)', Each: 'Elke', 'On the': 'Op de', 'End repeat': 'Einde herhaling', 'time(s)': 'tijd(en)' }, RecurrenceDaysCombo: { day: 'dag', weekday: 'weekdag', 'weekend day': 'weekend dag' }, RecurrencePositionsCombo: { position1: 'eerste', position2: 'tweede', position3: 'derde', position4: 'vierde', position5: 'vijfde', 'position-1': 'laatste' }, RecurrenceStopConditionCombo: { Never: 'Nooit', After: 'Na', 'On date': 'Op datum' }, RecurrenceFrequencyCombo: { None: 'Geen herhaling', Daily: 'Dagelijks', Weekly: 'Wekelijks', Monthly: 'Maandelijks', Yearly: 'Jaarlijks' }, RecurrenceCombo: { None: 'Geen', Custom: 'Aangepast...' }, Summary: { 'Summary for': e => `Samenvatting voor ${e}` }, ScheduleRangeCombo: { completeview: 'Compleet schema', currentview: 'Huidige weergave', daterange: 'Periode', completedata: 'Alle data (events)' }, SchedulerExportDialog: { 'Schedule range': 'Scheduler bereik', 'Export from': 'Vanaf', 'Export to': 'Naar' }, ExcelExporter: { 'No resource assigned': 'Geen resource toegewezen' }, CrudManagerView: { serverResponseLabel: 'Server reactie:' }, DurationColumn: { Duration: 'Duur' } }; const R = o.publishLocale(D); const E = { localeName: 'Nl', localeDesc: 'Nederlands', localeCode: 'nl', ConstraintTypePicker: { none: 'Geen', assoonaspossible: 'Zo snel mogelijk', aslateaspossible: 'Zo laat mogelijk', muststarton: 'Niet eerder eindigen dan', mustfinishon: 'Niet later eindigen dan', startnoearlierthan: 'Moet beginnen op', startnolaterthan: 'Moet eindigen op', finishnoearlierthan: 'Niet eerder beginnen dan', finishnolaterthan: 'Niet later beginnen dan' }, SchedulingDirectionPicker: { Forward: 'Vooruit', Backward: 'Achteruit', inheritedFrom: 'Geërfd van', enforcedBy: 'Opgelegd door' }, CalendarField: { 'Default calendar': 'Standaardkalender' }, TaskEditorBase: { Information: 'Informatie', Save: 'Opslaan', Cancel: 'Annuleer', Delete: 'Verwijder', calculateMask: 'Taken berekenen...', saveError: 'Kan niet opslaan. Corrigeer eerst de fouten', repeatingInfo: 'Een herhaald item bekijken', editRepeating: 'Bewerk' }, TaskEdit: { 'Edit task': 'Bewerk taak', ConfirmDeletionTitle: 'Bevestig verwijderen', ConfirmDeletionMessage: 'Weet u zeker dat u dit item wilt verwijderen?' }, GanttTaskEditor: { editorWidth: '55em' }, SchedulerTaskEditor: { editorWidth: '41em' }, SchedulerGeneralTab: { labelWidth: '6em', General: 'Algemeen', Name: 'Naam', Resources: 'Resources', '% complete': '% compleet', Duration: 'Duur', Start: 'Begin', Finish: 'Einde', Effort: 'Inspanning', Preamble: 'Preamble', Postamble: 'Postamble' }, GeneralTab: { labelWidth: '6em', General: 'Algemeen', Name: 'Naam', '% complete': '% compleet', Duration: 'Duur', Start: 'Begin', Finish: 'Einde', Effort: 'Inspanning', Dates: 'Datums' }, SchedulerAdvancedTab: { labelWidth: '10em', Advanced: 'Geavanceerd', Calendar: 'Kalender', 'Scheduling mode': 'Taaktype', 'Effort driven': 'Op inspanning', 'Manually scheduled': 'Handmatig', 'Constraint type': 'Beperkingstype', 'Constraint date': 'Beperkingsdatum', Inactive: 'Inactief', 'Ignore resource calendar': 'Resourcekalender negeren' }, AdvancedTab: { labelWidth: '12em', Advanced: 'Geavanceerd', Calendar: 'Kalender', 'Scheduling mode': 'Taaktype', 'Effort driven': 'Op inspanning', 'Manually scheduled': 'Handmatig', 'Constraint type': 'Beperkingstype', 'Constraint date': 'Beperkingsdatum', Constraint: 'Beperking', Rollup: 'Oprollen', Inactive: 'Inactief', 'Ignore resource calendar': 'Resourcekalender negeren', 'Scheduling direction': 'Planningrichting' }, DependencyTab: { Predecessors: 'Voorafgaande taken', Successors: 'Opvolgende taken', ID: 'ID', Name: 'Naam', Type: 'Type', Lag: 'Vertraging', cyclicDependency: 'Cyclische afhankelijkheid', invalidDependency: 'Ongeldige afhankelijkheid' }, NotesTab: { Notes: 'Notities' }, ResourcesTab: { unitsTpl: ({ value: e }) => `${e}%`, Resources: 'Middelen', Resource: 'Hulpbron', Units: 'Eenheden' }, RecurrenceTab: { title: 'Herhalen' }, SchedulingModePicker: { Normal: 'Normaal', 'Fixed Duration': 'Vaste duur', 'Fixed Units': 'Vaste eenheden', 'Fixed Effort': 'Vast werk' }, ResourceHistogram: { barTipInRange: '<b>{resource}</b> {startDate} - {endDate}<br><span class="{cls}">{allocated} van de {available}</span> toegewezen', barTipOnDate: '<b>{resource}</b> op {startDate}<br><span class="{cls}">{allocated} van de {available}</span> toegewezen', groupBarTipAssignment: '<b>{resource}</b> - <span class="{cls}">{allocated} van de {available}</span>', groupBarTipInRange: '{startDate} - {endDate}<br><span class="{cls}">{allocated} van de {available}</span> toegewezen:<br>{assignments}', groupBarTipOnDate: 'On {startDate}<br><span class="{cls}">{allocated} van de {available}</span> toegewezen:<br>{assignments}', plusMore: '+{value} meer' }, ResourceUtilization: { barTipInRange: '<b>{event}</b> {startDate} - {endDate}<br><span class="{cls}">{allocated}</span> toegewezen', barTipOnDate: '<b>{event}</b> op {startDate}<br><span class="{cls}">{allocated}</span> toegewezen', groupBarTipAssignment: '<b>{event}</b> - <span class="{cls}">{allocated}</span>', groupBarTipInRange: '{startDate} - {endDate}<br><span class="{cls}">{allocated} van de {available}</span> toegewezen:<br>{assignments}', groupBarTipOnDate: 'On {startDate}<br><span class="{cls}">{allocated} van de {available}</span> toegewezen:<br>{assignments}', plusMore: '+{value} meer', nameColumnText: 'Hulpbron / Boeking' }, SchedulingIssueResolutionPopup: { 'Cancel changes': 'Annuleer wijziging en doe niks', schedulingConflict: 'Planningsconflict', emptyCalendar: 'Kalender configuratie fout', cycle: 'Planning lus', Apply: 'Pas toe' }, CycleResolutionPopup: { dependencyLabel: 'Selecteer een afhankelijkheid om beneden aan te passen:', invalidDependencyLabel: 'Er zijn een aantal niet valide afhankelijkheden die moeten worden opgelost:' }, DependencyEdit: { Active: 'Actief' }, SchedulerProBase: { propagating: 'Beregning', storePopulation: 'Indlæser data', finalizing: 'Finaliseren' }, EventSegments: { splitEvent: 'Item splitsen', renameSegment: 'Hernoemen' }, NestedEvents: { deNestingNotAllowed: 'Ontnest niet toegestaan', nestingNotAllowed: 'Nesten niet toegestaan' }, VersionGrid: { compare: 'Vergelijken', description: 'Beschrijving', occurredAt: 'Plaatsvond op', rename: 'Hernoemen', restore: 'Herstellen', stopComparing: 'Vergelijken stoppen' }, Versions: { entityNames: { TaskModel: 'taak', AssignmentModel: 'toewijzing', DependencyModel: 'afhankelijkheid', ProjectModel: 'project', ResourceModel: 'resource', other: 'object' }, entityNamesPlural: { TaskModel: 'taken', AssignmentModel: 'toewijzingen', DependencyModel: 'afhankelijkheden', ProjectModel: 'projecten', ResourceModel: 'resources', other: 'objecten' }, transactionDescriptions: { update: 'Gewijzigd {n} {entities}', add: 'Toegevoegd {n} {entities}', remove: 'Verwijderd {n} {entities}', move: '{n} {entities} verplaatst', mixed: 'Wijzigingen {n} {entities}' }, addEntity: 'Toegevoegd {type} {name}', removeEntity: 'Verwijderd {type} {name}', updateEntity: 'Gewijzigd {type} {name}', moveEntity: '{type} {name} verplaatst van {from} naar {to}', addDependency: 'Afhankelijkheid van {from} naar {to} toegevoegd', removeDependency: 'Afhankelijkheid {from} met {to} verwijderd', updateDependency: 'Gewijzigde afhankelijkheid van {from} naar {to}', addAssignment: 'Resource {resource} toegewezen aan {event}', removeAssignment: 'Resource {resource} verwijderd van {event}', updateAssignment: 'Gewijzigde toewijzing van {resource} aan {event}', noChanges: 'Geen wijzigingen', nullValue: 'niets', versionDateFormat: 'D/M/YYYY HH:mm', undid: 'Ongedaan gemaakt', redid: 'Opnieuw gedaan', editedTask: 'Taak eigenschappen aangepast', deletedTask: 'Taak is verwijderd', movedTask: 'Taak verplaatst', movedTasks: 'Taken verplaatst' } }; const O = o.publishLocale(E); const T = { localeName: 'Nl', localeDesc: 'Nederlands', localeCode: 'nl', Button: { 'Display hints': 'Hints weergeven', Apply: 'Еoepassen' }, Checkbox: { 'Auto apply': 'Automatisch toepassen', Automatically: 'Automatisch' }, CodeEditor: { 'Code editor': 'Code editor', 'Download code': 'Download code' }, Combo: { Theme: 'Selecteer thema', Language: 'Selecteer landinstelling', Size: 'Selecteer grootte' }, Shared: { 'Full size': 'Volledige grootte', 'Locale changed': 'Taal is veranderd', 'Phone size': 'Grootte telefoon' }, Tooltip: { infoButton: 'Klik om informatie weer te geven en van thema of land te wisselen', codeButton: 'Klik om de ingebouwde code-editor te tonen', hintCheck: 'Vink deze optie aan om automatisch hints weer te geven bij het laden van het voorbeeld', fullscreenButton: 'Volledig scherm' } }; const x = o.publishLocale(T); const C = { localeName: 'Nl', localeDesc: 'Nederlands', localeCode: 'nl', Column: { Capacity: 'Capaciteit', City: 'Stad', Company: 'Bedrijf', Duration: 'Looptijd', 'Employment type': 'Type werkgeverschap', End: 'Einde', 'First name': 'Voornaam', Id: '#', Machines: 'Machines', Name: 'Naam', 'Nbr tasks': 'Numerieke taken', 'Production line': 'Productielijn', Rating: 'Beoordeling', Role: 'Rol', Score: 'Score', Staff: 'Personeel', Start: 'Begin', Surname: 'Achternaam', 'Task color': 'Taakkleur', Type: 'Type', 'Unassigned tasks': 'Niet-toegewezen taken' } }; var S = o.publishLocale(C); if (typeof i.exports === 'object' && typeof s === 'object') { const N = (e, a, n, t) => { if (a && typeof a === 'object' || typeof a === 'function') for (const r of Object.getOwnPropertyNames(a))!Object.prototype.hasOwnProperty.call(e, r) && r !== n && Object.defineProperty(e, r, { get: () => a[r], enumerable: !(t = Object.getOwnPropertyDescriptor(a, r)) || t.enumerable }); return e }; i.exports = N(i.exports, s) } return i.exports })
